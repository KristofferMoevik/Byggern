
ATSAM3X8E.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001fc4  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000844  20000000  00081fc4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004a0  20000848  00082810  00020848  2**3
                  ALLOC
  3 .stack        00000400  20000ce8  00082cb0  00020848  2**0
                  ALLOC
  4 .heap         00000200  200010e8  000830b0  00020848  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020844  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002086d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00005035  00000000  00000000  000208c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000cf0  00000000  00000000  000258fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000bfc  00000000  00000000  000265eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000001f8  00000000  00000000  000271e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a8  00000000  00000000  000273df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00010ed6  00000000  00000000  00027587  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00002a1f  00000000  00000000  0003845d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00055902  00000000  00000000  0003ae7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000e2c  00000000  00000000  00090780  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	e8 10 00 20 65 01 08 00 61 01 08 00 61 01 08 00     ... e...a...a...
   80010:	61 01 08 00 61 01 08 00 61 01 08 00 00 00 00 00     a...a...a.......
	...
   8002c:	61 01 08 00 61 01 08 00 00 00 00 00 61 01 08 00     a...a.......a...
   8003c:	a9 02 08 00 61 01 08 00 61 01 08 00 61 01 08 00     ....a...a...a...
   8004c:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   8005c:	61 01 08 00 a5 03 08 00 61 01 08 00 00 00 00 00     a.......a.......
   8006c:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
	...
   80084:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   80094:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800a4:	00 00 00 00 61 01 08 00 61 01 08 00 61 01 08 00     ....a...a...a...
   800b4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800c4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800d4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800e4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000848 	.word	0x20000848
   80110:	00000000 	.word	0x00000000
   80114:	00081fc4 	.word	0x00081fc4

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00081fc4 	.word	0x00081fc4
   80154:	2000084c 	.word	0x2000084c
   80158:	00081fc4 	.word	0x00081fc4
   8015c:	00000000 	.word	0x00000000

00080160 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80160:	e7fe      	b.n	80160 <Dummy_Handler>
	...

00080164 <Reset_Handler>:
{
   80164:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
   80166:	4b11      	ldr	r3, [pc, #68]	; (801ac <Reset_Handler+0x48>)
   80168:	4a11      	ldr	r2, [pc, #68]	; (801b0 <Reset_Handler+0x4c>)
   8016a:	429a      	cmp	r2, r3
   8016c:	d009      	beq.n	80182 <Reset_Handler+0x1e>
   8016e:	4b0f      	ldr	r3, [pc, #60]	; (801ac <Reset_Handler+0x48>)
   80170:	4a0f      	ldr	r2, [pc, #60]	; (801b0 <Reset_Handler+0x4c>)
   80172:	e003      	b.n	8017c <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
   80174:	6811      	ldr	r1, [r2, #0]
   80176:	6019      	str	r1, [r3, #0]
   80178:	3304      	adds	r3, #4
   8017a:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
   8017c:	490d      	ldr	r1, [pc, #52]	; (801b4 <Reset_Handler+0x50>)
   8017e:	428b      	cmp	r3, r1
   80180:	d3f8      	bcc.n	80174 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
   80182:	4b0d      	ldr	r3, [pc, #52]	; (801b8 <Reset_Handler+0x54>)
   80184:	e002      	b.n	8018c <Reset_Handler+0x28>
                *pDest++ = 0;
   80186:	2200      	movs	r2, #0
   80188:	601a      	str	r2, [r3, #0]
   8018a:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
   8018c:	4a0b      	ldr	r2, [pc, #44]	; (801bc <Reset_Handler+0x58>)
   8018e:	4293      	cmp	r3, r2
   80190:	d3f9      	bcc.n	80186 <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80192:	4b0b      	ldr	r3, [pc, #44]	; (801c0 <Reset_Handler+0x5c>)
   80194:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   80198:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   8019c:	4a09      	ldr	r2, [pc, #36]	; (801c4 <Reset_Handler+0x60>)
   8019e:	6093      	str	r3, [r2, #8]
        __libc_init_array();
   801a0:	4b09      	ldr	r3, [pc, #36]	; (801c8 <Reset_Handler+0x64>)
   801a2:	4798      	blx	r3
        main();
   801a4:	4b09      	ldr	r3, [pc, #36]	; (801cc <Reset_Handler+0x68>)
   801a6:	4798      	blx	r3
   801a8:	e7fe      	b.n	801a8 <Reset_Handler+0x44>
   801aa:	bf00      	nop
   801ac:	20000000 	.word	0x20000000
   801b0:	00081fc4 	.word	0x00081fc4
   801b4:	20000844 	.word	0x20000844
   801b8:	20000848 	.word	0x20000848
   801bc:	20000ce8 	.word	0x20000ce8
   801c0:	00080000 	.word	0x00080000
   801c4:	e000ed00 	.word	0xe000ed00
   801c8:	00080529 	.word	0x00080529
   801cc:	000804f5 	.word	0x000804f5

000801d0 <SystemInit>:
 * Initialize the System and update the SystemFrequency variable.
 */
void SystemInit( void )
{
  /* Set FWS according to SYS_BOARD_MCKR configuration */
  EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
   801d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
   801d4:	4a20      	ldr	r2, [pc, #128]	; (80258 <SystemInit+0x88>)
   801d6:	6013      	str	r3, [r2, #0]
  EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
   801d8:	f502 7200 	add.w	r2, r2, #512	; 0x200
   801dc:	6013      	str	r3, [r2, #0]

  /* Initialize main oscillator */
  if ( !(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) )
   801de:	4b1f      	ldr	r3, [pc, #124]	; (8025c <SystemInit+0x8c>)
   801e0:	6a1b      	ldr	r3, [r3, #32]
   801e2:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   801e6:	d107      	bne.n	801f8 <SystemInit+0x28>
  {
    PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
   801e8:	4a1d      	ldr	r2, [pc, #116]	; (80260 <SystemInit+0x90>)
   801ea:	4b1c      	ldr	r3, [pc, #112]	; (8025c <SystemInit+0x8c>)
   801ec:	621a      	str	r2, [r3, #32]
    while ( !(PMC->PMC_SR & PMC_SR_MOSCXTS) )
   801ee:	4b1b      	ldr	r3, [pc, #108]	; (8025c <SystemInit+0x8c>)
   801f0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   801f2:	f013 0f01 	tst.w	r3, #1
   801f6:	d0fa      	beq.n	801ee <SystemInit+0x1e>
    {
    }
  }

  /* Switch to 3-20MHz Xtal oscillator */
  PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
   801f8:	4a1a      	ldr	r2, [pc, #104]	; (80264 <SystemInit+0x94>)
   801fa:	4b18      	ldr	r3, [pc, #96]	; (8025c <SystemInit+0x8c>)
   801fc:	621a      	str	r2, [r3, #32]

  while ( !(PMC->PMC_SR & PMC_SR_MOSCSELS) )
   801fe:	4b17      	ldr	r3, [pc, #92]	; (8025c <SystemInit+0x8c>)
   80200:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80202:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80206:	d0fa      	beq.n	801fe <SystemInit+0x2e>
  {
  }
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
   80208:	4a14      	ldr	r2, [pc, #80]	; (8025c <SystemInit+0x8c>)
   8020a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8020c:	f023 0303 	bic.w	r3, r3, #3
   80210:	f043 0301 	orr.w	r3, r3, #1
   80214:	6313      	str	r3, [r2, #48]	; 0x30
  while (!(PMC->PMC_SR & PMC_SR_MCKRDY))
   80216:	4b11      	ldr	r3, [pc, #68]	; (8025c <SystemInit+0x8c>)
   80218:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8021a:	f013 0f08 	tst.w	r3, #8
   8021e:	d0fa      	beq.n	80216 <SystemInit+0x46>
  {
  }

  /* Initialize PLLA */
  PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
   80220:	4a11      	ldr	r2, [pc, #68]	; (80268 <SystemInit+0x98>)
   80222:	4b0e      	ldr	r3, [pc, #56]	; (8025c <SystemInit+0x8c>)
   80224:	629a      	str	r2, [r3, #40]	; 0x28
  while ( !(PMC->PMC_SR & PMC_SR_LOCKA) )
   80226:	4b0d      	ldr	r3, [pc, #52]	; (8025c <SystemInit+0x8c>)
   80228:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8022a:	f013 0f02 	tst.w	r3, #2
   8022e:	d0fa      	beq.n	80226 <SystemInit+0x56>
  {
  }

  /* Switch to main clock */
  PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
   80230:	2211      	movs	r2, #17
   80232:	4b0a      	ldr	r3, [pc, #40]	; (8025c <SystemInit+0x8c>)
   80234:	631a      	str	r2, [r3, #48]	; 0x30
  while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
   80236:	4b09      	ldr	r3, [pc, #36]	; (8025c <SystemInit+0x8c>)
   80238:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8023a:	f013 0f08 	tst.w	r3, #8
   8023e:	d0fa      	beq.n	80236 <SystemInit+0x66>
  {
  }

  /* Switch to PLLA */
  PMC->PMC_MCKR = SYS_BOARD_MCKR;
   80240:	2212      	movs	r2, #18
   80242:	4b06      	ldr	r3, [pc, #24]	; (8025c <SystemInit+0x8c>)
   80244:	631a      	str	r2, [r3, #48]	; 0x30
  while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
   80246:	4b05      	ldr	r3, [pc, #20]	; (8025c <SystemInit+0x8c>)
   80248:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8024a:	f013 0f08 	tst.w	r3, #8
   8024e:	d0fa      	beq.n	80246 <SystemInit+0x76>
  {
  }

  SystemCoreClock = CHIP_FREQ_CPU_MAX;
   80250:	4a06      	ldr	r2, [pc, #24]	; (8026c <SystemInit+0x9c>)
   80252:	4b07      	ldr	r3, [pc, #28]	; (80270 <SystemInit+0xa0>)
   80254:	601a      	str	r2, [r3, #0]
   80256:	4770      	bx	lr
   80258:	400e0a00 	.word	0x400e0a00
   8025c:	400e0600 	.word	0x400e0600
   80260:	00370809 	.word	0x00370809
   80264:	01370809 	.word	0x01370809
   80268:	200d3f01 	.word	0x200d3f01
   8026c:	0501bd00 	.word	0x0501bd00
   80270:	20000000 	.word	0x20000000

00080274 <time_init>:
static uint64_t now = 0;

__attribute__((constructor)) void time_init(void){
	// Clock calibration is set to '(num cycles for 1ms) / 8'
	// (SysTick is by default set to use 8x clock divisor)
	calib = SysTick->CALIB * 8;
   80274:	4a09      	ldr	r2, [pc, #36]	; (8029c <time_init+0x28>)
   80276:	68d3      	ldr	r3, [r2, #12]
   80278:	00db      	lsls	r3, r3, #3
   8027a:	2100      	movs	r1, #0
   8027c:	4808      	ldr	r0, [pc, #32]	; (802a0 <time_init+0x2c>)
   8027e:	6003      	str	r3, [r0, #0]
   80280:	6041      	str	r1, [r0, #4]
	// Set reload at calib-1 ticks
	SysTick->LOAD = (calib & SysTick_LOAD_RELOAD_Msk)-1;
   80282:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   80286:	3b01      	subs	r3, #1
   80288:	6053      	str	r3, [r2, #4]
	// Reset counter
	SysTick->VAL = 0;
   8028a:	6091      	str	r1, [r2, #8]
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   8028c:	2120      	movs	r1, #32
   8028e:	4b05      	ldr	r3, [pc, #20]	; (802a4 <time_init+0x30>)
   80290:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
	// Set interrupt priority
	NVIC_SetPriority(SysTick_IRQn, 2);
	SysTick->CTRL =
   80294:	2307      	movs	r3, #7
   80296:	6013      	str	r3, [r2, #0]
   80298:	4770      	bx	lr
   8029a:	bf00      	nop
   8029c:	e000e010 	.word	0xe000e010
   802a0:	20000cb8 	.word	0x20000cb8
   802a4:	e000ed00 	.word	0xe000ed00

000802a8 <SysTick_Handler>:
	((1 << SysTick_CTRL_TICKINT_Pos)   & SysTick_CTRL_TICKINT_Msk)      |   // Enable interrupt
	((1 << SysTick_CTRL_ENABLE_Pos)    & SysTick_CTRL_ENABLE_Msk);	        // Enable SysTick
}


void SysTick_Handler(void){
   802a8:	b430      	push	{r4, r5}
	now += calib;
   802aa:	4906      	ldr	r1, [pc, #24]	; (802c4 <SysTick_Handler+0x1c>)
   802ac:	e9d1 2300 	ldrd	r2, r3, [r1]
   802b0:	4805      	ldr	r0, [pc, #20]	; (802c8 <SysTick_Handler+0x20>)
   802b2:	e9d0 4500 	ldrd	r4, r5, [r0]
   802b6:	1912      	adds	r2, r2, r4
   802b8:	416b      	adcs	r3, r5
   802ba:	e9c1 2300 	strd	r2, r3, [r1]
}
   802be:	bc30      	pop	{r4, r5}
   802c0:	4770      	bx	lr
   802c2:	bf00      	nop
   802c4:	20000868 	.word	0x20000868
   802c8:	20000cb8 	.word	0x20000cb8

000802cc <push>:
};
RingBuf ringBuf = {0};


int push(RingBuf* rb, uint8_t val){
	if(rb->length >= (sizeof(rb->buffer)/sizeof(rb->buffer[0]))){
   802cc:	f8d0 240c 	ldr.w	r2, [r0, #1036]	; 0x40c
   802d0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
   802d4:	d20c      	bcs.n	802f0 <push+0x24>
		return 0;
	}
	rb->buffer[rb->insertIdx] = val;
   802d6:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
   802da:	54c1      	strb	r1, [r0, r3]
	rb->insertIdx = (rb->insertIdx + 1) % (sizeof(rb->buffer)/sizeof(rb->buffer[0]));
   802dc:	3301      	adds	r3, #1
   802de:	f3c3 0309 	ubfx	r3, r3, #0, #10
   802e2:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
	rb->length++;
   802e6:	3201      	adds	r2, #1
   802e8:	f8c0 240c 	str.w	r2, [r0, #1036]	; 0x40c
	return 1;
   802ec:	2001      	movs	r0, #1
   802ee:	4770      	bx	lr
		return 0;
   802f0:	2000      	movs	r0, #0
}
   802f2:	4770      	bx	lr

000802f4 <pop>:

int pop(RingBuf* rb, uint8_t* val){
   802f4:	4603      	mov	r3, r0
	if(!rb->length){
   802f6:	f8d0 040c 	ldr.w	r0, [r0, #1036]	; 0x40c
   802fa:	b180      	cbz	r0, 8031e <pop+0x2a>
		return 0;
	}
	*val = rb->buffer[rb->removeIdx];
   802fc:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
   80300:	5c9a      	ldrb	r2, [r3, r2]
   80302:	700a      	strb	r2, [r1, #0]
	rb->removeIdx = (rb->removeIdx + 1) % (sizeof(rb->buffer)/sizeof(rb->buffer[0]));
   80304:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
   80308:	3201      	adds	r2, #1
   8030a:	f3c2 0209 	ubfx	r2, r2, #0, #10
   8030e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
	rb->length--;
   80312:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
   80316:	3a01      	subs	r2, #1
   80318:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
	return 1;
   8031c:	2001      	movs	r0, #1
}
   8031e:	4770      	bx	lr

00080320 <uart_init>:

void uart_init(uint32_t cpufreq, uint32_t baudrate){
	PMC->PMC_PCER0 |= (1 << ID_UART);
   80320:	4a12      	ldr	r2, [pc, #72]	; (8036c <uart_init+0x4c>)
   80322:	6913      	ldr	r3, [r2, #16]
   80324:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   80328:	6113      	str	r3, [r2, #16]
	
	// Set UART pins (A8, A9) to use alternate function (this disables regular IO)
	PIOA->PIO_PDR   |=   PIO_PA8 | PIO_PA9;
   8032a:	4b11      	ldr	r3, [pc, #68]	; (80370 <uart_init+0x50>)
   8032c:	685a      	ldr	r2, [r3, #4]
   8032e:	f442 7240 	orr.w	r2, r2, #768	; 0x300
   80332:	605a      	str	r2, [r3, #4]
	// Set alternate function A (see tables 9-2, 34-2)
	PIOA->PIO_ABSR  &= ~(PIO_PA8 | PIO_PA9);
   80334:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80336:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   8033a:	671a      	str	r2, [r3, #112]	; 0x70
	
	// Configure UART settings
	UART->UART_CR   |= UART_CR_TXEN | UART_CR_RXEN;
   8033c:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
   80340:	681a      	ldr	r2, [r3, #0]
   80342:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   80346:	601a      	str	r2, [r3, #0]
	UART->UART_MR   |= UART_MR_PAR_NO;
   80348:	685a      	ldr	r2, [r3, #4]
   8034a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   8034e:	605a      	str	r2, [r3, #4]
	UART->UART_BRGR = cpufreq / 16 / baudrate;
   80350:	0900      	lsrs	r0, r0, #4
   80352:	fbb0 f1f1 	udiv	r1, r0, r1
   80356:	6219      	str	r1, [r3, #32]
	
	
	// Configure interrupts on receive ready and errors
	UART->UART_IDR = 0xFFFFFFFF;
   80358:	f04f 32ff 	mov.w	r2, #4294967295
   8035c:	60da      	str	r2, [r3, #12]
	UART->UART_IER = UART_IER_RXRDY | UART_IER_OVRE | UART_IER_FRAME | UART_IER_PARE;
   8035e:	22e1      	movs	r2, #225	; 0xe1
   80360:	609a      	str	r2, [r3, #8]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80362:	f44f 7280 	mov.w	r2, #256	; 0x100
   80366:	4b03      	ldr	r3, [pc, #12]	; (80374 <uart_init+0x54>)
   80368:	601a      	str	r2, [r3, #0]
   8036a:	4770      	bx	lr
   8036c:	400e0600 	.word	0x400e0600
   80370:	400e0e00 	.word	0x400e0e00
   80374:	e000e100 	.word	0xe000e100

00080378 <uart_tx>:
	NVIC_EnableIRQ((IRQn_Type) ID_UART);
	
}

void uart_tx(uint8_t val){
	while(!(UART->UART_SR & UART_SR_TXEMPTY)){}
   80378:	4b03      	ldr	r3, [pc, #12]	; (80388 <uart_tx+0x10>)
   8037a:	695b      	ldr	r3, [r3, #20]
   8037c:	f413 7f00 	tst.w	r3, #512	; 0x200
   80380:	d0fa      	beq.n	80378 <uart_tx>
	UART->UART_THR = val;
   80382:	4b01      	ldr	r3, [pc, #4]	; (80388 <uart_tx+0x10>)
   80384:	61d8      	str	r0, [r3, #28]
   80386:	4770      	bx	lr
   80388:	400e0800 	.word	0x400e0800

0008038c <uart_rx>:
}

uint8_t uart_rx(uint8_t* val){
   8038c:	b508      	push	{r3, lr}
	return pop(&ringBuf, val);
   8038e:	4601      	mov	r1, r0
   80390:	4802      	ldr	r0, [pc, #8]	; (8039c <uart_rx+0x10>)
   80392:	4b03      	ldr	r3, [pc, #12]	; (803a0 <uart_rx+0x14>)
   80394:	4798      	blx	r3
}
   80396:	b2c0      	uxtb	r0, r0
   80398:	bd08      	pop	{r3, pc}
   8039a:	bf00      	nop
   8039c:	20000870 	.word	0x20000870
   803a0:	000802f5 	.word	0x000802f5

000803a4 <UART_Handler>:
	}
	return r;
}


void UART_Handler(){
   803a4:	b508      	push	{r3, lr}
	
	uint32_t status = UART->UART_SR;
   803a6:	4b0c      	ldr	r3, [pc, #48]	; (803d8 <UART_Handler+0x34>)
   803a8:	695b      	ldr	r3, [r3, #20]
	
	// Errors: Reset UART
	if(status & (UART_SR_OVRE | UART_SR_FRAME | UART_SR_PARE)){
   803aa:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   803ae:	d003      	beq.n	803b8 <UART_Handler+0x14>
		UART->UART_CR = UART_CR_RXEN | UART_CR_TXEN | UART_CR_RSTSTA;
   803b0:	f44f 71a8 	mov.w	r1, #336	; 0x150
   803b4:	4a08      	ldr	r2, [pc, #32]	; (803d8 <UART_Handler+0x34>)
   803b6:	6011      	str	r1, [r2, #0]
	}
	
	// Receive ready: push to ring buffer
	if(status & UART_SR_RXRDY){
   803b8:	f013 0f01 	tst.w	r3, #1
   803bc:	d100      	bne.n	803c0 <UART_Handler+0x1c>
   803be:	bd08      	pop	{r3, pc}
		if(!push(&ringBuf, UART->UART_RHR & 0xff)){
   803c0:	4b05      	ldr	r3, [pc, #20]	; (803d8 <UART_Handler+0x34>)
   803c2:	6999      	ldr	r1, [r3, #24]
   803c4:	b2c9      	uxtb	r1, r1
   803c6:	4805      	ldr	r0, [pc, #20]	; (803dc <UART_Handler+0x38>)
   803c8:	4b05      	ldr	r3, [pc, #20]	; (803e0 <UART_Handler+0x3c>)
   803ca:	4798      	blx	r3
   803cc:	2800      	cmp	r0, #0
   803ce:	d1f6      	bne.n	803be <UART_Handler+0x1a>
			printf("UART receive buffer full\n");
   803d0:	4804      	ldr	r0, [pc, #16]	; (803e4 <UART_Handler+0x40>)
   803d2:	4b05      	ldr	r3, [pc, #20]	; (803e8 <UART_Handler+0x44>)
   803d4:	4798      	blx	r3
		}
	}
	
}
   803d6:	e7f2      	b.n	803be <UART_Handler+0x1a>
   803d8:	400e0800 	.word	0x400e0800
   803dc:	20000870 	.word	0x20000870
   803e0:	000802cd 	.word	0x000802cd
   803e4:	00081f78 	.word	0x00081f78
   803e8:	000806b1 	.word	0x000806b1

000803ec <_sbrk>:
// See https://interrupt.memfault.com/blog/boostrapping-libc-with-newlib

extern int _end;
#include <sys/stat.h>

void *_sbrk(int incr){
   803ec:	4603      	mov	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if(heap == NULL){
   803ee:	4a08      	ldr	r2, [pc, #32]	; (80410 <_sbrk+0x24>)
   803f0:	f8d2 2410 	ldr.w	r2, [r2, #1040]	; 0x410
   803f4:	b132      	cbz	r2, 80404 <_sbrk+0x18>
		heap = (unsigned char*)&_end;
	}
	prev_heap = heap;
   803f6:	4a06      	ldr	r2, [pc, #24]	; (80410 <_sbrk+0x24>)
   803f8:	f8d2 0410 	ldr.w	r0, [r2, #1040]	; 0x410

	heap += incr;
   803fc:	4403      	add	r3, r0
   803fe:	f8c2 3410 	str.w	r3, [r2, #1040]	; 0x410

	return prev_heap;
}
   80402:	4770      	bx	lr
		heap = (unsigned char*)&_end;
   80404:	4903      	ldr	r1, [pc, #12]	; (80414 <_sbrk+0x28>)
   80406:	4a02      	ldr	r2, [pc, #8]	; (80410 <_sbrk+0x24>)
   80408:	f8c2 1410 	str.w	r1, [r2, #1040]	; 0x410
   8040c:	e7f3      	b.n	803f6 <_sbrk+0xa>
   8040e:	bf00      	nop
   80410:	20000870 	.word	0x20000870
   80414:	200012e8 	.word	0x200012e8

00080418 <_close>:

int _close(int file){
	return -1;
}
   80418:	f04f 30ff 	mov.w	r0, #4294967295
   8041c:	4770      	bx	lr

0008041e <_fstat>:

int _fstat(int file, struct stat* st){
	st->st_mode = S_IFCHR;
   8041e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80422:	604b      	str	r3, [r1, #4]
	return 0;
}
   80424:	2000      	movs	r0, #0
   80426:	4770      	bx	lr

00080428 <_isatty>:

int _isatty(int file){
	return 1;
}
   80428:	2001      	movs	r0, #1
   8042a:	4770      	bx	lr

0008042c <_lseek>:

int _lseek(int file, int ptr, int dir){
	return 0;
}
   8042c:	2000      	movs	r0, #0
   8042e:	4770      	bx	lr

00080430 <_write>:

int _getpid(void){
	return -1;
}

int _write(int file, char* ptr, int len){
   80430:	b570      	push	{r4, r5, r6, lr}
	if(file > 1){
   80432:	2801      	cmp	r0, #1
   80434:	dc0b      	bgt.n	8044e <_write+0x1e>
   80436:	460e      	mov	r6, r1
   80438:	4615      	mov	r5, r2
   8043a:	2400      	movs	r4, #0
   8043c:	e003      	b.n	80446 <_write+0x16>
		return -1;
	}

	for(int idx = 0; idx < len; idx++){
		uart_tx((uint8_t)ptr[idx]);
   8043e:	5d30      	ldrb	r0, [r6, r4]
   80440:	4b04      	ldr	r3, [pc, #16]	; (80454 <_write+0x24>)
   80442:	4798      	blx	r3
	for(int idx = 0; idx < len; idx++){
   80444:	3401      	adds	r4, #1
   80446:	42ac      	cmp	r4, r5
   80448:	dbf9      	blt.n	8043e <_write+0xe>
	}
	return len;
}
   8044a:	4628      	mov	r0, r5
   8044c:	bd70      	pop	{r4, r5, r6, pc}
		return -1;
   8044e:	f04f 35ff 	mov.w	r5, #4294967295
   80452:	e7fa      	b.n	8044a <_write+0x1a>
   80454:	00080379 	.word	0x00080379

00080458 <_read>:

int _read(int file, char* ptr, int len){
   80458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if(file > 1){
   8045a:	2801      	cmp	r0, #1
   8045c:	dc0c      	bgt.n	80478 <_read+0x20>
   8045e:	4616      	mov	r6, r2
   80460:	460f      	mov	r7, r1
   80462:	2400      	movs	r4, #0
   80464:	4625      	mov	r5, r4
		return -1;
	}
	
	int nread = 0;
	for(int idx = 0; idx < len; idx++){
   80466:	42b4      	cmp	r4, r6
   80468:	da08      	bge.n	8047c <_read+0x24>
		int b = uart_rx((uint8_t*)&ptr[idx]);
   8046a:	1938      	adds	r0, r7, r4
   8046c:	4b04      	ldr	r3, [pc, #16]	; (80480 <_read+0x28>)
   8046e:	4798      	blx	r3
		nread += b;
   80470:	4405      	add	r5, r0
		if(!b){
   80472:	b118      	cbz	r0, 8047c <_read+0x24>
	for(int idx = 0; idx < len; idx++){
   80474:	3401      	adds	r4, #1
   80476:	e7f6      	b.n	80466 <_read+0xe>
		return -1;
   80478:	f04f 35ff 	mov.w	r5, #4294967295
			return nread;
		}
	}
	return nread;
}
   8047c:	4628      	mov	r0, r5
   8047e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80480:	0008038d 	.word	0x0008038d

00080484 <init_servo>:
#ifndef SERVO_H_
#define SERVO_H_

void init_servo(){
	// PIOB->PIO_PER |= PIO_PB13; // enable IO
	PIOB->PIO_OER |= PIO_PB13; // set as output
   80484:	4b18      	ldr	r3, [pc, #96]	; (804e8 <init_servo+0x64>)
   80486:	691a      	ldr	r2, [r3, #16]
   80488:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   8048c:	611a      	str	r2, [r3, #16]
	PIOB->PIO_PDR |= PIO_PB13;
   8048e:	685a      	ldr	r2, [r3, #4]
   80490:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   80494:	605a      	str	r2, [r3, #4]
	// Assign peripheral function B to pin PB13 with is PWM
	PIOB->PIO_ABSR |= PIO_ABSR_P13;
   80496:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80498:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   8049c:	671a      	str	r2, [r3, #112]	; 0x70
	
	PMC->PMC_PCER1 |= (1 << 4);
   8049e:	4a13      	ldr	r2, [pc, #76]	; (804ec <init_servo+0x68>)
   804a0:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   804a4:	f043 0310 	orr.w	r3, r3, #16
   804a8:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
	
	
	//PMC->PMC_SCER = PMC_SCER_PCK0 | PMC_SCER_PCK1 | PMC_SCER_PCK2;
	PWM->PWM_WPCR &= ~PWM_WPSR_WPHWS2;
   804ac:	4b10      	ldr	r3, [pc, #64]	; (804f0 <init_servo+0x6c>)
   804ae:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
   804b2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
   804b6:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PWM->PWM_WPCR &= ~PWM_WPSR_WPSWS2;	
   804ba:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
   804be:	f022 0204 	bic.w	r2, r2, #4
   804c2:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	PWM->PWM_CH_NUM[1].PWM_CMR = PWM_CMR_CPRE_MCK_DIV_1024 | PWM_CMR_CPOL | PWM_CMR_CALG;
   804c6:	f240 320a 	movw	r2, #778	; 0x30a
   804ca:	f8c3 2220 	str.w	r2, [r3, #544]	; 0x220
	float wanted_period = 0.02;
	int default_MCK = 84000000;
	int X = 1024;
	int CPRD = (wanted_period * default_MCK) / (2 * X);
	
	PWM->PWM_CH_NUM[1].PWM_CPRD = CPRD; // Side 1048 ;
   804ce:	f44f 724d 	mov.w	r2, #820	; 0x334
   804d2:	f8c3 222c 	str.w	r2, [r3, #556]	; 0x22c
	int min_duty = (0.9/20) * CPRD;
	int max_duty = (2.1/20) * CPRD;
	PWM->PWM_CH_NUM[1].PWM_CDTY = min_duty;
   804d6:	2224      	movs	r2, #36	; 0x24
   804d8:	f8c3 2224 	str.w	r2, [r3, #548]	; 0x224
	PWM->PWM_ENA |= PWM_ENA_CHID1;
   804dc:	685a      	ldr	r2, [r3, #4]
   804de:	f042 0202 	orr.w	r2, r2, #2
   804e2:	605a      	str	r2, [r3, #4]
   804e4:	4770      	bx	lr
   804e6:	bf00      	nop
   804e8:	400e1000 	.word	0x400e1000
   804ec:	400e0600 	.word	0x400e0600
   804f0:	40094000 	.word	0x40094000

000804f4 <main>:
		}
	}
}

int main(void)
{
   804f4:	b508      	push	{r3, lr}
    /* Initialize the SAM system */

    SystemInit();
   804f6:	4b07      	ldr	r3, [pc, #28]	; (80514 <main+0x20>)
   804f8:	4798      	blx	r3
	uart_init(84000000, 9600);
   804fa:	f44f 5116 	mov.w	r1, #9600	; 0x2580
   804fe:	4806      	ldr	r0, [pc, #24]	; (80518 <main+0x24>)
   80500:	4b06      	ldr	r3, [pc, #24]	; (8051c <main+0x28>)
   80502:	4798      	blx	r3
	WDT -> WDT_MR = WDT_MR_WDDIS;
   80504:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80508:	4b05      	ldr	r3, [pc, #20]	; (80520 <main+0x2c>)
   8050a:	605a      	str	r2, [r3, #4]
		
	init_servo();
   8050c:	4b05      	ldr	r3, [pc, #20]	; (80524 <main+0x30>)
   8050e:	4798      	blx	r3
   80510:	e7fe      	b.n	80510 <main+0x1c>
   80512:	bf00      	nop
   80514:	000801d1 	.word	0x000801d1
   80518:	0501bd00 	.word	0x0501bd00
   8051c:	00080321 	.word	0x00080321
   80520:	400e1a50 	.word	0x400e1a50
   80524:	00080485 	.word	0x00080485

00080528 <__libc_init_array>:
   80528:	b570      	push	{r4, r5, r6, lr}
   8052a:	4e0f      	ldr	r6, [pc, #60]	; (80568 <__libc_init_array+0x40>)
   8052c:	4d0f      	ldr	r5, [pc, #60]	; (8056c <__libc_init_array+0x44>)
   8052e:	1b76      	subs	r6, r6, r5
   80530:	10b6      	asrs	r6, r6, #2
   80532:	bf18      	it	ne
   80534:	2400      	movne	r4, #0
   80536:	d005      	beq.n	80544 <__libc_init_array+0x1c>
   80538:	3401      	adds	r4, #1
   8053a:	f855 3b04 	ldr.w	r3, [r5], #4
   8053e:	4798      	blx	r3
   80540:	42a6      	cmp	r6, r4
   80542:	d1f9      	bne.n	80538 <__libc_init_array+0x10>
   80544:	4e0a      	ldr	r6, [pc, #40]	; (80570 <__libc_init_array+0x48>)
   80546:	4d0b      	ldr	r5, [pc, #44]	; (80574 <__libc_init_array+0x4c>)
   80548:	f001 fd28 	bl	81f9c <_init>
   8054c:	1b76      	subs	r6, r6, r5
   8054e:	10b6      	asrs	r6, r6, #2
   80550:	bf18      	it	ne
   80552:	2400      	movne	r4, #0
   80554:	d006      	beq.n	80564 <__libc_init_array+0x3c>
   80556:	3401      	adds	r4, #1
   80558:	f855 3b04 	ldr.w	r3, [r5], #4
   8055c:	4798      	blx	r3
   8055e:	42a6      	cmp	r6, r4
   80560:	d1f9      	bne.n	80556 <__libc_init_array+0x2e>
   80562:	bd70      	pop	{r4, r5, r6, pc}
   80564:	bd70      	pop	{r4, r5, r6, pc}
   80566:	bf00      	nop
   80568:	00081fa8 	.word	0x00081fa8
   8056c:	00081fa8 	.word	0x00081fa8
   80570:	00081fb4 	.word	0x00081fb4
   80574:	00081fa8 	.word	0x00081fa8

00080578 <memset>:
   80578:	b470      	push	{r4, r5, r6}
   8057a:	0786      	lsls	r6, r0, #30
   8057c:	d046      	beq.n	8060c <memset+0x94>
   8057e:	1e54      	subs	r4, r2, #1
   80580:	2a00      	cmp	r2, #0
   80582:	d041      	beq.n	80608 <memset+0x90>
   80584:	b2ca      	uxtb	r2, r1
   80586:	4603      	mov	r3, r0
   80588:	e002      	b.n	80590 <memset+0x18>
   8058a:	f114 34ff 	adds.w	r4, r4, #4294967295
   8058e:	d33b      	bcc.n	80608 <memset+0x90>
   80590:	f803 2b01 	strb.w	r2, [r3], #1
   80594:	079d      	lsls	r5, r3, #30
   80596:	d1f8      	bne.n	8058a <memset+0x12>
   80598:	2c03      	cmp	r4, #3
   8059a:	d92e      	bls.n	805fa <memset+0x82>
   8059c:	b2cd      	uxtb	r5, r1
   8059e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   805a2:	2c0f      	cmp	r4, #15
   805a4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   805a8:	d919      	bls.n	805de <memset+0x66>
   805aa:	4626      	mov	r6, r4
   805ac:	f103 0210 	add.w	r2, r3, #16
   805b0:	3e10      	subs	r6, #16
   805b2:	2e0f      	cmp	r6, #15
   805b4:	f842 5c10 	str.w	r5, [r2, #-16]
   805b8:	f842 5c0c 	str.w	r5, [r2, #-12]
   805bc:	f842 5c08 	str.w	r5, [r2, #-8]
   805c0:	f842 5c04 	str.w	r5, [r2, #-4]
   805c4:	f102 0210 	add.w	r2, r2, #16
   805c8:	d8f2      	bhi.n	805b0 <memset+0x38>
   805ca:	f1a4 0210 	sub.w	r2, r4, #16
   805ce:	f022 020f 	bic.w	r2, r2, #15
   805d2:	f004 040f 	and.w	r4, r4, #15
   805d6:	3210      	adds	r2, #16
   805d8:	2c03      	cmp	r4, #3
   805da:	4413      	add	r3, r2
   805dc:	d90d      	bls.n	805fa <memset+0x82>
   805de:	461e      	mov	r6, r3
   805e0:	4622      	mov	r2, r4
   805e2:	3a04      	subs	r2, #4
   805e4:	2a03      	cmp	r2, #3
   805e6:	f846 5b04 	str.w	r5, [r6], #4
   805ea:	d8fa      	bhi.n	805e2 <memset+0x6a>
   805ec:	1f22      	subs	r2, r4, #4
   805ee:	f022 0203 	bic.w	r2, r2, #3
   805f2:	3204      	adds	r2, #4
   805f4:	4413      	add	r3, r2
   805f6:	f004 0403 	and.w	r4, r4, #3
   805fa:	b12c      	cbz	r4, 80608 <memset+0x90>
   805fc:	b2c9      	uxtb	r1, r1
   805fe:	441c      	add	r4, r3
   80600:	f803 1b01 	strb.w	r1, [r3], #1
   80604:	429c      	cmp	r4, r3
   80606:	d1fb      	bne.n	80600 <memset+0x88>
   80608:	bc70      	pop	{r4, r5, r6}
   8060a:	4770      	bx	lr
   8060c:	4614      	mov	r4, r2
   8060e:	4603      	mov	r3, r0
   80610:	e7c2      	b.n	80598 <memset+0x20>
   80612:	bf00      	nop

00080614 <_puts_r>:
   80614:	b5f0      	push	{r4, r5, r6, r7, lr}
   80616:	4605      	mov	r5, r0
   80618:	b089      	sub	sp, #36	; 0x24
   8061a:	4608      	mov	r0, r1
   8061c:	460c      	mov	r4, r1
   8061e:	2701      	movs	r7, #1
   80620:	f000 f84e 	bl	806c0 <strlen>
   80624:	2602      	movs	r6, #2
   80626:	19c3      	adds	r3, r0, r7
   80628:	4920      	ldr	r1, [pc, #128]	; (806ac <_puts_r+0x98>)
   8062a:	9303      	str	r3, [sp, #12]
   8062c:	6bab      	ldr	r3, [r5, #56]	; 0x38
   8062e:	aa04      	add	r2, sp, #16
   80630:	9404      	str	r4, [sp, #16]
   80632:	9005      	str	r0, [sp, #20]
   80634:	68ac      	ldr	r4, [r5, #8]
   80636:	9707      	str	r7, [sp, #28]
   80638:	9602      	str	r6, [sp, #8]
   8063a:	9106      	str	r1, [sp, #24]
   8063c:	9201      	str	r2, [sp, #4]
   8063e:	b353      	cbz	r3, 80696 <_puts_r+0x82>
   80640:	6e63      	ldr	r3, [r4, #100]	; 0x64
   80642:	f013 0f01 	tst.w	r3, #1
   80646:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8064a:	b29a      	uxth	r2, r3
   8064c:	d101      	bne.n	80652 <_puts_r+0x3e>
   8064e:	0590      	lsls	r0, r2, #22
   80650:	d525      	bpl.n	8069e <_puts_r+0x8a>
   80652:	0491      	lsls	r1, r2, #18
   80654:	d406      	bmi.n	80664 <_puts_r+0x50>
   80656:	6e62      	ldr	r2, [r4, #100]	; 0x64
   80658:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8065c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   80660:	81a3      	strh	r3, [r4, #12]
   80662:	6662      	str	r2, [r4, #100]	; 0x64
   80664:	4628      	mov	r0, r5
   80666:	aa01      	add	r2, sp, #4
   80668:	4621      	mov	r1, r4
   8066a:	f000 fb4b 	bl	80d04 <__sfvwrite_r>
   8066e:	6e63      	ldr	r3, [r4, #100]	; 0x64
   80670:	2800      	cmp	r0, #0
   80672:	bf0c      	ite	eq
   80674:	250a      	moveq	r5, #10
   80676:	f04f 35ff 	movne.w	r5, #4294967295
   8067a:	07da      	lsls	r2, r3, #31
   8067c:	d402      	bmi.n	80684 <_puts_r+0x70>
   8067e:	89a3      	ldrh	r3, [r4, #12]
   80680:	059b      	lsls	r3, r3, #22
   80682:	d502      	bpl.n	8068a <_puts_r+0x76>
   80684:	4628      	mov	r0, r5
   80686:	b009      	add	sp, #36	; 0x24
   80688:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8068a:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8068c:	f000 fce2 	bl	81054 <__retarget_lock_release_recursive>
   80690:	4628      	mov	r0, r5
   80692:	b009      	add	sp, #36	; 0x24
   80694:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80696:	4628      	mov	r0, r5
   80698:	f000 f9a8 	bl	809ec <__sinit>
   8069c:	e7d0      	b.n	80640 <_puts_r+0x2c>
   8069e:	6da0      	ldr	r0, [r4, #88]	; 0x58
   806a0:	f000 fcd6 	bl	81050 <__retarget_lock_acquire_recursive>
   806a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   806a8:	b29a      	uxth	r2, r3
   806aa:	e7d2      	b.n	80652 <_puts_r+0x3e>
   806ac:	00081f98 	.word	0x00081f98

000806b0 <puts>:
   806b0:	4b02      	ldr	r3, [pc, #8]	; (806bc <puts+0xc>)
   806b2:	4601      	mov	r1, r0
   806b4:	6818      	ldr	r0, [r3, #0]
   806b6:	f7ff bfad 	b.w	80614 <_puts_r>
   806ba:	bf00      	nop
   806bc:	20000004 	.word	0x20000004

000806c0 <strlen>:
   806c0:	f020 0103 	bic.w	r1, r0, #3
   806c4:	f010 0003 	ands.w	r0, r0, #3
   806c8:	f1c0 0000 	rsb	r0, r0, #0
   806cc:	f851 3b04 	ldr.w	r3, [r1], #4
   806d0:	f100 0c04 	add.w	ip, r0, #4
   806d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   806d8:	f06f 0200 	mvn.w	r2, #0
   806dc:	bf1c      	itt	ne
   806de:	fa22 f20c 	lsrne.w	r2, r2, ip
   806e2:	4313      	orrne	r3, r2
   806e4:	f04f 0c01 	mov.w	ip, #1
   806e8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   806ec:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   806f0:	eba3 020c 	sub.w	r2, r3, ip
   806f4:	ea22 0203 	bic.w	r2, r2, r3
   806f8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   806fc:	bf04      	itt	eq
   806fe:	f851 3b04 	ldreq.w	r3, [r1], #4
   80702:	3004      	addeq	r0, #4
   80704:	d0f4      	beq.n	806f0 <strlen+0x30>
   80706:	f1c2 0100 	rsb	r1, r2, #0
   8070a:	ea02 0201 	and.w	r2, r2, r1
   8070e:	fab2 f282 	clz	r2, r2
   80712:	f1c2 021f 	rsb	r2, r2, #31
   80716:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   8071a:	4770      	bx	lr

0008071c <__swsetup_r>:
   8071c:	b538      	push	{r3, r4, r5, lr}
   8071e:	4b30      	ldr	r3, [pc, #192]	; (807e0 <__swsetup_r+0xc4>)
   80720:	4605      	mov	r5, r0
   80722:	6818      	ldr	r0, [r3, #0]
   80724:	460c      	mov	r4, r1
   80726:	b110      	cbz	r0, 8072e <__swsetup_r+0x12>
   80728:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8072a:	2b00      	cmp	r3, #0
   8072c:	d038      	beq.n	807a0 <__swsetup_r+0x84>
   8072e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   80732:	b293      	uxth	r3, r2
   80734:	0718      	lsls	r0, r3, #28
   80736:	d50c      	bpl.n	80752 <__swsetup_r+0x36>
   80738:	6920      	ldr	r0, [r4, #16]
   8073a:	b1a8      	cbz	r0, 80768 <__swsetup_r+0x4c>
   8073c:	f013 0201 	ands.w	r2, r3, #1
   80740:	d01e      	beq.n	80780 <__swsetup_r+0x64>
   80742:	2200      	movs	r2, #0
   80744:	6963      	ldr	r3, [r4, #20]
   80746:	60a2      	str	r2, [r4, #8]
   80748:	425b      	negs	r3, r3
   8074a:	61a3      	str	r3, [r4, #24]
   8074c:	b1f0      	cbz	r0, 8078c <__swsetup_r+0x70>
   8074e:	2000      	movs	r0, #0
   80750:	bd38      	pop	{r3, r4, r5, pc}
   80752:	06d9      	lsls	r1, r3, #27
   80754:	d53b      	bpl.n	807ce <__swsetup_r+0xb2>
   80756:	0758      	lsls	r0, r3, #29
   80758:	d425      	bmi.n	807a6 <__swsetup_r+0x8a>
   8075a:	6920      	ldr	r0, [r4, #16]
   8075c:	f042 0308 	orr.w	r3, r2, #8
   80760:	81a3      	strh	r3, [r4, #12]
   80762:	b29b      	uxth	r3, r3
   80764:	2800      	cmp	r0, #0
   80766:	d1e9      	bne.n	8073c <__swsetup_r+0x20>
   80768:	f403 7220 	and.w	r2, r3, #640	; 0x280
   8076c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   80770:	d0e4      	beq.n	8073c <__swsetup_r+0x20>
   80772:	4628      	mov	r0, r5
   80774:	4621      	mov	r1, r4
   80776:	f000 fc9d 	bl	810b4 <__smakebuf_r>
   8077a:	89a3      	ldrh	r3, [r4, #12]
   8077c:	6920      	ldr	r0, [r4, #16]
   8077e:	e7dd      	b.n	8073c <__swsetup_r+0x20>
   80780:	0799      	lsls	r1, r3, #30
   80782:	bf58      	it	pl
   80784:	6962      	ldrpl	r2, [r4, #20]
   80786:	60a2      	str	r2, [r4, #8]
   80788:	2800      	cmp	r0, #0
   8078a:	d1e0      	bne.n	8074e <__swsetup_r+0x32>
   8078c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   80790:	061a      	lsls	r2, r3, #24
   80792:	d5dd      	bpl.n	80750 <__swsetup_r+0x34>
   80794:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   80798:	81a3      	strh	r3, [r4, #12]
   8079a:	f04f 30ff 	mov.w	r0, #4294967295
   8079e:	bd38      	pop	{r3, r4, r5, pc}
   807a0:	f000 f924 	bl	809ec <__sinit>
   807a4:	e7c3      	b.n	8072e <__swsetup_r+0x12>
   807a6:	6b21      	ldr	r1, [r4, #48]	; 0x30
   807a8:	b151      	cbz	r1, 807c0 <__swsetup_r+0xa4>
   807aa:	f104 0340 	add.w	r3, r4, #64	; 0x40
   807ae:	4299      	cmp	r1, r3
   807b0:	d004      	beq.n	807bc <__swsetup_r+0xa0>
   807b2:	4628      	mov	r0, r5
   807b4:	f000 f9c0 	bl	80b38 <_free_r>
   807b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   807bc:	2300      	movs	r3, #0
   807be:	6323      	str	r3, [r4, #48]	; 0x30
   807c0:	2300      	movs	r3, #0
   807c2:	6920      	ldr	r0, [r4, #16]
   807c4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   807c8:	e884 0009 	stmia.w	r4, {r0, r3}
   807cc:	e7c6      	b.n	8075c <__swsetup_r+0x40>
   807ce:	2309      	movs	r3, #9
   807d0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   807d4:	602b      	str	r3, [r5, #0]
   807d6:	f04f 30ff 	mov.w	r0, #4294967295
   807da:	81a2      	strh	r2, [r4, #12]
   807dc:	bd38      	pop	{r3, r4, r5, pc}
   807de:	bf00      	nop
   807e0:	20000004 	.word	0x20000004

000807e4 <register_fini>:
   807e4:	4b02      	ldr	r3, [pc, #8]	; (807f0 <register_fini+0xc>)
   807e6:	b113      	cbz	r3, 807ee <register_fini+0xa>
   807e8:	4802      	ldr	r0, [pc, #8]	; (807f4 <register_fini+0x10>)
   807ea:	f000 b805 	b.w	807f8 <atexit>
   807ee:	4770      	bx	lr
   807f0:	00000000 	.word	0x00000000
   807f4:	00080a65 	.word	0x00080a65

000807f8 <atexit>:
   807f8:	2300      	movs	r3, #0
   807fa:	4601      	mov	r1, r0
   807fc:	461a      	mov	r2, r3
   807fe:	4618      	mov	r0, r3
   80800:	f001 ba92 	b.w	81d28 <__register_exitproc>

00080804 <__sflush_r>:
   80804:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   80808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8080c:	b29a      	uxth	r2, r3
   8080e:	460d      	mov	r5, r1
   80810:	0711      	lsls	r1, r2, #28
   80812:	4680      	mov	r8, r0
   80814:	d43a      	bmi.n	8088c <__sflush_r+0x88>
   80816:	686a      	ldr	r2, [r5, #4]
   80818:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   8081c:	2a00      	cmp	r2, #0
   8081e:	81ab      	strh	r3, [r5, #12]
   80820:	dd70      	ble.n	80904 <__sflush_r+0x100>
   80822:	6aac      	ldr	r4, [r5, #40]	; 0x28
   80824:	2c00      	cmp	r4, #0
   80826:	d04a      	beq.n	808be <__sflush_r+0xba>
   80828:	2200      	movs	r2, #0
   8082a:	b29b      	uxth	r3, r3
   8082c:	f8d8 6000 	ldr.w	r6, [r8]
   80830:	f8c8 2000 	str.w	r2, [r8]
   80834:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   80838:	d068      	beq.n	8090c <__sflush_r+0x108>
   8083a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   8083c:	075f      	lsls	r7, r3, #29
   8083e:	d505      	bpl.n	8084c <__sflush_r+0x48>
   80840:	6869      	ldr	r1, [r5, #4]
   80842:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   80844:	1a52      	subs	r2, r2, r1
   80846:	b10b      	cbz	r3, 8084c <__sflush_r+0x48>
   80848:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   8084a:	1ad2      	subs	r2, r2, r3
   8084c:	2300      	movs	r3, #0
   8084e:	69e9      	ldr	r1, [r5, #28]
   80850:	4640      	mov	r0, r8
   80852:	47a0      	blx	r4
   80854:	1c44      	adds	r4, r0, #1
   80856:	d03d      	beq.n	808d4 <__sflush_r+0xd0>
   80858:	2100      	movs	r1, #0
   8085a:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   8085e:	692a      	ldr	r2, [r5, #16]
   80860:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   80864:	81ab      	strh	r3, [r5, #12]
   80866:	04db      	lsls	r3, r3, #19
   80868:	6069      	str	r1, [r5, #4]
   8086a:	602a      	str	r2, [r5, #0]
   8086c:	d448      	bmi.n	80900 <__sflush_r+0xfc>
   8086e:	6b29      	ldr	r1, [r5, #48]	; 0x30
   80870:	f8c8 6000 	str.w	r6, [r8]
   80874:	b319      	cbz	r1, 808be <__sflush_r+0xba>
   80876:	f105 0340 	add.w	r3, r5, #64	; 0x40
   8087a:	4299      	cmp	r1, r3
   8087c:	d002      	beq.n	80884 <__sflush_r+0x80>
   8087e:	4640      	mov	r0, r8
   80880:	f000 f95a 	bl	80b38 <_free_r>
   80884:	2000      	movs	r0, #0
   80886:	6328      	str	r0, [r5, #48]	; 0x30
   80888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8088c:	692e      	ldr	r6, [r5, #16]
   8088e:	b1b6      	cbz	r6, 808be <__sflush_r+0xba>
   80890:	0791      	lsls	r1, r2, #30
   80892:	bf18      	it	ne
   80894:	2300      	movne	r3, #0
   80896:	682c      	ldr	r4, [r5, #0]
   80898:	bf08      	it	eq
   8089a:	696b      	ldreq	r3, [r5, #20]
   8089c:	602e      	str	r6, [r5, #0]
   8089e:	1ba4      	subs	r4, r4, r6
   808a0:	60ab      	str	r3, [r5, #8]
   808a2:	e00a      	b.n	808ba <__sflush_r+0xb6>
   808a4:	4623      	mov	r3, r4
   808a6:	4632      	mov	r2, r6
   808a8:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   808aa:	69e9      	ldr	r1, [r5, #28]
   808ac:	4640      	mov	r0, r8
   808ae:	47b8      	blx	r7
   808b0:	2800      	cmp	r0, #0
   808b2:	eba4 0400 	sub.w	r4, r4, r0
   808b6:	4406      	add	r6, r0
   808b8:	dd04      	ble.n	808c4 <__sflush_r+0xc0>
   808ba:	2c00      	cmp	r4, #0
   808bc:	dcf2      	bgt.n	808a4 <__sflush_r+0xa0>
   808be:	2000      	movs	r0, #0
   808c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   808c4:	89ab      	ldrh	r3, [r5, #12]
   808c6:	f04f 30ff 	mov.w	r0, #4294967295
   808ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   808ce:	81ab      	strh	r3, [r5, #12]
   808d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   808d4:	f8d8 4000 	ldr.w	r4, [r8]
   808d8:	2c1d      	cmp	r4, #29
   808da:	d8f3      	bhi.n	808c4 <__sflush_r+0xc0>
   808dc:	4b16      	ldr	r3, [pc, #88]	; (80938 <__sflush_r+0x134>)
   808de:	40e3      	lsrs	r3, r4
   808e0:	43db      	mvns	r3, r3
   808e2:	f013 0301 	ands.w	r3, r3, #1
   808e6:	d1ed      	bne.n	808c4 <__sflush_r+0xc0>
   808e8:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   808ec:	6929      	ldr	r1, [r5, #16]
   808ee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   808f2:	81aa      	strh	r2, [r5, #12]
   808f4:	04d2      	lsls	r2, r2, #19
   808f6:	606b      	str	r3, [r5, #4]
   808f8:	6029      	str	r1, [r5, #0]
   808fa:	d5b8      	bpl.n	8086e <__sflush_r+0x6a>
   808fc:	2c00      	cmp	r4, #0
   808fe:	d1b6      	bne.n	8086e <__sflush_r+0x6a>
   80900:	6528      	str	r0, [r5, #80]	; 0x50
   80902:	e7b4      	b.n	8086e <__sflush_r+0x6a>
   80904:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   80906:	2a00      	cmp	r2, #0
   80908:	dc8b      	bgt.n	80822 <__sflush_r+0x1e>
   8090a:	e7d8      	b.n	808be <__sflush_r+0xba>
   8090c:	2301      	movs	r3, #1
   8090e:	69e9      	ldr	r1, [r5, #28]
   80910:	4640      	mov	r0, r8
   80912:	47a0      	blx	r4
   80914:	1c43      	adds	r3, r0, #1
   80916:	4602      	mov	r2, r0
   80918:	d002      	beq.n	80920 <__sflush_r+0x11c>
   8091a:	89ab      	ldrh	r3, [r5, #12]
   8091c:	6aac      	ldr	r4, [r5, #40]	; 0x28
   8091e:	e78d      	b.n	8083c <__sflush_r+0x38>
   80920:	f8d8 3000 	ldr.w	r3, [r8]
   80924:	2b00      	cmp	r3, #0
   80926:	d0f8      	beq.n	8091a <__sflush_r+0x116>
   80928:	2b1d      	cmp	r3, #29
   8092a:	d001      	beq.n	80930 <__sflush_r+0x12c>
   8092c:	2b16      	cmp	r3, #22
   8092e:	d1c9      	bne.n	808c4 <__sflush_r+0xc0>
   80930:	f8c8 6000 	str.w	r6, [r8]
   80934:	e7c3      	b.n	808be <__sflush_r+0xba>
   80936:	bf00      	nop
   80938:	20400001 	.word	0x20400001

0008093c <_fflush_r>:
   8093c:	b538      	push	{r3, r4, r5, lr}
   8093e:	460d      	mov	r5, r1
   80940:	4604      	mov	r4, r0
   80942:	b108      	cbz	r0, 80948 <_fflush_r+0xc>
   80944:	6b83      	ldr	r3, [r0, #56]	; 0x38
   80946:	b1bb      	cbz	r3, 80978 <_fflush_r+0x3c>
   80948:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   8094c:	b188      	cbz	r0, 80972 <_fflush_r+0x36>
   8094e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   80950:	07db      	lsls	r3, r3, #31
   80952:	d401      	bmi.n	80958 <_fflush_r+0x1c>
   80954:	0581      	lsls	r1, r0, #22
   80956:	d517      	bpl.n	80988 <_fflush_r+0x4c>
   80958:	4620      	mov	r0, r4
   8095a:	4629      	mov	r1, r5
   8095c:	f7ff ff52 	bl	80804 <__sflush_r>
   80960:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   80962:	4604      	mov	r4, r0
   80964:	07da      	lsls	r2, r3, #31
   80966:	d402      	bmi.n	8096e <_fflush_r+0x32>
   80968:	89ab      	ldrh	r3, [r5, #12]
   8096a:	059b      	lsls	r3, r3, #22
   8096c:	d507      	bpl.n	8097e <_fflush_r+0x42>
   8096e:	4620      	mov	r0, r4
   80970:	bd38      	pop	{r3, r4, r5, pc}
   80972:	4604      	mov	r4, r0
   80974:	4620      	mov	r0, r4
   80976:	bd38      	pop	{r3, r4, r5, pc}
   80978:	f000 f838 	bl	809ec <__sinit>
   8097c:	e7e4      	b.n	80948 <_fflush_r+0xc>
   8097e:	6da8      	ldr	r0, [r5, #88]	; 0x58
   80980:	f000 fb68 	bl	81054 <__retarget_lock_release_recursive>
   80984:	4620      	mov	r0, r4
   80986:	bd38      	pop	{r3, r4, r5, pc}
   80988:	6da8      	ldr	r0, [r5, #88]	; 0x58
   8098a:	f000 fb61 	bl	81050 <__retarget_lock_acquire_recursive>
   8098e:	e7e3      	b.n	80958 <_fflush_r+0x1c>

00080990 <_cleanup_r>:
   80990:	4901      	ldr	r1, [pc, #4]	; (80998 <_cleanup_r+0x8>)
   80992:	f000 bb31 	b.w	80ff8 <_fwalk_reent>
   80996:	bf00      	nop
   80998:	00081e11 	.word	0x00081e11

0008099c <std.isra.0>:
   8099c:	2300      	movs	r3, #0
   8099e:	b510      	push	{r4, lr}
   809a0:	4604      	mov	r4, r0
   809a2:	8181      	strh	r1, [r0, #12]
   809a4:	81c2      	strh	r2, [r0, #14]
   809a6:	6003      	str	r3, [r0, #0]
   809a8:	6043      	str	r3, [r0, #4]
   809aa:	6083      	str	r3, [r0, #8]
   809ac:	6643      	str	r3, [r0, #100]	; 0x64
   809ae:	6103      	str	r3, [r0, #16]
   809b0:	6143      	str	r3, [r0, #20]
   809b2:	6183      	str	r3, [r0, #24]
   809b4:	4619      	mov	r1, r3
   809b6:	2208      	movs	r2, #8
   809b8:	305c      	adds	r0, #92	; 0x5c
   809ba:	f7ff fddd 	bl	80578 <memset>
   809be:	4807      	ldr	r0, [pc, #28]	; (809dc <std.isra.0+0x40>)
   809c0:	4907      	ldr	r1, [pc, #28]	; (809e0 <std.isra.0+0x44>)
   809c2:	4a08      	ldr	r2, [pc, #32]	; (809e4 <std.isra.0+0x48>)
   809c4:	4b08      	ldr	r3, [pc, #32]	; (809e8 <std.isra.0+0x4c>)
   809c6:	6220      	str	r0, [r4, #32]
   809c8:	61e4      	str	r4, [r4, #28]
   809ca:	6261      	str	r1, [r4, #36]	; 0x24
   809cc:	62a2      	str	r2, [r4, #40]	; 0x28
   809ce:	62e3      	str	r3, [r4, #44]	; 0x2c
   809d0:	f104 0058 	add.w	r0, r4, #88	; 0x58
   809d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   809d8:	f000 bb36 	b.w	81048 <__retarget_lock_init_recursive>
   809dc:	00081c75 	.word	0x00081c75
   809e0:	00081c99 	.word	0x00081c99
   809e4:	00081cd5 	.word	0x00081cd5
   809e8:	00081cf5 	.word	0x00081cf5

000809ec <__sinit>:
   809ec:	b510      	push	{r4, lr}
   809ee:	4604      	mov	r4, r0
   809f0:	4814      	ldr	r0, [pc, #80]	; (80a44 <__sinit+0x58>)
   809f2:	f000 fb2d 	bl	81050 <__retarget_lock_acquire_recursive>
   809f6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   809f8:	b9fa      	cbnz	r2, 80a3a <__sinit+0x4e>
   809fa:	2003      	movs	r0, #3
   809fc:	4912      	ldr	r1, [pc, #72]	; (80a48 <__sinit+0x5c>)
   809fe:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   80a02:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   80a06:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   80a0a:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   80a0e:	63e1      	str	r1, [r4, #60]	; 0x3c
   80a10:	6860      	ldr	r0, [r4, #4]
   80a12:	2104      	movs	r1, #4
   80a14:	f7ff ffc2 	bl	8099c <std.isra.0>
   80a18:	68a0      	ldr	r0, [r4, #8]
   80a1a:	2201      	movs	r2, #1
   80a1c:	2109      	movs	r1, #9
   80a1e:	f7ff ffbd 	bl	8099c <std.isra.0>
   80a22:	68e0      	ldr	r0, [r4, #12]
   80a24:	2202      	movs	r2, #2
   80a26:	2112      	movs	r1, #18
   80a28:	f7ff ffb8 	bl	8099c <std.isra.0>
   80a2c:	2301      	movs	r3, #1
   80a2e:	4805      	ldr	r0, [pc, #20]	; (80a44 <__sinit+0x58>)
   80a30:	63a3      	str	r3, [r4, #56]	; 0x38
   80a32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80a36:	f000 bb0d 	b.w	81054 <__retarget_lock_release_recursive>
   80a3a:	4802      	ldr	r0, [pc, #8]	; (80a44 <__sinit+0x58>)
   80a3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80a40:	f000 bb08 	b.w	81054 <__retarget_lock_release_recursive>
   80a44:	20000ccc 	.word	0x20000ccc
   80a48:	00080991 	.word	0x00080991

00080a4c <__sfp_lock_acquire>:
   80a4c:	4801      	ldr	r0, [pc, #4]	; (80a54 <__sfp_lock_acquire+0x8>)
   80a4e:	f000 baff 	b.w	81050 <__retarget_lock_acquire_recursive>
   80a52:	bf00      	nop
   80a54:	20000ce0 	.word	0x20000ce0

00080a58 <__sfp_lock_release>:
   80a58:	4801      	ldr	r0, [pc, #4]	; (80a60 <__sfp_lock_release+0x8>)
   80a5a:	f000 bafb 	b.w	81054 <__retarget_lock_release_recursive>
   80a5e:	bf00      	nop
   80a60:	20000ce0 	.word	0x20000ce0

00080a64 <__libc_fini_array>:
   80a64:	b538      	push	{r3, r4, r5, lr}
   80a66:	4c0a      	ldr	r4, [pc, #40]	; (80a90 <__libc_fini_array+0x2c>)
   80a68:	4d0a      	ldr	r5, [pc, #40]	; (80a94 <__libc_fini_array+0x30>)
   80a6a:	1b64      	subs	r4, r4, r5
   80a6c:	10a4      	asrs	r4, r4, #2
   80a6e:	d00a      	beq.n	80a86 <__libc_fini_array+0x22>
   80a70:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   80a74:	3b01      	subs	r3, #1
   80a76:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   80a7a:	3c01      	subs	r4, #1
   80a7c:	f855 3904 	ldr.w	r3, [r5], #-4
   80a80:	4798      	blx	r3
   80a82:	2c00      	cmp	r4, #0
   80a84:	d1f9      	bne.n	80a7a <__libc_fini_array+0x16>
   80a86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   80a8a:	f001 ba93 	b.w	81fb4 <_fini>
   80a8e:	bf00      	nop
   80a90:	00081fc4 	.word	0x00081fc4
   80a94:	00081fc0 	.word	0x00081fc0

00080a98 <_malloc_trim_r>:
   80a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80a9a:	460c      	mov	r4, r1
   80a9c:	4f23      	ldr	r7, [pc, #140]	; (80b2c <_malloc_trim_r+0x94>)
   80a9e:	4606      	mov	r6, r0
   80aa0:	f000 ff14 	bl	818cc <__malloc_lock>
   80aa4:	68bb      	ldr	r3, [r7, #8]
   80aa6:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   80aaa:	685d      	ldr	r5, [r3, #4]
   80aac:	310f      	adds	r1, #15
   80aae:	f025 0503 	bic.w	r5, r5, #3
   80ab2:	4429      	add	r1, r5
   80ab4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   80ab8:	f021 010f 	bic.w	r1, r1, #15
   80abc:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   80ac0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   80ac4:	db07      	blt.n	80ad6 <_malloc_trim_r+0x3e>
   80ac6:	2100      	movs	r1, #0
   80ac8:	4630      	mov	r0, r6
   80aca:	f001 f8c1 	bl	81c50 <_sbrk_r>
   80ace:	68bb      	ldr	r3, [r7, #8]
   80ad0:	442b      	add	r3, r5
   80ad2:	4298      	cmp	r0, r3
   80ad4:	d004      	beq.n	80ae0 <_malloc_trim_r+0x48>
   80ad6:	4630      	mov	r0, r6
   80ad8:	f000 fefe 	bl	818d8 <__malloc_unlock>
   80adc:	2000      	movs	r0, #0
   80ade:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80ae0:	4261      	negs	r1, r4
   80ae2:	4630      	mov	r0, r6
   80ae4:	f001 f8b4 	bl	81c50 <_sbrk_r>
   80ae8:	3001      	adds	r0, #1
   80aea:	d00d      	beq.n	80b08 <_malloc_trim_r+0x70>
   80aec:	4b10      	ldr	r3, [pc, #64]	; (80b30 <_malloc_trim_r+0x98>)
   80aee:	68ba      	ldr	r2, [r7, #8]
   80af0:	6819      	ldr	r1, [r3, #0]
   80af2:	1b2d      	subs	r5, r5, r4
   80af4:	f045 0501 	orr.w	r5, r5, #1
   80af8:	4630      	mov	r0, r6
   80afa:	1b09      	subs	r1, r1, r4
   80afc:	6055      	str	r5, [r2, #4]
   80afe:	6019      	str	r1, [r3, #0]
   80b00:	f000 feea 	bl	818d8 <__malloc_unlock>
   80b04:	2001      	movs	r0, #1
   80b06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80b08:	2100      	movs	r1, #0
   80b0a:	4630      	mov	r0, r6
   80b0c:	f001 f8a0 	bl	81c50 <_sbrk_r>
   80b10:	68ba      	ldr	r2, [r7, #8]
   80b12:	1a83      	subs	r3, r0, r2
   80b14:	2b0f      	cmp	r3, #15
   80b16:	ddde      	ble.n	80ad6 <_malloc_trim_r+0x3e>
   80b18:	4c06      	ldr	r4, [pc, #24]	; (80b34 <_malloc_trim_r+0x9c>)
   80b1a:	4905      	ldr	r1, [pc, #20]	; (80b30 <_malloc_trim_r+0x98>)
   80b1c:	6824      	ldr	r4, [r4, #0]
   80b1e:	f043 0301 	orr.w	r3, r3, #1
   80b22:	1b00      	subs	r0, r0, r4
   80b24:	6053      	str	r3, [r2, #4]
   80b26:	6008      	str	r0, [r1, #0]
   80b28:	e7d5      	b.n	80ad6 <_malloc_trim_r+0x3e>
   80b2a:	bf00      	nop
   80b2c:	20000434 	.word	0x20000434
   80b30:	20000c84 	.word	0x20000c84
   80b34:	2000083c 	.word	0x2000083c

00080b38 <_free_r>:
   80b38:	2900      	cmp	r1, #0
   80b3a:	d044      	beq.n	80bc6 <_free_r+0x8e>
   80b3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80b40:	460d      	mov	r5, r1
   80b42:	4680      	mov	r8, r0
   80b44:	f000 fec2 	bl	818cc <__malloc_lock>
   80b48:	f855 7c04 	ldr.w	r7, [r5, #-4]
   80b4c:	4969      	ldr	r1, [pc, #420]	; (80cf4 <_free_r+0x1bc>)
   80b4e:	f1a5 0408 	sub.w	r4, r5, #8
   80b52:	f027 0301 	bic.w	r3, r7, #1
   80b56:	18e2      	adds	r2, r4, r3
   80b58:	688e      	ldr	r6, [r1, #8]
   80b5a:	6850      	ldr	r0, [r2, #4]
   80b5c:	42b2      	cmp	r2, r6
   80b5e:	f020 0003 	bic.w	r0, r0, #3
   80b62:	d05e      	beq.n	80c22 <_free_r+0xea>
   80b64:	07fe      	lsls	r6, r7, #31
   80b66:	6050      	str	r0, [r2, #4]
   80b68:	d40b      	bmi.n	80b82 <_free_r+0x4a>
   80b6a:	f855 7c08 	ldr.w	r7, [r5, #-8]
   80b6e:	f101 0e08 	add.w	lr, r1, #8
   80b72:	1be4      	subs	r4, r4, r7
   80b74:	68a5      	ldr	r5, [r4, #8]
   80b76:	443b      	add	r3, r7
   80b78:	4575      	cmp	r5, lr
   80b7a:	d06d      	beq.n	80c58 <_free_r+0x120>
   80b7c:	68e7      	ldr	r7, [r4, #12]
   80b7e:	60ef      	str	r7, [r5, #12]
   80b80:	60bd      	str	r5, [r7, #8]
   80b82:	1815      	adds	r5, r2, r0
   80b84:	686d      	ldr	r5, [r5, #4]
   80b86:	07ed      	lsls	r5, r5, #31
   80b88:	d53e      	bpl.n	80c08 <_free_r+0xd0>
   80b8a:	f043 0201 	orr.w	r2, r3, #1
   80b8e:	6062      	str	r2, [r4, #4]
   80b90:	50e3      	str	r3, [r4, r3]
   80b92:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   80b96:	d217      	bcs.n	80bc8 <_free_r+0x90>
   80b98:	2201      	movs	r2, #1
   80b9a:	08db      	lsrs	r3, r3, #3
   80b9c:	1098      	asrs	r0, r3, #2
   80b9e:	684d      	ldr	r5, [r1, #4]
   80ba0:	4413      	add	r3, r2
   80ba2:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   80ba6:	4082      	lsls	r2, r0
   80ba8:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   80bac:	432a      	orrs	r2, r5
   80bae:	3808      	subs	r0, #8
   80bb0:	60e0      	str	r0, [r4, #12]
   80bb2:	60a7      	str	r7, [r4, #8]
   80bb4:	604a      	str	r2, [r1, #4]
   80bb6:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   80bba:	60fc      	str	r4, [r7, #12]
   80bbc:	4640      	mov	r0, r8
   80bbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   80bc2:	f000 be89 	b.w	818d8 <__malloc_unlock>
   80bc6:	4770      	bx	lr
   80bc8:	0a5a      	lsrs	r2, r3, #9
   80bca:	2a04      	cmp	r2, #4
   80bcc:	d852      	bhi.n	80c74 <_free_r+0x13c>
   80bce:	099a      	lsrs	r2, r3, #6
   80bd0:	f102 0739 	add.w	r7, r2, #57	; 0x39
   80bd4:	00ff      	lsls	r7, r7, #3
   80bd6:	f102 0538 	add.w	r5, r2, #56	; 0x38
   80bda:	19c8      	adds	r0, r1, r7
   80bdc:	59ca      	ldr	r2, [r1, r7]
   80bde:	3808      	subs	r0, #8
   80be0:	4290      	cmp	r0, r2
   80be2:	d04f      	beq.n	80c84 <_free_r+0x14c>
   80be4:	6851      	ldr	r1, [r2, #4]
   80be6:	f021 0103 	bic.w	r1, r1, #3
   80bea:	428b      	cmp	r3, r1
   80bec:	d232      	bcs.n	80c54 <_free_r+0x11c>
   80bee:	6892      	ldr	r2, [r2, #8]
   80bf0:	4290      	cmp	r0, r2
   80bf2:	d1f7      	bne.n	80be4 <_free_r+0xac>
   80bf4:	68c3      	ldr	r3, [r0, #12]
   80bf6:	60a0      	str	r0, [r4, #8]
   80bf8:	60e3      	str	r3, [r4, #12]
   80bfa:	609c      	str	r4, [r3, #8]
   80bfc:	60c4      	str	r4, [r0, #12]
   80bfe:	4640      	mov	r0, r8
   80c00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   80c04:	f000 be68 	b.w	818d8 <__malloc_unlock>
   80c08:	6895      	ldr	r5, [r2, #8]
   80c0a:	4f3b      	ldr	r7, [pc, #236]	; (80cf8 <_free_r+0x1c0>)
   80c0c:	4403      	add	r3, r0
   80c0e:	42bd      	cmp	r5, r7
   80c10:	d040      	beq.n	80c94 <_free_r+0x15c>
   80c12:	68d0      	ldr	r0, [r2, #12]
   80c14:	f043 0201 	orr.w	r2, r3, #1
   80c18:	60e8      	str	r0, [r5, #12]
   80c1a:	6085      	str	r5, [r0, #8]
   80c1c:	6062      	str	r2, [r4, #4]
   80c1e:	50e3      	str	r3, [r4, r3]
   80c20:	e7b7      	b.n	80b92 <_free_r+0x5a>
   80c22:	07ff      	lsls	r7, r7, #31
   80c24:	4403      	add	r3, r0
   80c26:	d407      	bmi.n	80c38 <_free_r+0x100>
   80c28:	f855 5c08 	ldr.w	r5, [r5, #-8]
   80c2c:	1b64      	subs	r4, r4, r5
   80c2e:	68e2      	ldr	r2, [r4, #12]
   80c30:	68a0      	ldr	r0, [r4, #8]
   80c32:	442b      	add	r3, r5
   80c34:	60c2      	str	r2, [r0, #12]
   80c36:	6090      	str	r0, [r2, #8]
   80c38:	4a30      	ldr	r2, [pc, #192]	; (80cfc <_free_r+0x1c4>)
   80c3a:	f043 0001 	orr.w	r0, r3, #1
   80c3e:	6812      	ldr	r2, [r2, #0]
   80c40:	6060      	str	r0, [r4, #4]
   80c42:	4293      	cmp	r3, r2
   80c44:	608c      	str	r4, [r1, #8]
   80c46:	d3b9      	bcc.n	80bbc <_free_r+0x84>
   80c48:	4b2d      	ldr	r3, [pc, #180]	; (80d00 <_free_r+0x1c8>)
   80c4a:	4640      	mov	r0, r8
   80c4c:	6819      	ldr	r1, [r3, #0]
   80c4e:	f7ff ff23 	bl	80a98 <_malloc_trim_r>
   80c52:	e7b3      	b.n	80bbc <_free_r+0x84>
   80c54:	4610      	mov	r0, r2
   80c56:	e7cd      	b.n	80bf4 <_free_r+0xbc>
   80c58:	1811      	adds	r1, r2, r0
   80c5a:	6849      	ldr	r1, [r1, #4]
   80c5c:	07c9      	lsls	r1, r1, #31
   80c5e:	d444      	bmi.n	80cea <_free_r+0x1b2>
   80c60:	6891      	ldr	r1, [r2, #8]
   80c62:	4403      	add	r3, r0
   80c64:	68d2      	ldr	r2, [r2, #12]
   80c66:	f043 0001 	orr.w	r0, r3, #1
   80c6a:	60ca      	str	r2, [r1, #12]
   80c6c:	6091      	str	r1, [r2, #8]
   80c6e:	6060      	str	r0, [r4, #4]
   80c70:	50e3      	str	r3, [r4, r3]
   80c72:	e7a3      	b.n	80bbc <_free_r+0x84>
   80c74:	2a14      	cmp	r2, #20
   80c76:	d816      	bhi.n	80ca6 <_free_r+0x16e>
   80c78:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   80c7c:	00ff      	lsls	r7, r7, #3
   80c7e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   80c82:	e7aa      	b.n	80bda <_free_r+0xa2>
   80c84:	2301      	movs	r3, #1
   80c86:	10aa      	asrs	r2, r5, #2
   80c88:	684d      	ldr	r5, [r1, #4]
   80c8a:	4093      	lsls	r3, r2
   80c8c:	432b      	orrs	r3, r5
   80c8e:	604b      	str	r3, [r1, #4]
   80c90:	4603      	mov	r3, r0
   80c92:	e7b0      	b.n	80bf6 <_free_r+0xbe>
   80c94:	f043 0201 	orr.w	r2, r3, #1
   80c98:	614c      	str	r4, [r1, #20]
   80c9a:	610c      	str	r4, [r1, #16]
   80c9c:	60e5      	str	r5, [r4, #12]
   80c9e:	60a5      	str	r5, [r4, #8]
   80ca0:	6062      	str	r2, [r4, #4]
   80ca2:	50e3      	str	r3, [r4, r3]
   80ca4:	e78a      	b.n	80bbc <_free_r+0x84>
   80ca6:	2a54      	cmp	r2, #84	; 0x54
   80ca8:	d806      	bhi.n	80cb8 <_free_r+0x180>
   80caa:	0b1a      	lsrs	r2, r3, #12
   80cac:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   80cb0:	00ff      	lsls	r7, r7, #3
   80cb2:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   80cb6:	e790      	b.n	80bda <_free_r+0xa2>
   80cb8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   80cbc:	d806      	bhi.n	80ccc <_free_r+0x194>
   80cbe:	0bda      	lsrs	r2, r3, #15
   80cc0:	f102 0778 	add.w	r7, r2, #120	; 0x78
   80cc4:	00ff      	lsls	r7, r7, #3
   80cc6:	f102 0577 	add.w	r5, r2, #119	; 0x77
   80cca:	e786      	b.n	80bda <_free_r+0xa2>
   80ccc:	f240 5054 	movw	r0, #1364	; 0x554
   80cd0:	4282      	cmp	r2, r0
   80cd2:	d806      	bhi.n	80ce2 <_free_r+0x1aa>
   80cd4:	0c9a      	lsrs	r2, r3, #18
   80cd6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   80cda:	00ff      	lsls	r7, r7, #3
   80cdc:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   80ce0:	e77b      	b.n	80bda <_free_r+0xa2>
   80ce2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   80ce6:	257e      	movs	r5, #126	; 0x7e
   80ce8:	e777      	b.n	80bda <_free_r+0xa2>
   80cea:	f043 0101 	orr.w	r1, r3, #1
   80cee:	6061      	str	r1, [r4, #4]
   80cf0:	6013      	str	r3, [r2, #0]
   80cf2:	e763      	b.n	80bbc <_free_r+0x84>
   80cf4:	20000434 	.word	0x20000434
   80cf8:	2000043c 	.word	0x2000043c
   80cfc:	20000840 	.word	0x20000840
   80d00:	20000cb4 	.word	0x20000cb4

00080d04 <__sfvwrite_r>:
   80d04:	6893      	ldr	r3, [r2, #8]
   80d06:	2b00      	cmp	r3, #0
   80d08:	d071      	beq.n	80dee <__sfvwrite_r+0xea>
   80d0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80d0e:	898b      	ldrh	r3, [r1, #12]
   80d10:	b083      	sub	sp, #12
   80d12:	460c      	mov	r4, r1
   80d14:	0719      	lsls	r1, r3, #28
   80d16:	9000      	str	r0, [sp, #0]
   80d18:	4616      	mov	r6, r2
   80d1a:	d525      	bpl.n	80d68 <__sfvwrite_r+0x64>
   80d1c:	6922      	ldr	r2, [r4, #16]
   80d1e:	b31a      	cbz	r2, 80d68 <__sfvwrite_r+0x64>
   80d20:	f013 0002 	ands.w	r0, r3, #2
   80d24:	6835      	ldr	r5, [r6, #0]
   80d26:	d02b      	beq.n	80d80 <__sfvwrite_r+0x7c>
   80d28:	f04f 0900 	mov.w	r9, #0
   80d2c:	46b0      	mov	r8, r6
   80d2e:	464f      	mov	r7, r9
   80d30:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 80ff4 <__sfvwrite_r+0x2f0>
   80d34:	2f00      	cmp	r7, #0
   80d36:	d055      	beq.n	80de4 <__sfvwrite_r+0xe0>
   80d38:	4557      	cmp	r7, sl
   80d3a:	463b      	mov	r3, r7
   80d3c:	464a      	mov	r2, r9
   80d3e:	bf28      	it	cs
   80d40:	4653      	movcs	r3, sl
   80d42:	69e1      	ldr	r1, [r4, #28]
   80d44:	9800      	ldr	r0, [sp, #0]
   80d46:	6a66      	ldr	r6, [r4, #36]	; 0x24
   80d48:	47b0      	blx	r6
   80d4a:	2800      	cmp	r0, #0
   80d4c:	dd56      	ble.n	80dfc <__sfvwrite_r+0xf8>
   80d4e:	f8d8 3008 	ldr.w	r3, [r8, #8]
   80d52:	4481      	add	r9, r0
   80d54:	1a1b      	subs	r3, r3, r0
   80d56:	1a3f      	subs	r7, r7, r0
   80d58:	f8c8 3008 	str.w	r3, [r8, #8]
   80d5c:	2b00      	cmp	r3, #0
   80d5e:	d1e9      	bne.n	80d34 <__sfvwrite_r+0x30>
   80d60:	2000      	movs	r0, #0
   80d62:	b003      	add	sp, #12
   80d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80d68:	4621      	mov	r1, r4
   80d6a:	9800      	ldr	r0, [sp, #0]
   80d6c:	f7ff fcd6 	bl	8071c <__swsetup_r>
   80d70:	2800      	cmp	r0, #0
   80d72:	f040 8135 	bne.w	80fe0 <__sfvwrite_r+0x2dc>
   80d76:	89a3      	ldrh	r3, [r4, #12]
   80d78:	6835      	ldr	r5, [r6, #0]
   80d7a:	f013 0002 	ands.w	r0, r3, #2
   80d7e:	d1d3      	bne.n	80d28 <__sfvwrite_r+0x24>
   80d80:	f013 0901 	ands.w	r9, r3, #1
   80d84:	d144      	bne.n	80e10 <__sfvwrite_r+0x10c>
   80d86:	464f      	mov	r7, r9
   80d88:	9601      	str	r6, [sp, #4]
   80d8a:	b337      	cbz	r7, 80dda <__sfvwrite_r+0xd6>
   80d8c:	059a      	lsls	r2, r3, #22
   80d8e:	f8d4 8008 	ldr.w	r8, [r4, #8]
   80d92:	f140 8085 	bpl.w	80ea0 <__sfvwrite_r+0x19c>
   80d96:	4547      	cmp	r7, r8
   80d98:	46c3      	mov	fp, r8
   80d9a:	f0c0 80ad 	bcc.w	80ef8 <__sfvwrite_r+0x1f4>
   80d9e:	f413 6f90 	tst.w	r3, #1152	; 0x480
   80da2:	f040 80ae 	bne.w	80f02 <__sfvwrite_r+0x1fe>
   80da6:	46ba      	mov	sl, r7
   80da8:	6820      	ldr	r0, [r4, #0]
   80daa:	465a      	mov	r2, fp
   80dac:	4649      	mov	r1, r9
   80dae:	f000 fd29 	bl	81804 <memmove>
   80db2:	68a2      	ldr	r2, [r4, #8]
   80db4:	6823      	ldr	r3, [r4, #0]
   80db6:	eba2 0208 	sub.w	r2, r2, r8
   80dba:	445b      	add	r3, fp
   80dbc:	60a2      	str	r2, [r4, #8]
   80dbe:	6023      	str	r3, [r4, #0]
   80dc0:	9a01      	ldr	r2, [sp, #4]
   80dc2:	44d1      	add	r9, sl
   80dc4:	6893      	ldr	r3, [r2, #8]
   80dc6:	eba7 070a 	sub.w	r7, r7, sl
   80dca:	eba3 030a 	sub.w	r3, r3, sl
   80dce:	6093      	str	r3, [r2, #8]
   80dd0:	2b00      	cmp	r3, #0
   80dd2:	d0c5      	beq.n	80d60 <__sfvwrite_r+0x5c>
   80dd4:	89a3      	ldrh	r3, [r4, #12]
   80dd6:	2f00      	cmp	r7, #0
   80dd8:	d1d8      	bne.n	80d8c <__sfvwrite_r+0x88>
   80dda:	f8d5 9000 	ldr.w	r9, [r5]
   80dde:	686f      	ldr	r7, [r5, #4]
   80de0:	3508      	adds	r5, #8
   80de2:	e7d2      	b.n	80d8a <__sfvwrite_r+0x86>
   80de4:	f8d5 9000 	ldr.w	r9, [r5]
   80de8:	686f      	ldr	r7, [r5, #4]
   80dea:	3508      	adds	r5, #8
   80dec:	e7a2      	b.n	80d34 <__sfvwrite_r+0x30>
   80dee:	2000      	movs	r0, #0
   80df0:	4770      	bx	lr
   80df2:	4621      	mov	r1, r4
   80df4:	9800      	ldr	r0, [sp, #0]
   80df6:	f7ff fda1 	bl	8093c <_fflush_r>
   80dfa:	b378      	cbz	r0, 80e5c <__sfvwrite_r+0x158>
   80dfc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   80e00:	f04f 30ff 	mov.w	r0, #4294967295
   80e04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   80e08:	81a3      	strh	r3, [r4, #12]
   80e0a:	b003      	add	sp, #12
   80e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80e10:	4681      	mov	r9, r0
   80e12:	4633      	mov	r3, r6
   80e14:	464e      	mov	r6, r9
   80e16:	46a8      	mov	r8, r5
   80e18:	469a      	mov	sl, r3
   80e1a:	464d      	mov	r5, r9
   80e1c:	b356      	cbz	r6, 80e74 <__sfvwrite_r+0x170>
   80e1e:	2800      	cmp	r0, #0
   80e20:	d032      	beq.n	80e88 <__sfvwrite_r+0x184>
   80e22:	45b1      	cmp	r9, r6
   80e24:	46cb      	mov	fp, r9
   80e26:	bf28      	it	cs
   80e28:	46b3      	movcs	fp, r6
   80e2a:	6820      	ldr	r0, [r4, #0]
   80e2c:	6923      	ldr	r3, [r4, #16]
   80e2e:	465f      	mov	r7, fp
   80e30:	4298      	cmp	r0, r3
   80e32:	6962      	ldr	r2, [r4, #20]
   80e34:	d904      	bls.n	80e40 <__sfvwrite_r+0x13c>
   80e36:	68a3      	ldr	r3, [r4, #8]
   80e38:	4413      	add	r3, r2
   80e3a:	459b      	cmp	fp, r3
   80e3c:	f300 80a8 	bgt.w	80f90 <__sfvwrite_r+0x28c>
   80e40:	4593      	cmp	fp, r2
   80e42:	db4d      	blt.n	80ee0 <__sfvwrite_r+0x1dc>
   80e44:	4613      	mov	r3, r2
   80e46:	6a67      	ldr	r7, [r4, #36]	; 0x24
   80e48:	462a      	mov	r2, r5
   80e4a:	69e1      	ldr	r1, [r4, #28]
   80e4c:	9800      	ldr	r0, [sp, #0]
   80e4e:	47b8      	blx	r7
   80e50:	1e07      	subs	r7, r0, #0
   80e52:	ddd3      	ble.n	80dfc <__sfvwrite_r+0xf8>
   80e54:	ebb9 0907 	subs.w	r9, r9, r7
   80e58:	d0cb      	beq.n	80df2 <__sfvwrite_r+0xee>
   80e5a:	2001      	movs	r0, #1
   80e5c:	f8da 3008 	ldr.w	r3, [sl, #8]
   80e60:	443d      	add	r5, r7
   80e62:	1bdb      	subs	r3, r3, r7
   80e64:	1bf6      	subs	r6, r6, r7
   80e66:	f8ca 3008 	str.w	r3, [sl, #8]
   80e6a:	2b00      	cmp	r3, #0
   80e6c:	f43f af78 	beq.w	80d60 <__sfvwrite_r+0x5c>
   80e70:	2e00      	cmp	r6, #0
   80e72:	d1d4      	bne.n	80e1e <__sfvwrite_r+0x11a>
   80e74:	f108 0308 	add.w	r3, r8, #8
   80e78:	f853 6c04 	ldr.w	r6, [r3, #-4]
   80e7c:	4698      	mov	r8, r3
   80e7e:	f853 5c08 	ldr.w	r5, [r3, #-8]
   80e82:	3308      	adds	r3, #8
   80e84:	2e00      	cmp	r6, #0
   80e86:	d0f7      	beq.n	80e78 <__sfvwrite_r+0x174>
   80e88:	4632      	mov	r2, r6
   80e8a:	210a      	movs	r1, #10
   80e8c:	4628      	mov	r0, r5
   80e8e:	f000 fbfd 	bl	8168c <memchr>
   80e92:	2800      	cmp	r0, #0
   80e94:	f000 80a1 	beq.w	80fda <__sfvwrite_r+0x2d6>
   80e98:	3001      	adds	r0, #1
   80e9a:	eba0 0905 	sub.w	r9, r0, r5
   80e9e:	e7c0      	b.n	80e22 <__sfvwrite_r+0x11e>
   80ea0:	6820      	ldr	r0, [r4, #0]
   80ea2:	6923      	ldr	r3, [r4, #16]
   80ea4:	4298      	cmp	r0, r3
   80ea6:	d802      	bhi.n	80eae <__sfvwrite_r+0x1aa>
   80ea8:	6963      	ldr	r3, [r4, #20]
   80eaa:	429f      	cmp	r7, r3
   80eac:	d25d      	bcs.n	80f6a <__sfvwrite_r+0x266>
   80eae:	45b8      	cmp	r8, r7
   80eb0:	bf28      	it	cs
   80eb2:	46b8      	movcs	r8, r7
   80eb4:	4649      	mov	r1, r9
   80eb6:	4642      	mov	r2, r8
   80eb8:	f000 fca4 	bl	81804 <memmove>
   80ebc:	68a3      	ldr	r3, [r4, #8]
   80ebe:	6822      	ldr	r2, [r4, #0]
   80ec0:	eba3 0308 	sub.w	r3, r3, r8
   80ec4:	4442      	add	r2, r8
   80ec6:	60a3      	str	r3, [r4, #8]
   80ec8:	6022      	str	r2, [r4, #0]
   80eca:	b10b      	cbz	r3, 80ed0 <__sfvwrite_r+0x1cc>
   80ecc:	46c2      	mov	sl, r8
   80ece:	e777      	b.n	80dc0 <__sfvwrite_r+0xbc>
   80ed0:	4621      	mov	r1, r4
   80ed2:	9800      	ldr	r0, [sp, #0]
   80ed4:	f7ff fd32 	bl	8093c <_fflush_r>
   80ed8:	2800      	cmp	r0, #0
   80eda:	d18f      	bne.n	80dfc <__sfvwrite_r+0xf8>
   80edc:	46c2      	mov	sl, r8
   80ede:	e76f      	b.n	80dc0 <__sfvwrite_r+0xbc>
   80ee0:	465a      	mov	r2, fp
   80ee2:	4629      	mov	r1, r5
   80ee4:	f000 fc8e 	bl	81804 <memmove>
   80ee8:	68a2      	ldr	r2, [r4, #8]
   80eea:	6823      	ldr	r3, [r4, #0]
   80eec:	eba2 020b 	sub.w	r2, r2, fp
   80ef0:	445b      	add	r3, fp
   80ef2:	60a2      	str	r2, [r4, #8]
   80ef4:	6023      	str	r3, [r4, #0]
   80ef6:	e7ad      	b.n	80e54 <__sfvwrite_r+0x150>
   80ef8:	46b8      	mov	r8, r7
   80efa:	46ba      	mov	sl, r7
   80efc:	46bb      	mov	fp, r7
   80efe:	6820      	ldr	r0, [r4, #0]
   80f00:	e753      	b.n	80daa <__sfvwrite_r+0xa6>
   80f02:	6962      	ldr	r2, [r4, #20]
   80f04:	6820      	ldr	r0, [r4, #0]
   80f06:	6921      	ldr	r1, [r4, #16]
   80f08:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   80f0c:	eba0 0a01 	sub.w	sl, r0, r1
   80f10:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   80f14:	f10a 0001 	add.w	r0, sl, #1
   80f18:	ea4f 0868 	mov.w	r8, r8, asr #1
   80f1c:	4438      	add	r0, r7
   80f1e:	4540      	cmp	r0, r8
   80f20:	4642      	mov	r2, r8
   80f22:	bf84      	itt	hi
   80f24:	4680      	movhi	r8, r0
   80f26:	4642      	movhi	r2, r8
   80f28:	055b      	lsls	r3, r3, #21
   80f2a:	d544      	bpl.n	80fb6 <__sfvwrite_r+0x2b2>
   80f2c:	4611      	mov	r1, r2
   80f2e:	9800      	ldr	r0, [sp, #0]
   80f30:	f000 f90a 	bl	81148 <_malloc_r>
   80f34:	4683      	mov	fp, r0
   80f36:	2800      	cmp	r0, #0
   80f38:	d055      	beq.n	80fe6 <__sfvwrite_r+0x2e2>
   80f3a:	4652      	mov	r2, sl
   80f3c:	6921      	ldr	r1, [r4, #16]
   80f3e:	f000 fbeb 	bl	81718 <memcpy>
   80f42:	89a3      	ldrh	r3, [r4, #12]
   80f44:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   80f48:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   80f4c:	81a3      	strh	r3, [r4, #12]
   80f4e:	eb0b 000a 	add.w	r0, fp, sl
   80f52:	eba8 030a 	sub.w	r3, r8, sl
   80f56:	f8c4 b010 	str.w	fp, [r4, #16]
   80f5a:	f8c4 8014 	str.w	r8, [r4, #20]
   80f5e:	6020      	str	r0, [r4, #0]
   80f60:	60a3      	str	r3, [r4, #8]
   80f62:	46b8      	mov	r8, r7
   80f64:	46ba      	mov	sl, r7
   80f66:	46bb      	mov	fp, r7
   80f68:	e71f      	b.n	80daa <__sfvwrite_r+0xa6>
   80f6a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   80f6e:	42ba      	cmp	r2, r7
   80f70:	bf28      	it	cs
   80f72:	463a      	movcs	r2, r7
   80f74:	fb92 f2f3 	sdiv	r2, r2, r3
   80f78:	69e1      	ldr	r1, [r4, #28]
   80f7a:	fb03 f302 	mul.w	r3, r3, r2
   80f7e:	9800      	ldr	r0, [sp, #0]
   80f80:	464a      	mov	r2, r9
   80f82:	6a66      	ldr	r6, [r4, #36]	; 0x24
   80f84:	47b0      	blx	r6
   80f86:	f1b0 0a00 	subs.w	sl, r0, #0
   80f8a:	f73f af19 	bgt.w	80dc0 <__sfvwrite_r+0xbc>
   80f8e:	e735      	b.n	80dfc <__sfvwrite_r+0xf8>
   80f90:	461a      	mov	r2, r3
   80f92:	4629      	mov	r1, r5
   80f94:	9301      	str	r3, [sp, #4]
   80f96:	f000 fc35 	bl	81804 <memmove>
   80f9a:	6822      	ldr	r2, [r4, #0]
   80f9c:	9b01      	ldr	r3, [sp, #4]
   80f9e:	4621      	mov	r1, r4
   80fa0:	441a      	add	r2, r3
   80fa2:	6022      	str	r2, [r4, #0]
   80fa4:	9800      	ldr	r0, [sp, #0]
   80fa6:	f7ff fcc9 	bl	8093c <_fflush_r>
   80faa:	9b01      	ldr	r3, [sp, #4]
   80fac:	2800      	cmp	r0, #0
   80fae:	f47f af25 	bne.w	80dfc <__sfvwrite_r+0xf8>
   80fb2:	461f      	mov	r7, r3
   80fb4:	e74e      	b.n	80e54 <__sfvwrite_r+0x150>
   80fb6:	9800      	ldr	r0, [sp, #0]
   80fb8:	f000 fc94 	bl	818e4 <_realloc_r>
   80fbc:	4683      	mov	fp, r0
   80fbe:	2800      	cmp	r0, #0
   80fc0:	d1c5      	bne.n	80f4e <__sfvwrite_r+0x24a>
   80fc2:	9d00      	ldr	r5, [sp, #0]
   80fc4:	6921      	ldr	r1, [r4, #16]
   80fc6:	4628      	mov	r0, r5
   80fc8:	f7ff fdb6 	bl	80b38 <_free_r>
   80fcc:	220c      	movs	r2, #12
   80fce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   80fd2:	602a      	str	r2, [r5, #0]
   80fd4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   80fd8:	e712      	b.n	80e00 <__sfvwrite_r+0xfc>
   80fda:	f106 0901 	add.w	r9, r6, #1
   80fde:	e720      	b.n	80e22 <__sfvwrite_r+0x11e>
   80fe0:	f04f 30ff 	mov.w	r0, #4294967295
   80fe4:	e6bd      	b.n	80d62 <__sfvwrite_r+0x5e>
   80fe6:	220c      	movs	r2, #12
   80fe8:	9900      	ldr	r1, [sp, #0]
   80fea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   80fee:	600a      	str	r2, [r1, #0]
   80ff0:	e706      	b.n	80e00 <__sfvwrite_r+0xfc>
   80ff2:	bf00      	nop
   80ff4:	7ffffc00 	.word	0x7ffffc00

00080ff8 <_fwalk_reent>:
   80ff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   80ffc:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   81000:	d01e      	beq.n	81040 <_fwalk_reent+0x48>
   81002:	4688      	mov	r8, r1
   81004:	4607      	mov	r7, r0
   81006:	f04f 0900 	mov.w	r9, #0
   8100a:	6875      	ldr	r5, [r6, #4]
   8100c:	68b4      	ldr	r4, [r6, #8]
   8100e:	3d01      	subs	r5, #1
   81010:	d410      	bmi.n	81034 <_fwalk_reent+0x3c>
   81012:	89a3      	ldrh	r3, [r4, #12]
   81014:	3d01      	subs	r5, #1
   81016:	2b01      	cmp	r3, #1
   81018:	d908      	bls.n	8102c <_fwalk_reent+0x34>
   8101a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   8101e:	3301      	adds	r3, #1
   81020:	d004      	beq.n	8102c <_fwalk_reent+0x34>
   81022:	4621      	mov	r1, r4
   81024:	4638      	mov	r0, r7
   81026:	47c0      	blx	r8
   81028:	ea49 0900 	orr.w	r9, r9, r0
   8102c:	1c6b      	adds	r3, r5, #1
   8102e:	f104 0468 	add.w	r4, r4, #104	; 0x68
   81032:	d1ee      	bne.n	81012 <_fwalk_reent+0x1a>
   81034:	6836      	ldr	r6, [r6, #0]
   81036:	2e00      	cmp	r6, #0
   81038:	d1e7      	bne.n	8100a <_fwalk_reent+0x12>
   8103a:	4648      	mov	r0, r9
   8103c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81040:	46b1      	mov	r9, r6
   81042:	4648      	mov	r0, r9
   81044:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00081048 <__retarget_lock_init_recursive>:
   81048:	4770      	bx	lr
   8104a:	bf00      	nop

0008104c <__retarget_lock_close_recursive>:
   8104c:	4770      	bx	lr
   8104e:	bf00      	nop

00081050 <__retarget_lock_acquire_recursive>:
   81050:	4770      	bx	lr
   81052:	bf00      	nop

00081054 <__retarget_lock_release_recursive>:
   81054:	4770      	bx	lr
   81056:	bf00      	nop

00081058 <__swhatbuf_r>:
   81058:	b570      	push	{r4, r5, r6, lr}
   8105a:	460c      	mov	r4, r1
   8105c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   81060:	b090      	sub	sp, #64	; 0x40
   81062:	2900      	cmp	r1, #0
   81064:	4615      	mov	r5, r2
   81066:	461e      	mov	r6, r3
   81068:	db14      	blt.n	81094 <__swhatbuf_r+0x3c>
   8106a:	aa01      	add	r2, sp, #4
   8106c:	f000 ff32 	bl	81ed4 <_fstat_r>
   81070:	2800      	cmp	r0, #0
   81072:	db0f      	blt.n	81094 <__swhatbuf_r+0x3c>
   81074:	9a02      	ldr	r2, [sp, #8]
   81076:	f44f 6380 	mov.w	r3, #1024	; 0x400
   8107a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   8107e:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   81082:	fab2 f282 	clz	r2, r2
   81086:	f44f 6000 	mov.w	r0, #2048	; 0x800
   8108a:	0952      	lsrs	r2, r2, #5
   8108c:	6032      	str	r2, [r6, #0]
   8108e:	602b      	str	r3, [r5, #0]
   81090:	b010      	add	sp, #64	; 0x40
   81092:	bd70      	pop	{r4, r5, r6, pc}
   81094:	2300      	movs	r3, #0
   81096:	89a2      	ldrh	r2, [r4, #12]
   81098:	6033      	str	r3, [r6, #0]
   8109a:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   8109e:	d004      	beq.n	810aa <__swhatbuf_r+0x52>
   810a0:	2240      	movs	r2, #64	; 0x40
   810a2:	4618      	mov	r0, r3
   810a4:	602a      	str	r2, [r5, #0]
   810a6:	b010      	add	sp, #64	; 0x40
   810a8:	bd70      	pop	{r4, r5, r6, pc}
   810aa:	f44f 6380 	mov.w	r3, #1024	; 0x400
   810ae:	602b      	str	r3, [r5, #0]
   810b0:	b010      	add	sp, #64	; 0x40
   810b2:	bd70      	pop	{r4, r5, r6, pc}

000810b4 <__smakebuf_r>:
   810b4:	898a      	ldrh	r2, [r1, #12]
   810b6:	460b      	mov	r3, r1
   810b8:	0792      	lsls	r2, r2, #30
   810ba:	d506      	bpl.n	810ca <__smakebuf_r+0x16>
   810bc:	2101      	movs	r1, #1
   810be:	f103 0243 	add.w	r2, r3, #67	; 0x43
   810c2:	6159      	str	r1, [r3, #20]
   810c4:	601a      	str	r2, [r3, #0]
   810c6:	611a      	str	r2, [r3, #16]
   810c8:	4770      	bx	lr
   810ca:	b5f0      	push	{r4, r5, r6, r7, lr}
   810cc:	b083      	sub	sp, #12
   810ce:	ab01      	add	r3, sp, #4
   810d0:	466a      	mov	r2, sp
   810d2:	460c      	mov	r4, r1
   810d4:	4606      	mov	r6, r0
   810d6:	f7ff ffbf 	bl	81058 <__swhatbuf_r>
   810da:	9900      	ldr	r1, [sp, #0]
   810dc:	4605      	mov	r5, r0
   810de:	4630      	mov	r0, r6
   810e0:	f000 f832 	bl	81148 <_malloc_r>
   810e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   810e8:	b1d8      	cbz	r0, 81122 <__smakebuf_r+0x6e>
   810ea:	e89d 0006 	ldmia.w	sp, {r1, r2}
   810ee:	4f15      	ldr	r7, [pc, #84]	; (81144 <__smakebuf_r+0x90>)
   810f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   810f4:	63f7      	str	r7, [r6, #60]	; 0x3c
   810f6:	81a3      	strh	r3, [r4, #12]
   810f8:	6020      	str	r0, [r4, #0]
   810fa:	6120      	str	r0, [r4, #16]
   810fc:	6161      	str	r1, [r4, #20]
   810fe:	b91a      	cbnz	r2, 81108 <__smakebuf_r+0x54>
   81100:	432b      	orrs	r3, r5
   81102:	81a3      	strh	r3, [r4, #12]
   81104:	b003      	add	sp, #12
   81106:	bdf0      	pop	{r4, r5, r6, r7, pc}
   81108:	4630      	mov	r0, r6
   8110a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   8110e:	f000 fef5 	bl	81efc <_isatty_r>
   81112:	b1a0      	cbz	r0, 8113e <__smakebuf_r+0x8a>
   81114:	89a3      	ldrh	r3, [r4, #12]
   81116:	f023 0303 	bic.w	r3, r3, #3
   8111a:	f043 0301 	orr.w	r3, r3, #1
   8111e:	b21b      	sxth	r3, r3
   81120:	e7ee      	b.n	81100 <__smakebuf_r+0x4c>
   81122:	059a      	lsls	r2, r3, #22
   81124:	d4ee      	bmi.n	81104 <__smakebuf_r+0x50>
   81126:	2101      	movs	r1, #1
   81128:	f023 0303 	bic.w	r3, r3, #3
   8112c:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81130:	f043 0302 	orr.w	r3, r3, #2
   81134:	81a3      	strh	r3, [r4, #12]
   81136:	6161      	str	r1, [r4, #20]
   81138:	6022      	str	r2, [r4, #0]
   8113a:	6122      	str	r2, [r4, #16]
   8113c:	e7e2      	b.n	81104 <__smakebuf_r+0x50>
   8113e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81142:	e7dd      	b.n	81100 <__smakebuf_r+0x4c>
   81144:	00080991 	.word	0x00080991

00081148 <_malloc_r>:
   81148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8114c:	f101 060b 	add.w	r6, r1, #11
   81150:	2e16      	cmp	r6, #22
   81152:	b083      	sub	sp, #12
   81154:	4605      	mov	r5, r0
   81156:	f240 809e 	bls.w	81296 <_malloc_r+0x14e>
   8115a:	f036 0607 	bics.w	r6, r6, #7
   8115e:	f100 80bd 	bmi.w	812dc <_malloc_r+0x194>
   81162:	42b1      	cmp	r1, r6
   81164:	f200 80ba 	bhi.w	812dc <_malloc_r+0x194>
   81168:	f000 fbb0 	bl	818cc <__malloc_lock>
   8116c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   81170:	f0c0 8285 	bcc.w	8167e <_malloc_r+0x536>
   81174:	0a73      	lsrs	r3, r6, #9
   81176:	f000 80b8 	beq.w	812ea <_malloc_r+0x1a2>
   8117a:	2b04      	cmp	r3, #4
   8117c:	f200 816c 	bhi.w	81458 <_malloc_r+0x310>
   81180:	09b3      	lsrs	r3, r6, #6
   81182:	f103 0039 	add.w	r0, r3, #57	; 0x39
   81186:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   8118a:	00c1      	lsls	r1, r0, #3
   8118c:	4fb8      	ldr	r7, [pc, #736]	; (81470 <_malloc_r+0x328>)
   8118e:	4439      	add	r1, r7
   81190:	684c      	ldr	r4, [r1, #4]
   81192:	3908      	subs	r1, #8
   81194:	42a1      	cmp	r1, r4
   81196:	d106      	bne.n	811a6 <_malloc_r+0x5e>
   81198:	e00c      	b.n	811b4 <_malloc_r+0x6c>
   8119a:	2a00      	cmp	r2, #0
   8119c:	f280 80ab 	bge.w	812f6 <_malloc_r+0x1ae>
   811a0:	68e4      	ldr	r4, [r4, #12]
   811a2:	42a1      	cmp	r1, r4
   811a4:	d006      	beq.n	811b4 <_malloc_r+0x6c>
   811a6:	6863      	ldr	r3, [r4, #4]
   811a8:	f023 0303 	bic.w	r3, r3, #3
   811ac:	1b9a      	subs	r2, r3, r6
   811ae:	2a0f      	cmp	r2, #15
   811b0:	ddf3      	ble.n	8119a <_malloc_r+0x52>
   811b2:	4670      	mov	r0, lr
   811b4:	693c      	ldr	r4, [r7, #16]
   811b6:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 81484 <_malloc_r+0x33c>
   811ba:	4574      	cmp	r4, lr
   811bc:	f000 819e 	beq.w	814fc <_malloc_r+0x3b4>
   811c0:	6863      	ldr	r3, [r4, #4]
   811c2:	f023 0303 	bic.w	r3, r3, #3
   811c6:	1b9a      	subs	r2, r3, r6
   811c8:	2a0f      	cmp	r2, #15
   811ca:	f300 8183 	bgt.w	814d4 <_malloc_r+0x38c>
   811ce:	2a00      	cmp	r2, #0
   811d0:	f8c7 e014 	str.w	lr, [r7, #20]
   811d4:	f8c7 e010 	str.w	lr, [r7, #16]
   811d8:	f280 8091 	bge.w	812fe <_malloc_r+0x1b6>
   811dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   811e0:	f080 8154 	bcs.w	8148c <_malloc_r+0x344>
   811e4:	2201      	movs	r2, #1
   811e6:	08db      	lsrs	r3, r3, #3
   811e8:	6879      	ldr	r1, [r7, #4]
   811ea:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   811ee:	4413      	add	r3, r2
   811f0:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   811f4:	fa02 f20c 	lsl.w	r2, r2, ip
   811f8:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   811fc:	430a      	orrs	r2, r1
   811fe:	f1ac 0108 	sub.w	r1, ip, #8
   81202:	60e1      	str	r1, [r4, #12]
   81204:	f8c4 8008 	str.w	r8, [r4, #8]
   81208:	607a      	str	r2, [r7, #4]
   8120a:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   8120e:	f8c8 400c 	str.w	r4, [r8, #12]
   81212:	2401      	movs	r4, #1
   81214:	1083      	asrs	r3, r0, #2
   81216:	409c      	lsls	r4, r3
   81218:	4294      	cmp	r4, r2
   8121a:	d87d      	bhi.n	81318 <_malloc_r+0x1d0>
   8121c:	4214      	tst	r4, r2
   8121e:	d106      	bne.n	8122e <_malloc_r+0xe6>
   81220:	f020 0003 	bic.w	r0, r0, #3
   81224:	0064      	lsls	r4, r4, #1
   81226:	4214      	tst	r4, r2
   81228:	f100 0004 	add.w	r0, r0, #4
   8122c:	d0fa      	beq.n	81224 <_malloc_r+0xdc>
   8122e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   81232:	46cc      	mov	ip, r9
   81234:	4680      	mov	r8, r0
   81236:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8123a:	459c      	cmp	ip, r3
   8123c:	d107      	bne.n	8124e <_malloc_r+0x106>
   8123e:	e15f      	b.n	81500 <_malloc_r+0x3b8>
   81240:	2a00      	cmp	r2, #0
   81242:	f280 816d 	bge.w	81520 <_malloc_r+0x3d8>
   81246:	68db      	ldr	r3, [r3, #12]
   81248:	459c      	cmp	ip, r3
   8124a:	f000 8159 	beq.w	81500 <_malloc_r+0x3b8>
   8124e:	6859      	ldr	r1, [r3, #4]
   81250:	f021 0103 	bic.w	r1, r1, #3
   81254:	1b8a      	subs	r2, r1, r6
   81256:	2a0f      	cmp	r2, #15
   81258:	ddf2      	ble.n	81240 <_malloc_r+0xf8>
   8125a:	68dc      	ldr	r4, [r3, #12]
   8125c:	f8d3 c008 	ldr.w	ip, [r3, #8]
   81260:	f046 0801 	orr.w	r8, r6, #1
   81264:	4628      	mov	r0, r5
   81266:	441e      	add	r6, r3
   81268:	f042 0501 	orr.w	r5, r2, #1
   8126c:	f8c3 8004 	str.w	r8, [r3, #4]
   81270:	f8cc 400c 	str.w	r4, [ip, #12]
   81274:	f8c4 c008 	str.w	ip, [r4, #8]
   81278:	617e      	str	r6, [r7, #20]
   8127a:	613e      	str	r6, [r7, #16]
   8127c:	f8c6 e00c 	str.w	lr, [r6, #12]
   81280:	f8c6 e008 	str.w	lr, [r6, #8]
   81284:	6075      	str	r5, [r6, #4]
   81286:	505a      	str	r2, [r3, r1]
   81288:	9300      	str	r3, [sp, #0]
   8128a:	f000 fb25 	bl	818d8 <__malloc_unlock>
   8128e:	9b00      	ldr	r3, [sp, #0]
   81290:	f103 0408 	add.w	r4, r3, #8
   81294:	e01e      	b.n	812d4 <_malloc_r+0x18c>
   81296:	2910      	cmp	r1, #16
   81298:	d820      	bhi.n	812dc <_malloc_r+0x194>
   8129a:	f000 fb17 	bl	818cc <__malloc_lock>
   8129e:	2610      	movs	r6, #16
   812a0:	2318      	movs	r3, #24
   812a2:	2002      	movs	r0, #2
   812a4:	4f72      	ldr	r7, [pc, #456]	; (81470 <_malloc_r+0x328>)
   812a6:	443b      	add	r3, r7
   812a8:	685c      	ldr	r4, [r3, #4]
   812aa:	f1a3 0208 	sub.w	r2, r3, #8
   812ae:	4294      	cmp	r4, r2
   812b0:	f000 812f 	beq.w	81512 <_malloc_r+0x3ca>
   812b4:	6863      	ldr	r3, [r4, #4]
   812b6:	68e1      	ldr	r1, [r4, #12]
   812b8:	f023 0303 	bic.w	r3, r3, #3
   812bc:	4423      	add	r3, r4
   812be:	685a      	ldr	r2, [r3, #4]
   812c0:	68a6      	ldr	r6, [r4, #8]
   812c2:	f042 0201 	orr.w	r2, r2, #1
   812c6:	60f1      	str	r1, [r6, #12]
   812c8:	4628      	mov	r0, r5
   812ca:	608e      	str	r6, [r1, #8]
   812cc:	605a      	str	r2, [r3, #4]
   812ce:	f000 fb03 	bl	818d8 <__malloc_unlock>
   812d2:	3408      	adds	r4, #8
   812d4:	4620      	mov	r0, r4
   812d6:	b003      	add	sp, #12
   812d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   812dc:	2400      	movs	r4, #0
   812de:	230c      	movs	r3, #12
   812e0:	4620      	mov	r0, r4
   812e2:	602b      	str	r3, [r5, #0]
   812e4:	b003      	add	sp, #12
   812e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   812ea:	2040      	movs	r0, #64	; 0x40
   812ec:	f44f 7100 	mov.w	r1, #512	; 0x200
   812f0:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   812f4:	e74a      	b.n	8118c <_malloc_r+0x44>
   812f6:	4423      	add	r3, r4
   812f8:	685a      	ldr	r2, [r3, #4]
   812fa:	68e1      	ldr	r1, [r4, #12]
   812fc:	e7e0      	b.n	812c0 <_malloc_r+0x178>
   812fe:	4423      	add	r3, r4
   81300:	685a      	ldr	r2, [r3, #4]
   81302:	4628      	mov	r0, r5
   81304:	f042 0201 	orr.w	r2, r2, #1
   81308:	605a      	str	r2, [r3, #4]
   8130a:	3408      	adds	r4, #8
   8130c:	f000 fae4 	bl	818d8 <__malloc_unlock>
   81310:	4620      	mov	r0, r4
   81312:	b003      	add	sp, #12
   81314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81318:	68bc      	ldr	r4, [r7, #8]
   8131a:	6863      	ldr	r3, [r4, #4]
   8131c:	f023 0803 	bic.w	r8, r3, #3
   81320:	45b0      	cmp	r8, r6
   81322:	d304      	bcc.n	8132e <_malloc_r+0x1e6>
   81324:	eba8 0306 	sub.w	r3, r8, r6
   81328:	2b0f      	cmp	r3, #15
   8132a:	f300 8085 	bgt.w	81438 <_malloc_r+0x2f0>
   8132e:	f8df 9158 	ldr.w	r9, [pc, #344]	; 81488 <_malloc_r+0x340>
   81332:	4b50      	ldr	r3, [pc, #320]	; (81474 <_malloc_r+0x32c>)
   81334:	f8d9 2000 	ldr.w	r2, [r9]
   81338:	681b      	ldr	r3, [r3, #0]
   8133a:	3201      	adds	r2, #1
   8133c:	4433      	add	r3, r6
   8133e:	eb04 0a08 	add.w	sl, r4, r8
   81342:	f000 8154 	beq.w	815ee <_malloc_r+0x4a6>
   81346:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   8134a:	330f      	adds	r3, #15
   8134c:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   81350:	f02b 0b0f 	bic.w	fp, fp, #15
   81354:	4659      	mov	r1, fp
   81356:	4628      	mov	r0, r5
   81358:	f000 fc7a 	bl	81c50 <_sbrk_r>
   8135c:	1c41      	adds	r1, r0, #1
   8135e:	4602      	mov	r2, r0
   81360:	f000 80fb 	beq.w	8155a <_malloc_r+0x412>
   81364:	4582      	cmp	sl, r0
   81366:	f200 80f6 	bhi.w	81556 <_malloc_r+0x40e>
   8136a:	4b43      	ldr	r3, [pc, #268]	; (81478 <_malloc_r+0x330>)
   8136c:	6819      	ldr	r1, [r3, #0]
   8136e:	4459      	add	r1, fp
   81370:	6019      	str	r1, [r3, #0]
   81372:	f000 814c 	beq.w	8160e <_malloc_r+0x4c6>
   81376:	f8d9 0000 	ldr.w	r0, [r9]
   8137a:	3001      	adds	r0, #1
   8137c:	bf1b      	ittet	ne
   8137e:	eba2 0a0a 	subne.w	sl, r2, sl
   81382:	4451      	addne	r1, sl
   81384:	f8c9 2000 	streq.w	r2, [r9]
   81388:	6019      	strne	r1, [r3, #0]
   8138a:	f012 0107 	ands.w	r1, r2, #7
   8138e:	f000 8114 	beq.w	815ba <_malloc_r+0x472>
   81392:	f1c1 0008 	rsb	r0, r1, #8
   81396:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   8139a:	4402      	add	r2, r0
   8139c:	3108      	adds	r1, #8
   8139e:	eb02 090b 	add.w	r9, r2, fp
   813a2:	f3c9 090b 	ubfx	r9, r9, #0, #12
   813a6:	eba1 0909 	sub.w	r9, r1, r9
   813aa:	4649      	mov	r1, r9
   813ac:	4628      	mov	r0, r5
   813ae:	9301      	str	r3, [sp, #4]
   813b0:	9200      	str	r2, [sp, #0]
   813b2:	f000 fc4d 	bl	81c50 <_sbrk_r>
   813b6:	1c43      	adds	r3, r0, #1
   813b8:	e89d 000c 	ldmia.w	sp, {r2, r3}
   813bc:	f000 8142 	beq.w	81644 <_malloc_r+0x4fc>
   813c0:	1a80      	subs	r0, r0, r2
   813c2:	4448      	add	r0, r9
   813c4:	f040 0001 	orr.w	r0, r0, #1
   813c8:	6819      	ldr	r1, [r3, #0]
   813ca:	42bc      	cmp	r4, r7
   813cc:	4449      	add	r1, r9
   813ce:	60ba      	str	r2, [r7, #8]
   813d0:	6019      	str	r1, [r3, #0]
   813d2:	6050      	str	r0, [r2, #4]
   813d4:	d017      	beq.n	81406 <_malloc_r+0x2be>
   813d6:	f1b8 0f0f 	cmp.w	r8, #15
   813da:	f240 80fa 	bls.w	815d2 <_malloc_r+0x48a>
   813de:	f04f 0c05 	mov.w	ip, #5
   813e2:	6862      	ldr	r2, [r4, #4]
   813e4:	f1a8 000c 	sub.w	r0, r8, #12
   813e8:	f020 0007 	bic.w	r0, r0, #7
   813ec:	f002 0201 	and.w	r2, r2, #1
   813f0:	eb04 0e00 	add.w	lr, r4, r0
   813f4:	4302      	orrs	r2, r0
   813f6:	280f      	cmp	r0, #15
   813f8:	6062      	str	r2, [r4, #4]
   813fa:	f8ce c004 	str.w	ip, [lr, #4]
   813fe:	f8ce c008 	str.w	ip, [lr, #8]
   81402:	f200 8116 	bhi.w	81632 <_malloc_r+0x4ea>
   81406:	4b1d      	ldr	r3, [pc, #116]	; (8147c <_malloc_r+0x334>)
   81408:	68bc      	ldr	r4, [r7, #8]
   8140a:	681a      	ldr	r2, [r3, #0]
   8140c:	4291      	cmp	r1, r2
   8140e:	bf88      	it	hi
   81410:	6019      	strhi	r1, [r3, #0]
   81412:	4b1b      	ldr	r3, [pc, #108]	; (81480 <_malloc_r+0x338>)
   81414:	681a      	ldr	r2, [r3, #0]
   81416:	4291      	cmp	r1, r2
   81418:	6862      	ldr	r2, [r4, #4]
   8141a:	bf88      	it	hi
   8141c:	6019      	strhi	r1, [r3, #0]
   8141e:	f022 0203 	bic.w	r2, r2, #3
   81422:	4296      	cmp	r6, r2
   81424:	eba2 0306 	sub.w	r3, r2, r6
   81428:	d801      	bhi.n	8142e <_malloc_r+0x2e6>
   8142a:	2b0f      	cmp	r3, #15
   8142c:	dc04      	bgt.n	81438 <_malloc_r+0x2f0>
   8142e:	4628      	mov	r0, r5
   81430:	f000 fa52 	bl	818d8 <__malloc_unlock>
   81434:	2400      	movs	r4, #0
   81436:	e74d      	b.n	812d4 <_malloc_r+0x18c>
   81438:	f046 0201 	orr.w	r2, r6, #1
   8143c:	f043 0301 	orr.w	r3, r3, #1
   81440:	4426      	add	r6, r4
   81442:	6062      	str	r2, [r4, #4]
   81444:	4628      	mov	r0, r5
   81446:	60be      	str	r6, [r7, #8]
   81448:	3408      	adds	r4, #8
   8144a:	6073      	str	r3, [r6, #4]
   8144c:	f000 fa44 	bl	818d8 <__malloc_unlock>
   81450:	4620      	mov	r0, r4
   81452:	b003      	add	sp, #12
   81454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81458:	2b14      	cmp	r3, #20
   8145a:	d970      	bls.n	8153e <_malloc_r+0x3f6>
   8145c:	2b54      	cmp	r3, #84	; 0x54
   8145e:	f200 80a2 	bhi.w	815a6 <_malloc_r+0x45e>
   81462:	0b33      	lsrs	r3, r6, #12
   81464:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   81468:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   8146c:	00c1      	lsls	r1, r0, #3
   8146e:	e68d      	b.n	8118c <_malloc_r+0x44>
   81470:	20000434 	.word	0x20000434
   81474:	20000cb4 	.word	0x20000cb4
   81478:	20000c84 	.word	0x20000c84
   8147c:	20000cac 	.word	0x20000cac
   81480:	20000cb0 	.word	0x20000cb0
   81484:	2000043c 	.word	0x2000043c
   81488:	2000083c 	.word	0x2000083c
   8148c:	0a5a      	lsrs	r2, r3, #9
   8148e:	2a04      	cmp	r2, #4
   81490:	d95b      	bls.n	8154a <_malloc_r+0x402>
   81492:	2a14      	cmp	r2, #20
   81494:	f200 80ae 	bhi.w	815f4 <_malloc_r+0x4ac>
   81498:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   8149c:	00c9      	lsls	r1, r1, #3
   8149e:	325b      	adds	r2, #91	; 0x5b
   814a0:	eb07 0c01 	add.w	ip, r7, r1
   814a4:	5879      	ldr	r1, [r7, r1]
   814a6:	f1ac 0c08 	sub.w	ip, ip, #8
   814aa:	458c      	cmp	ip, r1
   814ac:	f000 8088 	beq.w	815c0 <_malloc_r+0x478>
   814b0:	684a      	ldr	r2, [r1, #4]
   814b2:	f022 0203 	bic.w	r2, r2, #3
   814b6:	4293      	cmp	r3, r2
   814b8:	d273      	bcs.n	815a2 <_malloc_r+0x45a>
   814ba:	6889      	ldr	r1, [r1, #8]
   814bc:	458c      	cmp	ip, r1
   814be:	d1f7      	bne.n	814b0 <_malloc_r+0x368>
   814c0:	f8dc 300c 	ldr.w	r3, [ip, #12]
   814c4:	687a      	ldr	r2, [r7, #4]
   814c6:	60e3      	str	r3, [r4, #12]
   814c8:	f8c4 c008 	str.w	ip, [r4, #8]
   814cc:	609c      	str	r4, [r3, #8]
   814ce:	f8cc 400c 	str.w	r4, [ip, #12]
   814d2:	e69e      	b.n	81212 <_malloc_r+0xca>
   814d4:	f046 0c01 	orr.w	ip, r6, #1
   814d8:	f042 0101 	orr.w	r1, r2, #1
   814dc:	4426      	add	r6, r4
   814de:	f8c4 c004 	str.w	ip, [r4, #4]
   814e2:	4628      	mov	r0, r5
   814e4:	617e      	str	r6, [r7, #20]
   814e6:	613e      	str	r6, [r7, #16]
   814e8:	f8c6 e00c 	str.w	lr, [r6, #12]
   814ec:	f8c6 e008 	str.w	lr, [r6, #8]
   814f0:	6071      	str	r1, [r6, #4]
   814f2:	50e2      	str	r2, [r4, r3]
   814f4:	f000 f9f0 	bl	818d8 <__malloc_unlock>
   814f8:	3408      	adds	r4, #8
   814fa:	e6eb      	b.n	812d4 <_malloc_r+0x18c>
   814fc:	687a      	ldr	r2, [r7, #4]
   814fe:	e688      	b.n	81212 <_malloc_r+0xca>
   81500:	f108 0801 	add.w	r8, r8, #1
   81504:	f018 0f03 	tst.w	r8, #3
   81508:	f10c 0c08 	add.w	ip, ip, #8
   8150c:	f47f ae93 	bne.w	81236 <_malloc_r+0xee>
   81510:	e02d      	b.n	8156e <_malloc_r+0x426>
   81512:	68dc      	ldr	r4, [r3, #12]
   81514:	42a3      	cmp	r3, r4
   81516:	bf08      	it	eq
   81518:	3002      	addeq	r0, #2
   8151a:	f43f ae4b 	beq.w	811b4 <_malloc_r+0x6c>
   8151e:	e6c9      	b.n	812b4 <_malloc_r+0x16c>
   81520:	461c      	mov	r4, r3
   81522:	4419      	add	r1, r3
   81524:	684a      	ldr	r2, [r1, #4]
   81526:	68db      	ldr	r3, [r3, #12]
   81528:	f854 6f08 	ldr.w	r6, [r4, #8]!
   8152c:	f042 0201 	orr.w	r2, r2, #1
   81530:	604a      	str	r2, [r1, #4]
   81532:	4628      	mov	r0, r5
   81534:	60f3      	str	r3, [r6, #12]
   81536:	609e      	str	r6, [r3, #8]
   81538:	f000 f9ce 	bl	818d8 <__malloc_unlock>
   8153c:	e6ca      	b.n	812d4 <_malloc_r+0x18c>
   8153e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   81542:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   81546:	00c1      	lsls	r1, r0, #3
   81548:	e620      	b.n	8118c <_malloc_r+0x44>
   8154a:	099a      	lsrs	r2, r3, #6
   8154c:	f102 0139 	add.w	r1, r2, #57	; 0x39
   81550:	00c9      	lsls	r1, r1, #3
   81552:	3238      	adds	r2, #56	; 0x38
   81554:	e7a4      	b.n	814a0 <_malloc_r+0x358>
   81556:	42bc      	cmp	r4, r7
   81558:	d054      	beq.n	81604 <_malloc_r+0x4bc>
   8155a:	68bc      	ldr	r4, [r7, #8]
   8155c:	6862      	ldr	r2, [r4, #4]
   8155e:	f022 0203 	bic.w	r2, r2, #3
   81562:	e75e      	b.n	81422 <_malloc_r+0x2da>
   81564:	f859 3908 	ldr.w	r3, [r9], #-8
   81568:	4599      	cmp	r9, r3
   8156a:	f040 8086 	bne.w	8167a <_malloc_r+0x532>
   8156e:	f010 0f03 	tst.w	r0, #3
   81572:	f100 30ff 	add.w	r0, r0, #4294967295
   81576:	d1f5      	bne.n	81564 <_malloc_r+0x41c>
   81578:	687b      	ldr	r3, [r7, #4]
   8157a:	ea23 0304 	bic.w	r3, r3, r4
   8157e:	607b      	str	r3, [r7, #4]
   81580:	0064      	lsls	r4, r4, #1
   81582:	429c      	cmp	r4, r3
   81584:	f63f aec8 	bhi.w	81318 <_malloc_r+0x1d0>
   81588:	2c00      	cmp	r4, #0
   8158a:	f43f aec5 	beq.w	81318 <_malloc_r+0x1d0>
   8158e:	421c      	tst	r4, r3
   81590:	4640      	mov	r0, r8
   81592:	f47f ae4c 	bne.w	8122e <_malloc_r+0xe6>
   81596:	0064      	lsls	r4, r4, #1
   81598:	421c      	tst	r4, r3
   8159a:	f100 0004 	add.w	r0, r0, #4
   8159e:	d0fa      	beq.n	81596 <_malloc_r+0x44e>
   815a0:	e645      	b.n	8122e <_malloc_r+0xe6>
   815a2:	468c      	mov	ip, r1
   815a4:	e78c      	b.n	814c0 <_malloc_r+0x378>
   815a6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   815aa:	d815      	bhi.n	815d8 <_malloc_r+0x490>
   815ac:	0bf3      	lsrs	r3, r6, #15
   815ae:	f103 0078 	add.w	r0, r3, #120	; 0x78
   815b2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   815b6:	00c1      	lsls	r1, r0, #3
   815b8:	e5e8      	b.n	8118c <_malloc_r+0x44>
   815ba:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   815be:	e6ee      	b.n	8139e <_malloc_r+0x256>
   815c0:	2101      	movs	r1, #1
   815c2:	687b      	ldr	r3, [r7, #4]
   815c4:	1092      	asrs	r2, r2, #2
   815c6:	fa01 f202 	lsl.w	r2, r1, r2
   815ca:	431a      	orrs	r2, r3
   815cc:	607a      	str	r2, [r7, #4]
   815ce:	4663      	mov	r3, ip
   815d0:	e779      	b.n	814c6 <_malloc_r+0x37e>
   815d2:	2301      	movs	r3, #1
   815d4:	6053      	str	r3, [r2, #4]
   815d6:	e72a      	b.n	8142e <_malloc_r+0x2e6>
   815d8:	f240 5254 	movw	r2, #1364	; 0x554
   815dc:	4293      	cmp	r3, r2
   815de:	d822      	bhi.n	81626 <_malloc_r+0x4de>
   815e0:	0cb3      	lsrs	r3, r6, #18
   815e2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   815e6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   815ea:	00c1      	lsls	r1, r0, #3
   815ec:	e5ce      	b.n	8118c <_malloc_r+0x44>
   815ee:	f103 0b10 	add.w	fp, r3, #16
   815f2:	e6af      	b.n	81354 <_malloc_r+0x20c>
   815f4:	2a54      	cmp	r2, #84	; 0x54
   815f6:	d829      	bhi.n	8164c <_malloc_r+0x504>
   815f8:	0b1a      	lsrs	r2, r3, #12
   815fa:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   815fe:	00c9      	lsls	r1, r1, #3
   81600:	326e      	adds	r2, #110	; 0x6e
   81602:	e74d      	b.n	814a0 <_malloc_r+0x358>
   81604:	4b20      	ldr	r3, [pc, #128]	; (81688 <_malloc_r+0x540>)
   81606:	6819      	ldr	r1, [r3, #0]
   81608:	4459      	add	r1, fp
   8160a:	6019      	str	r1, [r3, #0]
   8160c:	e6b3      	b.n	81376 <_malloc_r+0x22e>
   8160e:	f3ca 000b 	ubfx	r0, sl, #0, #12
   81612:	2800      	cmp	r0, #0
   81614:	f47f aeaf 	bne.w	81376 <_malloc_r+0x22e>
   81618:	eb08 030b 	add.w	r3, r8, fp
   8161c:	68ba      	ldr	r2, [r7, #8]
   8161e:	f043 0301 	orr.w	r3, r3, #1
   81622:	6053      	str	r3, [r2, #4]
   81624:	e6ef      	b.n	81406 <_malloc_r+0x2be>
   81626:	207f      	movs	r0, #127	; 0x7f
   81628:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8162c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   81630:	e5ac      	b.n	8118c <_malloc_r+0x44>
   81632:	f104 0108 	add.w	r1, r4, #8
   81636:	4628      	mov	r0, r5
   81638:	9300      	str	r3, [sp, #0]
   8163a:	f7ff fa7d 	bl	80b38 <_free_r>
   8163e:	9b00      	ldr	r3, [sp, #0]
   81640:	6819      	ldr	r1, [r3, #0]
   81642:	e6e0      	b.n	81406 <_malloc_r+0x2be>
   81644:	2001      	movs	r0, #1
   81646:	f04f 0900 	mov.w	r9, #0
   8164a:	e6bd      	b.n	813c8 <_malloc_r+0x280>
   8164c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   81650:	d805      	bhi.n	8165e <_malloc_r+0x516>
   81652:	0bda      	lsrs	r2, r3, #15
   81654:	f102 0178 	add.w	r1, r2, #120	; 0x78
   81658:	00c9      	lsls	r1, r1, #3
   8165a:	3277      	adds	r2, #119	; 0x77
   8165c:	e720      	b.n	814a0 <_malloc_r+0x358>
   8165e:	f240 5154 	movw	r1, #1364	; 0x554
   81662:	428a      	cmp	r2, r1
   81664:	d805      	bhi.n	81672 <_malloc_r+0x52a>
   81666:	0c9a      	lsrs	r2, r3, #18
   81668:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   8166c:	00c9      	lsls	r1, r1, #3
   8166e:	327c      	adds	r2, #124	; 0x7c
   81670:	e716      	b.n	814a0 <_malloc_r+0x358>
   81672:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   81676:	227e      	movs	r2, #126	; 0x7e
   81678:	e712      	b.n	814a0 <_malloc_r+0x358>
   8167a:	687b      	ldr	r3, [r7, #4]
   8167c:	e780      	b.n	81580 <_malloc_r+0x438>
   8167e:	08f0      	lsrs	r0, r6, #3
   81680:	f106 0308 	add.w	r3, r6, #8
   81684:	e60e      	b.n	812a4 <_malloc_r+0x15c>
   81686:	bf00      	nop
   81688:	20000c84 	.word	0x20000c84

0008168c <memchr>:
   8168c:	0783      	lsls	r3, r0, #30
   8168e:	b470      	push	{r4, r5, r6}
   81690:	b2cd      	uxtb	r5, r1
   81692:	d03d      	beq.n	81710 <memchr+0x84>
   81694:	1e54      	subs	r4, r2, #1
   81696:	b30a      	cbz	r2, 816dc <memchr+0x50>
   81698:	7803      	ldrb	r3, [r0, #0]
   8169a:	42ab      	cmp	r3, r5
   8169c:	d01f      	beq.n	816de <memchr+0x52>
   8169e:	1c43      	adds	r3, r0, #1
   816a0:	e005      	b.n	816ae <memchr+0x22>
   816a2:	f114 34ff 	adds.w	r4, r4, #4294967295
   816a6:	d319      	bcc.n	816dc <memchr+0x50>
   816a8:	7802      	ldrb	r2, [r0, #0]
   816aa:	42aa      	cmp	r2, r5
   816ac:	d017      	beq.n	816de <memchr+0x52>
   816ae:	f013 0f03 	tst.w	r3, #3
   816b2:	4618      	mov	r0, r3
   816b4:	f103 0301 	add.w	r3, r3, #1
   816b8:	d1f3      	bne.n	816a2 <memchr+0x16>
   816ba:	2c03      	cmp	r4, #3
   816bc:	d811      	bhi.n	816e2 <memchr+0x56>
   816be:	b34c      	cbz	r4, 81714 <memchr+0x88>
   816c0:	7803      	ldrb	r3, [r0, #0]
   816c2:	42ab      	cmp	r3, r5
   816c4:	d00b      	beq.n	816de <memchr+0x52>
   816c6:	4404      	add	r4, r0
   816c8:	1c43      	adds	r3, r0, #1
   816ca:	e002      	b.n	816d2 <memchr+0x46>
   816cc:	7802      	ldrb	r2, [r0, #0]
   816ce:	42aa      	cmp	r2, r5
   816d0:	d005      	beq.n	816de <memchr+0x52>
   816d2:	429c      	cmp	r4, r3
   816d4:	4618      	mov	r0, r3
   816d6:	f103 0301 	add.w	r3, r3, #1
   816da:	d1f7      	bne.n	816cc <memchr+0x40>
   816dc:	2000      	movs	r0, #0
   816de:	bc70      	pop	{r4, r5, r6}
   816e0:	4770      	bx	lr
   816e2:	0209      	lsls	r1, r1, #8
   816e4:	b289      	uxth	r1, r1
   816e6:	4329      	orrs	r1, r5
   816e8:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   816ec:	6803      	ldr	r3, [r0, #0]
   816ee:	4606      	mov	r6, r0
   816f0:	404b      	eors	r3, r1
   816f2:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   816f6:	ea22 0303 	bic.w	r3, r2, r3
   816fa:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   816fe:	f100 0004 	add.w	r0, r0, #4
   81702:	d103      	bne.n	8170c <memchr+0x80>
   81704:	3c04      	subs	r4, #4
   81706:	2c03      	cmp	r4, #3
   81708:	d8f0      	bhi.n	816ec <memchr+0x60>
   8170a:	e7d8      	b.n	816be <memchr+0x32>
   8170c:	4630      	mov	r0, r6
   8170e:	e7d7      	b.n	816c0 <memchr+0x34>
   81710:	4614      	mov	r4, r2
   81712:	e7d2      	b.n	816ba <memchr+0x2e>
   81714:	4620      	mov	r0, r4
   81716:	e7e2      	b.n	816de <memchr+0x52>

00081718 <memcpy>:
   81718:	4684      	mov	ip, r0
   8171a:	ea41 0300 	orr.w	r3, r1, r0
   8171e:	f013 0303 	ands.w	r3, r3, #3
   81722:	d149      	bne.n	817b8 <memcpy+0xa0>
   81724:	3a40      	subs	r2, #64	; 0x40
   81726:	d323      	bcc.n	81770 <memcpy+0x58>
   81728:	680b      	ldr	r3, [r1, #0]
   8172a:	6003      	str	r3, [r0, #0]
   8172c:	684b      	ldr	r3, [r1, #4]
   8172e:	6043      	str	r3, [r0, #4]
   81730:	688b      	ldr	r3, [r1, #8]
   81732:	6083      	str	r3, [r0, #8]
   81734:	68cb      	ldr	r3, [r1, #12]
   81736:	60c3      	str	r3, [r0, #12]
   81738:	690b      	ldr	r3, [r1, #16]
   8173a:	6103      	str	r3, [r0, #16]
   8173c:	694b      	ldr	r3, [r1, #20]
   8173e:	6143      	str	r3, [r0, #20]
   81740:	698b      	ldr	r3, [r1, #24]
   81742:	6183      	str	r3, [r0, #24]
   81744:	69cb      	ldr	r3, [r1, #28]
   81746:	61c3      	str	r3, [r0, #28]
   81748:	6a0b      	ldr	r3, [r1, #32]
   8174a:	6203      	str	r3, [r0, #32]
   8174c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   8174e:	6243      	str	r3, [r0, #36]	; 0x24
   81750:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   81752:	6283      	str	r3, [r0, #40]	; 0x28
   81754:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   81756:	62c3      	str	r3, [r0, #44]	; 0x2c
   81758:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8175a:	6303      	str	r3, [r0, #48]	; 0x30
   8175c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   8175e:	6343      	str	r3, [r0, #52]	; 0x34
   81760:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   81762:	6383      	str	r3, [r0, #56]	; 0x38
   81764:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   81766:	63c3      	str	r3, [r0, #60]	; 0x3c
   81768:	3040      	adds	r0, #64	; 0x40
   8176a:	3140      	adds	r1, #64	; 0x40
   8176c:	3a40      	subs	r2, #64	; 0x40
   8176e:	d2db      	bcs.n	81728 <memcpy+0x10>
   81770:	3230      	adds	r2, #48	; 0x30
   81772:	d30b      	bcc.n	8178c <memcpy+0x74>
   81774:	680b      	ldr	r3, [r1, #0]
   81776:	6003      	str	r3, [r0, #0]
   81778:	684b      	ldr	r3, [r1, #4]
   8177a:	6043      	str	r3, [r0, #4]
   8177c:	688b      	ldr	r3, [r1, #8]
   8177e:	6083      	str	r3, [r0, #8]
   81780:	68cb      	ldr	r3, [r1, #12]
   81782:	60c3      	str	r3, [r0, #12]
   81784:	3010      	adds	r0, #16
   81786:	3110      	adds	r1, #16
   81788:	3a10      	subs	r2, #16
   8178a:	d2f3      	bcs.n	81774 <memcpy+0x5c>
   8178c:	320c      	adds	r2, #12
   8178e:	d305      	bcc.n	8179c <memcpy+0x84>
   81790:	f851 3b04 	ldr.w	r3, [r1], #4
   81794:	f840 3b04 	str.w	r3, [r0], #4
   81798:	3a04      	subs	r2, #4
   8179a:	d2f9      	bcs.n	81790 <memcpy+0x78>
   8179c:	3204      	adds	r2, #4
   8179e:	d008      	beq.n	817b2 <memcpy+0x9a>
   817a0:	07d2      	lsls	r2, r2, #31
   817a2:	bf1c      	itt	ne
   817a4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   817a8:	f800 3b01 	strbne.w	r3, [r0], #1
   817ac:	d301      	bcc.n	817b2 <memcpy+0x9a>
   817ae:	880b      	ldrh	r3, [r1, #0]
   817b0:	8003      	strh	r3, [r0, #0]
   817b2:	4660      	mov	r0, ip
   817b4:	4770      	bx	lr
   817b6:	bf00      	nop
   817b8:	2a08      	cmp	r2, #8
   817ba:	d313      	bcc.n	817e4 <memcpy+0xcc>
   817bc:	078b      	lsls	r3, r1, #30
   817be:	d0b1      	beq.n	81724 <memcpy+0xc>
   817c0:	f010 0303 	ands.w	r3, r0, #3
   817c4:	d0ae      	beq.n	81724 <memcpy+0xc>
   817c6:	f1c3 0304 	rsb	r3, r3, #4
   817ca:	1ad2      	subs	r2, r2, r3
   817cc:	07db      	lsls	r3, r3, #31
   817ce:	bf1c      	itt	ne
   817d0:	f811 3b01 	ldrbne.w	r3, [r1], #1
   817d4:	f800 3b01 	strbne.w	r3, [r0], #1
   817d8:	d3a4      	bcc.n	81724 <memcpy+0xc>
   817da:	f831 3b02 	ldrh.w	r3, [r1], #2
   817de:	f820 3b02 	strh.w	r3, [r0], #2
   817e2:	e79f      	b.n	81724 <memcpy+0xc>
   817e4:	3a04      	subs	r2, #4
   817e6:	d3d9      	bcc.n	8179c <memcpy+0x84>
   817e8:	3a01      	subs	r2, #1
   817ea:	f811 3b01 	ldrb.w	r3, [r1], #1
   817ee:	f800 3b01 	strb.w	r3, [r0], #1
   817f2:	d2f9      	bcs.n	817e8 <memcpy+0xd0>
   817f4:	780b      	ldrb	r3, [r1, #0]
   817f6:	7003      	strb	r3, [r0, #0]
   817f8:	784b      	ldrb	r3, [r1, #1]
   817fa:	7043      	strb	r3, [r0, #1]
   817fc:	788b      	ldrb	r3, [r1, #2]
   817fe:	7083      	strb	r3, [r0, #2]
   81800:	4660      	mov	r0, ip
   81802:	4770      	bx	lr

00081804 <memmove>:
   81804:	4288      	cmp	r0, r1
   81806:	b5f0      	push	{r4, r5, r6, r7, lr}
   81808:	d90d      	bls.n	81826 <memmove+0x22>
   8180a:	188b      	adds	r3, r1, r2
   8180c:	4298      	cmp	r0, r3
   8180e:	d20a      	bcs.n	81826 <memmove+0x22>
   81810:	1884      	adds	r4, r0, r2
   81812:	2a00      	cmp	r2, #0
   81814:	d051      	beq.n	818ba <memmove+0xb6>
   81816:	4622      	mov	r2, r4
   81818:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   8181c:	4299      	cmp	r1, r3
   8181e:	f802 4d01 	strb.w	r4, [r2, #-1]!
   81822:	d1f9      	bne.n	81818 <memmove+0x14>
   81824:	bdf0      	pop	{r4, r5, r6, r7, pc}
   81826:	2a0f      	cmp	r2, #15
   81828:	d948      	bls.n	818bc <memmove+0xb8>
   8182a:	ea41 0300 	orr.w	r3, r1, r0
   8182e:	079b      	lsls	r3, r3, #30
   81830:	d146      	bne.n	818c0 <memmove+0xbc>
   81832:	4615      	mov	r5, r2
   81834:	f100 0410 	add.w	r4, r0, #16
   81838:	f101 0310 	add.w	r3, r1, #16
   8183c:	f853 6c10 	ldr.w	r6, [r3, #-16]
   81840:	3d10      	subs	r5, #16
   81842:	f844 6c10 	str.w	r6, [r4, #-16]
   81846:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   8184a:	2d0f      	cmp	r5, #15
   8184c:	f844 6c0c 	str.w	r6, [r4, #-12]
   81850:	f853 6c08 	ldr.w	r6, [r3, #-8]
   81854:	f104 0410 	add.w	r4, r4, #16
   81858:	f844 6c18 	str.w	r6, [r4, #-24]
   8185c:	f853 6c04 	ldr.w	r6, [r3, #-4]
   81860:	f103 0310 	add.w	r3, r3, #16
   81864:	f844 6c14 	str.w	r6, [r4, #-20]
   81868:	d8e8      	bhi.n	8183c <memmove+0x38>
   8186a:	f1a2 0310 	sub.w	r3, r2, #16
   8186e:	f023 030f 	bic.w	r3, r3, #15
   81872:	f002 0e0f 	and.w	lr, r2, #15
   81876:	3310      	adds	r3, #16
   81878:	f1be 0f03 	cmp.w	lr, #3
   8187c:	4419      	add	r1, r3
   8187e:	4403      	add	r3, r0
   81880:	d921      	bls.n	818c6 <memmove+0xc2>
   81882:	460e      	mov	r6, r1
   81884:	4674      	mov	r4, lr
   81886:	1f1d      	subs	r5, r3, #4
   81888:	f856 7b04 	ldr.w	r7, [r6], #4
   8188c:	3c04      	subs	r4, #4
   8188e:	2c03      	cmp	r4, #3
   81890:	f845 7f04 	str.w	r7, [r5, #4]!
   81894:	d8f8      	bhi.n	81888 <memmove+0x84>
   81896:	f1ae 0404 	sub.w	r4, lr, #4
   8189a:	f024 0403 	bic.w	r4, r4, #3
   8189e:	3404      	adds	r4, #4
   818a0:	4421      	add	r1, r4
   818a2:	4423      	add	r3, r4
   818a4:	f002 0203 	and.w	r2, r2, #3
   818a8:	b162      	cbz	r2, 818c4 <memmove+0xc0>
   818aa:	3b01      	subs	r3, #1
   818ac:	440a      	add	r2, r1
   818ae:	f811 4b01 	ldrb.w	r4, [r1], #1
   818b2:	428a      	cmp	r2, r1
   818b4:	f803 4f01 	strb.w	r4, [r3, #1]!
   818b8:	d1f9      	bne.n	818ae <memmove+0xaa>
   818ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
   818bc:	4603      	mov	r3, r0
   818be:	e7f3      	b.n	818a8 <memmove+0xa4>
   818c0:	4603      	mov	r3, r0
   818c2:	e7f2      	b.n	818aa <memmove+0xa6>
   818c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   818c6:	4672      	mov	r2, lr
   818c8:	e7ee      	b.n	818a8 <memmove+0xa4>
   818ca:	bf00      	nop

000818cc <__malloc_lock>:
   818cc:	4801      	ldr	r0, [pc, #4]	; (818d4 <__malloc_lock+0x8>)
   818ce:	f7ff bbbf 	b.w	81050 <__retarget_lock_acquire_recursive>
   818d2:	bf00      	nop
   818d4:	20000cd0 	.word	0x20000cd0

000818d8 <__malloc_unlock>:
   818d8:	4801      	ldr	r0, [pc, #4]	; (818e0 <__malloc_unlock+0x8>)
   818da:	f7ff bbbb 	b.w	81054 <__retarget_lock_release_recursive>
   818de:	bf00      	nop
   818e0:	20000cd0 	.word	0x20000cd0

000818e4 <_realloc_r>:
   818e4:	2900      	cmp	r1, #0
   818e6:	f000 8094 	beq.w	81a12 <_realloc_r+0x12e>
   818ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   818ee:	460c      	mov	r4, r1
   818f0:	4615      	mov	r5, r2
   818f2:	b083      	sub	sp, #12
   818f4:	4680      	mov	r8, r0
   818f6:	f105 060b 	add.w	r6, r5, #11
   818fa:	f7ff ffe7 	bl	818cc <__malloc_lock>
   818fe:	f854 ec04 	ldr.w	lr, [r4, #-4]
   81902:	2e16      	cmp	r6, #22
   81904:	f02e 0703 	bic.w	r7, lr, #3
   81908:	f1a4 0908 	sub.w	r9, r4, #8
   8190c:	d83c      	bhi.n	81988 <_realloc_r+0xa4>
   8190e:	2210      	movs	r2, #16
   81910:	4616      	mov	r6, r2
   81912:	42b5      	cmp	r5, r6
   81914:	d83d      	bhi.n	81992 <_realloc_r+0xae>
   81916:	4297      	cmp	r7, r2
   81918:	da43      	bge.n	819a2 <_realloc_r+0xbe>
   8191a:	4bc6      	ldr	r3, [pc, #792]	; (81c34 <_realloc_r+0x350>)
   8191c:	eb09 0007 	add.w	r0, r9, r7
   81920:	6899      	ldr	r1, [r3, #8]
   81922:	4288      	cmp	r0, r1
   81924:	f000 80c3 	beq.w	81aae <_realloc_r+0x1ca>
   81928:	6843      	ldr	r3, [r0, #4]
   8192a:	f023 0101 	bic.w	r1, r3, #1
   8192e:	4401      	add	r1, r0
   81930:	6849      	ldr	r1, [r1, #4]
   81932:	07c9      	lsls	r1, r1, #31
   81934:	d54d      	bpl.n	819d2 <_realloc_r+0xee>
   81936:	f01e 0f01 	tst.w	lr, #1
   8193a:	f000 809b 	beq.w	81a74 <_realloc_r+0x190>
   8193e:	4629      	mov	r1, r5
   81940:	4640      	mov	r0, r8
   81942:	f7ff fc01 	bl	81148 <_malloc_r>
   81946:	4605      	mov	r5, r0
   81948:	2800      	cmp	r0, #0
   8194a:	d03b      	beq.n	819c4 <_realloc_r+0xe0>
   8194c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   81950:	f1a0 0208 	sub.w	r2, r0, #8
   81954:	f023 0301 	bic.w	r3, r3, #1
   81958:	444b      	add	r3, r9
   8195a:	429a      	cmp	r2, r3
   8195c:	f000 812b 	beq.w	81bb6 <_realloc_r+0x2d2>
   81960:	1f3a      	subs	r2, r7, #4
   81962:	2a24      	cmp	r2, #36	; 0x24
   81964:	f200 8118 	bhi.w	81b98 <_realloc_r+0x2b4>
   81968:	2a13      	cmp	r2, #19
   8196a:	f200 80eb 	bhi.w	81b44 <_realloc_r+0x260>
   8196e:	4603      	mov	r3, r0
   81970:	4622      	mov	r2, r4
   81972:	6811      	ldr	r1, [r2, #0]
   81974:	6019      	str	r1, [r3, #0]
   81976:	6851      	ldr	r1, [r2, #4]
   81978:	6059      	str	r1, [r3, #4]
   8197a:	6892      	ldr	r2, [r2, #8]
   8197c:	609a      	str	r2, [r3, #8]
   8197e:	4621      	mov	r1, r4
   81980:	4640      	mov	r0, r8
   81982:	f7ff f8d9 	bl	80b38 <_free_r>
   81986:	e01d      	b.n	819c4 <_realloc_r+0xe0>
   81988:	f026 0607 	bic.w	r6, r6, #7
   8198c:	2e00      	cmp	r6, #0
   8198e:	4632      	mov	r2, r6
   81990:	dabf      	bge.n	81912 <_realloc_r+0x2e>
   81992:	2500      	movs	r5, #0
   81994:	230c      	movs	r3, #12
   81996:	4628      	mov	r0, r5
   81998:	f8c8 3000 	str.w	r3, [r8]
   8199c:	b003      	add	sp, #12
   8199e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   819a2:	4625      	mov	r5, r4
   819a4:	1bbb      	subs	r3, r7, r6
   819a6:	2b0f      	cmp	r3, #15
   819a8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   819ac:	d81d      	bhi.n	819ea <_realloc_r+0x106>
   819ae:	f002 0201 	and.w	r2, r2, #1
   819b2:	433a      	orrs	r2, r7
   819b4:	eb09 0107 	add.w	r1, r9, r7
   819b8:	f8c9 2004 	str.w	r2, [r9, #4]
   819bc:	684b      	ldr	r3, [r1, #4]
   819be:	f043 0301 	orr.w	r3, r3, #1
   819c2:	604b      	str	r3, [r1, #4]
   819c4:	4640      	mov	r0, r8
   819c6:	f7ff ff87 	bl	818d8 <__malloc_unlock>
   819ca:	4628      	mov	r0, r5
   819cc:	b003      	add	sp, #12
   819ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   819d2:	f023 0303 	bic.w	r3, r3, #3
   819d6:	18f9      	adds	r1, r7, r3
   819d8:	4291      	cmp	r1, r2
   819da:	db1d      	blt.n	81a18 <_realloc_r+0x134>
   819dc:	68c3      	ldr	r3, [r0, #12]
   819de:	6882      	ldr	r2, [r0, #8]
   819e0:	4625      	mov	r5, r4
   819e2:	60d3      	str	r3, [r2, #12]
   819e4:	460f      	mov	r7, r1
   819e6:	609a      	str	r2, [r3, #8]
   819e8:	e7dc      	b.n	819a4 <_realloc_r+0xc0>
   819ea:	f002 0201 	and.w	r2, r2, #1
   819ee:	eb09 0106 	add.w	r1, r9, r6
   819f2:	f043 0301 	orr.w	r3, r3, #1
   819f6:	4332      	orrs	r2, r6
   819f8:	f8c9 2004 	str.w	r2, [r9, #4]
   819fc:	444f      	add	r7, r9
   819fe:	604b      	str	r3, [r1, #4]
   81a00:	687b      	ldr	r3, [r7, #4]
   81a02:	3108      	adds	r1, #8
   81a04:	f043 0301 	orr.w	r3, r3, #1
   81a08:	607b      	str	r3, [r7, #4]
   81a0a:	4640      	mov	r0, r8
   81a0c:	f7ff f894 	bl	80b38 <_free_r>
   81a10:	e7d8      	b.n	819c4 <_realloc_r+0xe0>
   81a12:	4611      	mov	r1, r2
   81a14:	f7ff bb98 	b.w	81148 <_malloc_r>
   81a18:	f01e 0f01 	tst.w	lr, #1
   81a1c:	d18f      	bne.n	8193e <_realloc_r+0x5a>
   81a1e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   81a22:	eba9 0a01 	sub.w	sl, r9, r1
   81a26:	f8da 1004 	ldr.w	r1, [sl, #4]
   81a2a:	f021 0103 	bic.w	r1, r1, #3
   81a2e:	440b      	add	r3, r1
   81a30:	443b      	add	r3, r7
   81a32:	4293      	cmp	r3, r2
   81a34:	db26      	blt.n	81a84 <_realloc_r+0x1a0>
   81a36:	4655      	mov	r5, sl
   81a38:	68c1      	ldr	r1, [r0, #12]
   81a3a:	6880      	ldr	r0, [r0, #8]
   81a3c:	1f3a      	subs	r2, r7, #4
   81a3e:	60c1      	str	r1, [r0, #12]
   81a40:	6088      	str	r0, [r1, #8]
   81a42:	f855 0f08 	ldr.w	r0, [r5, #8]!
   81a46:	f8da 100c 	ldr.w	r1, [sl, #12]
   81a4a:	2a24      	cmp	r2, #36	; 0x24
   81a4c:	60c1      	str	r1, [r0, #12]
   81a4e:	6088      	str	r0, [r1, #8]
   81a50:	d826      	bhi.n	81aa0 <_realloc_r+0x1bc>
   81a52:	2a13      	cmp	r2, #19
   81a54:	f240 8081 	bls.w	81b5a <_realloc_r+0x276>
   81a58:	6821      	ldr	r1, [r4, #0]
   81a5a:	2a1b      	cmp	r2, #27
   81a5c:	f8ca 1008 	str.w	r1, [sl, #8]
   81a60:	6861      	ldr	r1, [r4, #4]
   81a62:	f8ca 100c 	str.w	r1, [sl, #12]
   81a66:	f200 80ad 	bhi.w	81bc4 <_realloc_r+0x2e0>
   81a6a:	f104 0008 	add.w	r0, r4, #8
   81a6e:	f10a 0210 	add.w	r2, sl, #16
   81a72:	e074      	b.n	81b5e <_realloc_r+0x27a>
   81a74:	f854 3c08 	ldr.w	r3, [r4, #-8]
   81a78:	eba9 0a03 	sub.w	sl, r9, r3
   81a7c:	f8da 1004 	ldr.w	r1, [sl, #4]
   81a80:	f021 0103 	bic.w	r1, r1, #3
   81a84:	187b      	adds	r3, r7, r1
   81a86:	4293      	cmp	r3, r2
   81a88:	f6ff af59 	blt.w	8193e <_realloc_r+0x5a>
   81a8c:	4655      	mov	r5, sl
   81a8e:	f8da 100c 	ldr.w	r1, [sl, #12]
   81a92:	f855 0f08 	ldr.w	r0, [r5, #8]!
   81a96:	1f3a      	subs	r2, r7, #4
   81a98:	2a24      	cmp	r2, #36	; 0x24
   81a9a:	60c1      	str	r1, [r0, #12]
   81a9c:	6088      	str	r0, [r1, #8]
   81a9e:	d9d8      	bls.n	81a52 <_realloc_r+0x16e>
   81aa0:	4621      	mov	r1, r4
   81aa2:	4628      	mov	r0, r5
   81aa4:	461f      	mov	r7, r3
   81aa6:	46d1      	mov	r9, sl
   81aa8:	f7ff feac 	bl	81804 <memmove>
   81aac:	e77a      	b.n	819a4 <_realloc_r+0xc0>
   81aae:	6841      	ldr	r1, [r0, #4]
   81ab0:	f106 0010 	add.w	r0, r6, #16
   81ab4:	f021 0b03 	bic.w	fp, r1, #3
   81ab8:	44bb      	add	fp, r7
   81aba:	4583      	cmp	fp, r0
   81abc:	da58      	bge.n	81b70 <_realloc_r+0x28c>
   81abe:	f01e 0f01 	tst.w	lr, #1
   81ac2:	f47f af3c 	bne.w	8193e <_realloc_r+0x5a>
   81ac6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   81aca:	eba9 0a01 	sub.w	sl, r9, r1
   81ace:	f8da 1004 	ldr.w	r1, [sl, #4]
   81ad2:	f021 0103 	bic.w	r1, r1, #3
   81ad6:	448b      	add	fp, r1
   81ad8:	4558      	cmp	r0, fp
   81ada:	dcd3      	bgt.n	81a84 <_realloc_r+0x1a0>
   81adc:	4655      	mov	r5, sl
   81ade:	f8da 100c 	ldr.w	r1, [sl, #12]
   81ae2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   81ae6:	1f3a      	subs	r2, r7, #4
   81ae8:	2a24      	cmp	r2, #36	; 0x24
   81aea:	60c1      	str	r1, [r0, #12]
   81aec:	6088      	str	r0, [r1, #8]
   81aee:	f200 808d 	bhi.w	81c0c <_realloc_r+0x328>
   81af2:	2a13      	cmp	r2, #19
   81af4:	f240 8087 	bls.w	81c06 <_realloc_r+0x322>
   81af8:	6821      	ldr	r1, [r4, #0]
   81afa:	2a1b      	cmp	r2, #27
   81afc:	f8ca 1008 	str.w	r1, [sl, #8]
   81b00:	6861      	ldr	r1, [r4, #4]
   81b02:	f8ca 100c 	str.w	r1, [sl, #12]
   81b06:	f200 8088 	bhi.w	81c1a <_realloc_r+0x336>
   81b0a:	f104 0108 	add.w	r1, r4, #8
   81b0e:	f10a 0210 	add.w	r2, sl, #16
   81b12:	6808      	ldr	r0, [r1, #0]
   81b14:	6010      	str	r0, [r2, #0]
   81b16:	6848      	ldr	r0, [r1, #4]
   81b18:	6050      	str	r0, [r2, #4]
   81b1a:	6889      	ldr	r1, [r1, #8]
   81b1c:	6091      	str	r1, [r2, #8]
   81b1e:	ebab 0206 	sub.w	r2, fp, r6
   81b22:	eb0a 0106 	add.w	r1, sl, r6
   81b26:	f042 0201 	orr.w	r2, r2, #1
   81b2a:	6099      	str	r1, [r3, #8]
   81b2c:	604a      	str	r2, [r1, #4]
   81b2e:	f8da 3004 	ldr.w	r3, [sl, #4]
   81b32:	4640      	mov	r0, r8
   81b34:	f003 0301 	and.w	r3, r3, #1
   81b38:	431e      	orrs	r6, r3
   81b3a:	f8ca 6004 	str.w	r6, [sl, #4]
   81b3e:	f7ff fecb 	bl	818d8 <__malloc_unlock>
   81b42:	e742      	b.n	819ca <_realloc_r+0xe6>
   81b44:	6823      	ldr	r3, [r4, #0]
   81b46:	2a1b      	cmp	r2, #27
   81b48:	6003      	str	r3, [r0, #0]
   81b4a:	6863      	ldr	r3, [r4, #4]
   81b4c:	6043      	str	r3, [r0, #4]
   81b4e:	d827      	bhi.n	81ba0 <_realloc_r+0x2bc>
   81b50:	f100 0308 	add.w	r3, r0, #8
   81b54:	f104 0208 	add.w	r2, r4, #8
   81b58:	e70b      	b.n	81972 <_realloc_r+0x8e>
   81b5a:	4620      	mov	r0, r4
   81b5c:	462a      	mov	r2, r5
   81b5e:	6801      	ldr	r1, [r0, #0]
   81b60:	461f      	mov	r7, r3
   81b62:	6011      	str	r1, [r2, #0]
   81b64:	6841      	ldr	r1, [r0, #4]
   81b66:	46d1      	mov	r9, sl
   81b68:	6051      	str	r1, [r2, #4]
   81b6a:	6883      	ldr	r3, [r0, #8]
   81b6c:	6093      	str	r3, [r2, #8]
   81b6e:	e719      	b.n	819a4 <_realloc_r+0xc0>
   81b70:	ebab 0b06 	sub.w	fp, fp, r6
   81b74:	eb09 0106 	add.w	r1, r9, r6
   81b78:	f04b 0201 	orr.w	r2, fp, #1
   81b7c:	6099      	str	r1, [r3, #8]
   81b7e:	604a      	str	r2, [r1, #4]
   81b80:	f854 3c04 	ldr.w	r3, [r4, #-4]
   81b84:	4640      	mov	r0, r8
   81b86:	f003 0301 	and.w	r3, r3, #1
   81b8a:	431e      	orrs	r6, r3
   81b8c:	f844 6c04 	str.w	r6, [r4, #-4]
   81b90:	f7ff fea2 	bl	818d8 <__malloc_unlock>
   81b94:	4625      	mov	r5, r4
   81b96:	e718      	b.n	819ca <_realloc_r+0xe6>
   81b98:	4621      	mov	r1, r4
   81b9a:	f7ff fe33 	bl	81804 <memmove>
   81b9e:	e6ee      	b.n	8197e <_realloc_r+0x9a>
   81ba0:	68a3      	ldr	r3, [r4, #8]
   81ba2:	2a24      	cmp	r2, #36	; 0x24
   81ba4:	6083      	str	r3, [r0, #8]
   81ba6:	68e3      	ldr	r3, [r4, #12]
   81ba8:	60c3      	str	r3, [r0, #12]
   81baa:	d018      	beq.n	81bde <_realloc_r+0x2fa>
   81bac:	f100 0310 	add.w	r3, r0, #16
   81bb0:	f104 0210 	add.w	r2, r4, #16
   81bb4:	e6dd      	b.n	81972 <_realloc_r+0x8e>
   81bb6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   81bba:	4625      	mov	r5, r4
   81bbc:	f023 0303 	bic.w	r3, r3, #3
   81bc0:	441f      	add	r7, r3
   81bc2:	e6ef      	b.n	819a4 <_realloc_r+0xc0>
   81bc4:	68a1      	ldr	r1, [r4, #8]
   81bc6:	2a24      	cmp	r2, #36	; 0x24
   81bc8:	f8ca 1010 	str.w	r1, [sl, #16]
   81bcc:	68e1      	ldr	r1, [r4, #12]
   81bce:	f8ca 1014 	str.w	r1, [sl, #20]
   81bd2:	d00d      	beq.n	81bf0 <_realloc_r+0x30c>
   81bd4:	f104 0010 	add.w	r0, r4, #16
   81bd8:	f10a 0218 	add.w	r2, sl, #24
   81bdc:	e7bf      	b.n	81b5e <_realloc_r+0x27a>
   81bde:	6922      	ldr	r2, [r4, #16]
   81be0:	f100 0318 	add.w	r3, r0, #24
   81be4:	6102      	str	r2, [r0, #16]
   81be6:	6961      	ldr	r1, [r4, #20]
   81be8:	f104 0218 	add.w	r2, r4, #24
   81bec:	6141      	str	r1, [r0, #20]
   81bee:	e6c0      	b.n	81972 <_realloc_r+0x8e>
   81bf0:	6922      	ldr	r2, [r4, #16]
   81bf2:	f104 0018 	add.w	r0, r4, #24
   81bf6:	f8ca 2018 	str.w	r2, [sl, #24]
   81bfa:	6961      	ldr	r1, [r4, #20]
   81bfc:	f10a 0220 	add.w	r2, sl, #32
   81c00:	f8ca 101c 	str.w	r1, [sl, #28]
   81c04:	e7ab      	b.n	81b5e <_realloc_r+0x27a>
   81c06:	4621      	mov	r1, r4
   81c08:	462a      	mov	r2, r5
   81c0a:	e782      	b.n	81b12 <_realloc_r+0x22e>
   81c0c:	4621      	mov	r1, r4
   81c0e:	4628      	mov	r0, r5
   81c10:	9301      	str	r3, [sp, #4]
   81c12:	f7ff fdf7 	bl	81804 <memmove>
   81c16:	9b01      	ldr	r3, [sp, #4]
   81c18:	e781      	b.n	81b1e <_realloc_r+0x23a>
   81c1a:	68a1      	ldr	r1, [r4, #8]
   81c1c:	2a24      	cmp	r2, #36	; 0x24
   81c1e:	f8ca 1010 	str.w	r1, [sl, #16]
   81c22:	68e1      	ldr	r1, [r4, #12]
   81c24:	f8ca 1014 	str.w	r1, [sl, #20]
   81c28:	d006      	beq.n	81c38 <_realloc_r+0x354>
   81c2a:	f104 0110 	add.w	r1, r4, #16
   81c2e:	f10a 0218 	add.w	r2, sl, #24
   81c32:	e76e      	b.n	81b12 <_realloc_r+0x22e>
   81c34:	20000434 	.word	0x20000434
   81c38:	6922      	ldr	r2, [r4, #16]
   81c3a:	f104 0118 	add.w	r1, r4, #24
   81c3e:	f8ca 2018 	str.w	r2, [sl, #24]
   81c42:	6960      	ldr	r0, [r4, #20]
   81c44:	f10a 0220 	add.w	r2, sl, #32
   81c48:	f8ca 001c 	str.w	r0, [sl, #28]
   81c4c:	e761      	b.n	81b12 <_realloc_r+0x22e>
   81c4e:	bf00      	nop

00081c50 <_sbrk_r>:
   81c50:	b538      	push	{r3, r4, r5, lr}
   81c52:	2300      	movs	r3, #0
   81c54:	4c06      	ldr	r4, [pc, #24]	; (81c70 <_sbrk_r+0x20>)
   81c56:	4605      	mov	r5, r0
   81c58:	4608      	mov	r0, r1
   81c5a:	6023      	str	r3, [r4, #0]
   81c5c:	f7fe fbc6 	bl	803ec <_sbrk>
   81c60:	1c43      	adds	r3, r0, #1
   81c62:	d000      	beq.n	81c66 <_sbrk_r+0x16>
   81c64:	bd38      	pop	{r3, r4, r5, pc}
   81c66:	6823      	ldr	r3, [r4, #0]
   81c68:	2b00      	cmp	r3, #0
   81c6a:	d0fb      	beq.n	81c64 <_sbrk_r+0x14>
   81c6c:	602b      	str	r3, [r5, #0]
   81c6e:	bd38      	pop	{r3, r4, r5, pc}
   81c70:	20000ce4 	.word	0x20000ce4

00081c74 <__sread>:
   81c74:	b510      	push	{r4, lr}
   81c76:	460c      	mov	r4, r1
   81c78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   81c7c:	f000 f966 	bl	81f4c <_read_r>
   81c80:	2800      	cmp	r0, #0
   81c82:	db03      	blt.n	81c8c <__sread+0x18>
   81c84:	6d23      	ldr	r3, [r4, #80]	; 0x50
   81c86:	4403      	add	r3, r0
   81c88:	6523      	str	r3, [r4, #80]	; 0x50
   81c8a:	bd10      	pop	{r4, pc}
   81c8c:	89a3      	ldrh	r3, [r4, #12]
   81c8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   81c92:	81a3      	strh	r3, [r4, #12]
   81c94:	bd10      	pop	{r4, pc}
   81c96:	bf00      	nop

00081c98 <__swrite>:
   81c98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81c9c:	460c      	mov	r4, r1
   81c9e:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   81ca2:	461f      	mov	r7, r3
   81ca4:	05cb      	lsls	r3, r1, #23
   81ca6:	4616      	mov	r6, r2
   81ca8:	4605      	mov	r5, r0
   81caa:	d507      	bpl.n	81cbc <__swrite+0x24>
   81cac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   81cb0:	2302      	movs	r3, #2
   81cb2:	2200      	movs	r2, #0
   81cb4:	f000 f934 	bl	81f20 <_lseek_r>
   81cb8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   81cbc:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   81cc0:	81a1      	strh	r1, [r4, #12]
   81cc2:	463b      	mov	r3, r7
   81cc4:	4632      	mov	r2, r6
   81cc6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   81cca:	4628      	mov	r0, r5
   81ccc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   81cd0:	f000 b814 	b.w	81cfc <_write_r>

00081cd4 <__sseek>:
   81cd4:	b510      	push	{r4, lr}
   81cd6:	460c      	mov	r4, r1
   81cd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   81cdc:	f000 f920 	bl	81f20 <_lseek_r>
   81ce0:	89a3      	ldrh	r3, [r4, #12]
   81ce2:	1c42      	adds	r2, r0, #1
   81ce4:	bf0e      	itee	eq
   81ce6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   81cea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   81cee:	6520      	strne	r0, [r4, #80]	; 0x50
   81cf0:	81a3      	strh	r3, [r4, #12]
   81cf2:	bd10      	pop	{r4, pc}

00081cf4 <__sclose>:
   81cf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   81cf8:	f000 b878 	b.w	81dec <_close_r>

00081cfc <_write_r>:
   81cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81cfe:	460e      	mov	r6, r1
   81d00:	2500      	movs	r5, #0
   81d02:	4c08      	ldr	r4, [pc, #32]	; (81d24 <_write_r+0x28>)
   81d04:	4611      	mov	r1, r2
   81d06:	4607      	mov	r7, r0
   81d08:	461a      	mov	r2, r3
   81d0a:	4630      	mov	r0, r6
   81d0c:	6025      	str	r5, [r4, #0]
   81d0e:	f7fe fb8f 	bl	80430 <_write>
   81d12:	1c43      	adds	r3, r0, #1
   81d14:	d000      	beq.n	81d18 <_write_r+0x1c>
   81d16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81d18:	6823      	ldr	r3, [r4, #0]
   81d1a:	2b00      	cmp	r3, #0
   81d1c:	d0fb      	beq.n	81d16 <_write_r+0x1a>
   81d1e:	603b      	str	r3, [r7, #0]
   81d20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81d22:	bf00      	nop
   81d24:	20000ce4 	.word	0x20000ce4

00081d28 <__register_exitproc>:
   81d28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   81d2c:	4d2c      	ldr	r5, [pc, #176]	; (81de0 <__register_exitproc+0xb8>)
   81d2e:	4606      	mov	r6, r0
   81d30:	6828      	ldr	r0, [r5, #0]
   81d32:	4698      	mov	r8, r3
   81d34:	460f      	mov	r7, r1
   81d36:	4691      	mov	r9, r2
   81d38:	f7ff f98a 	bl	81050 <__retarget_lock_acquire_recursive>
   81d3c:	4b29      	ldr	r3, [pc, #164]	; (81de4 <__register_exitproc+0xbc>)
   81d3e:	681c      	ldr	r4, [r3, #0]
   81d40:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   81d44:	2b00      	cmp	r3, #0
   81d46:	d03e      	beq.n	81dc6 <__register_exitproc+0x9e>
   81d48:	685a      	ldr	r2, [r3, #4]
   81d4a:	2a1f      	cmp	r2, #31
   81d4c:	dc1c      	bgt.n	81d88 <__register_exitproc+0x60>
   81d4e:	f102 0e01 	add.w	lr, r2, #1
   81d52:	b176      	cbz	r6, 81d72 <__register_exitproc+0x4a>
   81d54:	2101      	movs	r1, #1
   81d56:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   81d5a:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   81d5e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   81d62:	4091      	lsls	r1, r2
   81d64:	4308      	orrs	r0, r1
   81d66:	2e02      	cmp	r6, #2
   81d68:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   81d6c:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   81d70:	d023      	beq.n	81dba <__register_exitproc+0x92>
   81d72:	3202      	adds	r2, #2
   81d74:	f8c3 e004 	str.w	lr, [r3, #4]
   81d78:	6828      	ldr	r0, [r5, #0]
   81d7a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   81d7e:	f7ff f969 	bl	81054 <__retarget_lock_release_recursive>
   81d82:	2000      	movs	r0, #0
   81d84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81d88:	4b17      	ldr	r3, [pc, #92]	; (81de8 <__register_exitproc+0xc0>)
   81d8a:	b30b      	cbz	r3, 81dd0 <__register_exitproc+0xa8>
   81d8c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   81d90:	f3af 8000 	nop.w
   81d94:	4603      	mov	r3, r0
   81d96:	b1d8      	cbz	r0, 81dd0 <__register_exitproc+0xa8>
   81d98:	2000      	movs	r0, #0
   81d9a:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   81d9e:	f04f 0e01 	mov.w	lr, #1
   81da2:	6058      	str	r0, [r3, #4]
   81da4:	6019      	str	r1, [r3, #0]
   81da6:	4602      	mov	r2, r0
   81da8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81dac:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   81db0:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   81db4:	2e00      	cmp	r6, #0
   81db6:	d0dc      	beq.n	81d72 <__register_exitproc+0x4a>
   81db8:	e7cc      	b.n	81d54 <__register_exitproc+0x2c>
   81dba:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   81dbe:	4301      	orrs	r1, r0
   81dc0:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   81dc4:	e7d5      	b.n	81d72 <__register_exitproc+0x4a>
   81dc6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   81dca:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81dce:	e7bb      	b.n	81d48 <__register_exitproc+0x20>
   81dd0:	6828      	ldr	r0, [r5, #0]
   81dd2:	f7ff f93f 	bl	81054 <__retarget_lock_release_recursive>
   81dd6:	f04f 30ff 	mov.w	r0, #4294967295
   81dda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81dde:	bf00      	nop
   81de0:	20000430 	.word	0x20000430
   81de4:	00081f94 	.word	0x00081f94
   81de8:	00000000 	.word	0x00000000

00081dec <_close_r>:
   81dec:	b538      	push	{r3, r4, r5, lr}
   81dee:	2300      	movs	r3, #0
   81df0:	4c06      	ldr	r4, [pc, #24]	; (81e0c <_close_r+0x20>)
   81df2:	4605      	mov	r5, r0
   81df4:	4608      	mov	r0, r1
   81df6:	6023      	str	r3, [r4, #0]
   81df8:	f7fe fb0e 	bl	80418 <_close>
   81dfc:	1c43      	adds	r3, r0, #1
   81dfe:	d000      	beq.n	81e02 <_close_r+0x16>
   81e00:	bd38      	pop	{r3, r4, r5, pc}
   81e02:	6823      	ldr	r3, [r4, #0]
   81e04:	2b00      	cmp	r3, #0
   81e06:	d0fb      	beq.n	81e00 <_close_r+0x14>
   81e08:	602b      	str	r3, [r5, #0]
   81e0a:	bd38      	pop	{r3, r4, r5, pc}
   81e0c:	20000ce4 	.word	0x20000ce4

00081e10 <_fclose_r>:
   81e10:	b570      	push	{r4, r5, r6, lr}
   81e12:	b159      	cbz	r1, 81e2c <_fclose_r+0x1c>
   81e14:	4605      	mov	r5, r0
   81e16:	460c      	mov	r4, r1
   81e18:	b110      	cbz	r0, 81e20 <_fclose_r+0x10>
   81e1a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81e1c:	2b00      	cmp	r3, #0
   81e1e:	d03c      	beq.n	81e9a <_fclose_r+0x8a>
   81e20:	6e63      	ldr	r3, [r4, #100]	; 0x64
   81e22:	07d8      	lsls	r0, r3, #31
   81e24:	d505      	bpl.n	81e32 <_fclose_r+0x22>
   81e26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81e2a:	b92b      	cbnz	r3, 81e38 <_fclose_r+0x28>
   81e2c:	2600      	movs	r6, #0
   81e2e:	4630      	mov	r0, r6
   81e30:	bd70      	pop	{r4, r5, r6, pc}
   81e32:	89a3      	ldrh	r3, [r4, #12]
   81e34:	0599      	lsls	r1, r3, #22
   81e36:	d53c      	bpl.n	81eb2 <_fclose_r+0xa2>
   81e38:	4621      	mov	r1, r4
   81e3a:	4628      	mov	r0, r5
   81e3c:	f7fe fce2 	bl	80804 <__sflush_r>
   81e40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   81e42:	4606      	mov	r6, r0
   81e44:	b133      	cbz	r3, 81e54 <_fclose_r+0x44>
   81e46:	69e1      	ldr	r1, [r4, #28]
   81e48:	4628      	mov	r0, r5
   81e4a:	4798      	blx	r3
   81e4c:	2800      	cmp	r0, #0
   81e4e:	bfb8      	it	lt
   81e50:	f04f 36ff 	movlt.w	r6, #4294967295
   81e54:	89a3      	ldrh	r3, [r4, #12]
   81e56:	061a      	lsls	r2, r3, #24
   81e58:	d422      	bmi.n	81ea0 <_fclose_r+0x90>
   81e5a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   81e5c:	b141      	cbz	r1, 81e70 <_fclose_r+0x60>
   81e5e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81e62:	4299      	cmp	r1, r3
   81e64:	d002      	beq.n	81e6c <_fclose_r+0x5c>
   81e66:	4628      	mov	r0, r5
   81e68:	f7fe fe66 	bl	80b38 <_free_r>
   81e6c:	2300      	movs	r3, #0
   81e6e:	6323      	str	r3, [r4, #48]	; 0x30
   81e70:	6c61      	ldr	r1, [r4, #68]	; 0x44
   81e72:	b121      	cbz	r1, 81e7e <_fclose_r+0x6e>
   81e74:	4628      	mov	r0, r5
   81e76:	f7fe fe5f 	bl	80b38 <_free_r>
   81e7a:	2300      	movs	r3, #0
   81e7c:	6463      	str	r3, [r4, #68]	; 0x44
   81e7e:	f7fe fde5 	bl	80a4c <__sfp_lock_acquire>
   81e82:	2200      	movs	r2, #0
   81e84:	6e63      	ldr	r3, [r4, #100]	; 0x64
   81e86:	81a2      	strh	r2, [r4, #12]
   81e88:	07db      	lsls	r3, r3, #31
   81e8a:	d50e      	bpl.n	81eaa <_fclose_r+0x9a>
   81e8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81e8e:	f7ff f8dd 	bl	8104c <__retarget_lock_close_recursive>
   81e92:	f7fe fde1 	bl	80a58 <__sfp_lock_release>
   81e96:	4630      	mov	r0, r6
   81e98:	bd70      	pop	{r4, r5, r6, pc}
   81e9a:	f7fe fda7 	bl	809ec <__sinit>
   81e9e:	e7bf      	b.n	81e20 <_fclose_r+0x10>
   81ea0:	6921      	ldr	r1, [r4, #16]
   81ea2:	4628      	mov	r0, r5
   81ea4:	f7fe fe48 	bl	80b38 <_free_r>
   81ea8:	e7d7      	b.n	81e5a <_fclose_r+0x4a>
   81eaa:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81eac:	f7ff f8d2 	bl	81054 <__retarget_lock_release_recursive>
   81eb0:	e7ec      	b.n	81e8c <_fclose_r+0x7c>
   81eb2:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81eb4:	f7ff f8cc 	bl	81050 <__retarget_lock_acquire_recursive>
   81eb8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81ebc:	2b00      	cmp	r3, #0
   81ebe:	d1bb      	bne.n	81e38 <_fclose_r+0x28>
   81ec0:	6e66      	ldr	r6, [r4, #100]	; 0x64
   81ec2:	f016 0601 	ands.w	r6, r6, #1
   81ec6:	d1b1      	bne.n	81e2c <_fclose_r+0x1c>
   81ec8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81eca:	f7ff f8c3 	bl	81054 <__retarget_lock_release_recursive>
   81ece:	4630      	mov	r0, r6
   81ed0:	bd70      	pop	{r4, r5, r6, pc}
   81ed2:	bf00      	nop

00081ed4 <_fstat_r>:
   81ed4:	b570      	push	{r4, r5, r6, lr}
   81ed6:	460d      	mov	r5, r1
   81ed8:	2300      	movs	r3, #0
   81eda:	4c07      	ldr	r4, [pc, #28]	; (81ef8 <_fstat_r+0x24>)
   81edc:	4606      	mov	r6, r0
   81ede:	4611      	mov	r1, r2
   81ee0:	4628      	mov	r0, r5
   81ee2:	6023      	str	r3, [r4, #0]
   81ee4:	f7fe fa9b 	bl	8041e <_fstat>
   81ee8:	1c43      	adds	r3, r0, #1
   81eea:	d000      	beq.n	81eee <_fstat_r+0x1a>
   81eec:	bd70      	pop	{r4, r5, r6, pc}
   81eee:	6823      	ldr	r3, [r4, #0]
   81ef0:	2b00      	cmp	r3, #0
   81ef2:	d0fb      	beq.n	81eec <_fstat_r+0x18>
   81ef4:	6033      	str	r3, [r6, #0]
   81ef6:	bd70      	pop	{r4, r5, r6, pc}
   81ef8:	20000ce4 	.word	0x20000ce4

00081efc <_isatty_r>:
   81efc:	b538      	push	{r3, r4, r5, lr}
   81efe:	2300      	movs	r3, #0
   81f00:	4c06      	ldr	r4, [pc, #24]	; (81f1c <_isatty_r+0x20>)
   81f02:	4605      	mov	r5, r0
   81f04:	4608      	mov	r0, r1
   81f06:	6023      	str	r3, [r4, #0]
   81f08:	f7fe fa8e 	bl	80428 <_isatty>
   81f0c:	1c43      	adds	r3, r0, #1
   81f0e:	d000      	beq.n	81f12 <_isatty_r+0x16>
   81f10:	bd38      	pop	{r3, r4, r5, pc}
   81f12:	6823      	ldr	r3, [r4, #0]
   81f14:	2b00      	cmp	r3, #0
   81f16:	d0fb      	beq.n	81f10 <_isatty_r+0x14>
   81f18:	602b      	str	r3, [r5, #0]
   81f1a:	bd38      	pop	{r3, r4, r5, pc}
   81f1c:	20000ce4 	.word	0x20000ce4

00081f20 <_lseek_r>:
   81f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81f22:	460e      	mov	r6, r1
   81f24:	2500      	movs	r5, #0
   81f26:	4c08      	ldr	r4, [pc, #32]	; (81f48 <_lseek_r+0x28>)
   81f28:	4611      	mov	r1, r2
   81f2a:	4607      	mov	r7, r0
   81f2c:	461a      	mov	r2, r3
   81f2e:	4630      	mov	r0, r6
   81f30:	6025      	str	r5, [r4, #0]
   81f32:	f7fe fa7b 	bl	8042c <_lseek>
   81f36:	1c43      	adds	r3, r0, #1
   81f38:	d000      	beq.n	81f3c <_lseek_r+0x1c>
   81f3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81f3c:	6823      	ldr	r3, [r4, #0]
   81f3e:	2b00      	cmp	r3, #0
   81f40:	d0fb      	beq.n	81f3a <_lseek_r+0x1a>
   81f42:	603b      	str	r3, [r7, #0]
   81f44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81f46:	bf00      	nop
   81f48:	20000ce4 	.word	0x20000ce4

00081f4c <_read_r>:
   81f4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81f4e:	460e      	mov	r6, r1
   81f50:	2500      	movs	r5, #0
   81f52:	4c08      	ldr	r4, [pc, #32]	; (81f74 <_read_r+0x28>)
   81f54:	4611      	mov	r1, r2
   81f56:	4607      	mov	r7, r0
   81f58:	461a      	mov	r2, r3
   81f5a:	4630      	mov	r0, r6
   81f5c:	6025      	str	r5, [r4, #0]
   81f5e:	f7fe fa7b 	bl	80458 <_read>
   81f62:	1c43      	adds	r3, r0, #1
   81f64:	d000      	beq.n	81f68 <_read_r+0x1c>
   81f66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81f68:	6823      	ldr	r3, [r4, #0]
   81f6a:	2b00      	cmp	r3, #0
   81f6c:	d0fb      	beq.n	81f66 <_read_r+0x1a>
   81f6e:	603b      	str	r3, [r7, #0]
   81f70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81f72:	bf00      	nop
   81f74:	20000ce4 	.word	0x20000ce4
   81f78:	54524155 	.word	0x54524155
   81f7c:	63657220 	.word	0x63657220
   81f80:	65766965 	.word	0x65766965
   81f84:	66756220 	.word	0x66756220
   81f88:	20726566 	.word	0x20726566
   81f8c:	6c6c7566 	.word	0x6c6c7566
   81f90:	00000000 	.word	0x00000000

00081f94 <_global_impure_ptr>:
   81f94:	20000008 0000000a                       ... ....

00081f9c <_init>:
   81f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81f9e:	bf00      	nop
   81fa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   81fa2:	bc08      	pop	{r3}
   81fa4:	469e      	mov	lr, r3
   81fa6:	4770      	bx	lr

00081fa8 <__init_array_start>:
   81fa8:	000807e5 	.word	0x000807e5

00081fac <__frame_dummy_init_array_entry>:
   81fac:	00080119 00080275                       ....u...

00081fb4 <_fini>:
   81fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81fb6:	bf00      	nop
   81fb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   81fba:	bc08      	pop	{r3}
   81fbc:	469e      	mov	lr, r3
   81fbe:	4770      	bx	lr

00081fc0 <__fini_array_start>:
   81fc0:	000800f5 	.word	0x000800f5
