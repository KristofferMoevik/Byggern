
ATSAM3X8E.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000298c  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000844  20000000  0008298c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004a0  20000848  000831d8  00020848  2**3
                  ALLOC
  3 .stack        00000400  20000ce8  00083678  00020848  2**0
                  ALLOC
  4 .heap         00000200  200010e8  00083a78  00020848  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020844  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002086d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00006bd8  00000000  00000000  000208c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001070  00000000  00000000  0002749e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000e39  00000000  00000000  0002850e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000268  00000000  00000000  00029347  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000208  00000000  00000000  000295af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00011ff6  00000000  00000000  000297b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000033d8  00000000  00000000  0003b7ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00055bdb  00000000  00000000  0003eb85  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000105c  00000000  00000000  00094760  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	e8 10 00 20 65 01 08 00 61 01 08 00 61 01 08 00     ... e...a...a...
   80010:	61 01 08 00 61 01 08 00 61 01 08 00 00 00 00 00     a...a...a.......
	...
   8002c:	61 01 08 00 61 01 08 00 00 00 00 00 61 01 08 00     a...a.......a...
   8003c:	45 03 08 00 61 01 08 00 61 01 08 00 61 01 08 00     E...a...a...a...
   8004c:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   8005c:	61 01 08 00 41 04 08 00 61 01 08 00 00 00 00 00     a...A...a.......
   8006c:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
	...
   80084:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   80094:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800a4:	00 00 00 00 61 01 08 00 61 01 08 00 61 01 08 00     ....a...a...a...
   800b4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800c4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800d4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...
   800e4:	61 01 08 00 61 01 08 00 61 01 08 00 61 01 08 00     a...a...a...a...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000848 	.word	0x20000848
   80110:	00000000 	.word	0x00000000
   80114:	0008298c 	.word	0x0008298c

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	0008298c 	.word	0x0008298c
   80154:	2000084c 	.word	0x2000084c
   80158:	0008298c 	.word	0x0008298c
   8015c:	00000000 	.word	0x00000000

00080160 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80160:	e7fe      	b.n	80160 <Dummy_Handler>
	...

00080164 <Reset_Handler>:
{
   80164:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
   80166:	4b11      	ldr	r3, [pc, #68]	; (801ac <Reset_Handler+0x48>)
   80168:	4a11      	ldr	r2, [pc, #68]	; (801b0 <Reset_Handler+0x4c>)
   8016a:	429a      	cmp	r2, r3
   8016c:	d009      	beq.n	80182 <Reset_Handler+0x1e>
   8016e:	4b0f      	ldr	r3, [pc, #60]	; (801ac <Reset_Handler+0x48>)
   80170:	4a0f      	ldr	r2, [pc, #60]	; (801b0 <Reset_Handler+0x4c>)
   80172:	e003      	b.n	8017c <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
   80174:	6811      	ldr	r1, [r2, #0]
   80176:	6019      	str	r1, [r3, #0]
   80178:	3304      	adds	r3, #4
   8017a:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
   8017c:	490d      	ldr	r1, [pc, #52]	; (801b4 <Reset_Handler+0x50>)
   8017e:	428b      	cmp	r3, r1
   80180:	d3f8      	bcc.n	80174 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
   80182:	4b0d      	ldr	r3, [pc, #52]	; (801b8 <Reset_Handler+0x54>)
   80184:	e002      	b.n	8018c <Reset_Handler+0x28>
                *pDest++ = 0;
   80186:	2200      	movs	r2, #0
   80188:	601a      	str	r2, [r3, #0]
   8018a:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
   8018c:	4a0b      	ldr	r2, [pc, #44]	; (801bc <Reset_Handler+0x58>)
   8018e:	4293      	cmp	r3, r2
   80190:	d3f9      	bcc.n	80186 <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80192:	4b0b      	ldr	r3, [pc, #44]	; (801c0 <Reset_Handler+0x5c>)
   80194:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   80198:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   8019c:	4a09      	ldr	r2, [pc, #36]	; (801c4 <Reset_Handler+0x60>)
   8019e:	6093      	str	r3, [r2, #8]
        __libc_init_array();
   801a0:	4b09      	ldr	r3, [pc, #36]	; (801c8 <Reset_Handler+0x64>)
   801a2:	4798      	blx	r3
        main();
   801a4:	4b09      	ldr	r3, [pc, #36]	; (801cc <Reset_Handler+0x68>)
   801a6:	4798      	blx	r3
   801a8:	e7fe      	b.n	801a8 <Reset_Handler+0x44>
   801aa:	bf00      	nop
   801ac:	20000000 	.word	0x20000000
   801b0:	0008298c 	.word	0x0008298c
   801b4:	20000844 	.word	0x20000844
   801b8:	20000848 	.word	0x20000848
   801bc:	20000ce8 	.word	0x20000ce8
   801c0:	00080000 	.word	0x00080000
   801c4:	e000ed00 	.word	0xe000ed00
   801c8:	00080eed 	.word	0x00080eed
   801cc:	000806bd 	.word	0x000806bd

000801d0 <SystemInit>:
 * Initialize the System and update the SystemFrequency variable.
 */
void SystemInit( void )
{
  /* Set FWS according to SYS_BOARD_MCKR configuration */
  EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
   801d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
   801d4:	4a20      	ldr	r2, [pc, #128]	; (80258 <SystemInit+0x88>)
   801d6:	6013      	str	r3, [r2, #0]
  EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
   801d8:	f502 7200 	add.w	r2, r2, #512	; 0x200
   801dc:	6013      	str	r3, [r2, #0]

  /* Initialize main oscillator */
  if ( !(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) )
   801de:	4b1f      	ldr	r3, [pc, #124]	; (8025c <SystemInit+0x8c>)
   801e0:	6a1b      	ldr	r3, [r3, #32]
   801e2:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   801e6:	d107      	bne.n	801f8 <SystemInit+0x28>
  {
    PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
   801e8:	4a1d      	ldr	r2, [pc, #116]	; (80260 <SystemInit+0x90>)
   801ea:	4b1c      	ldr	r3, [pc, #112]	; (8025c <SystemInit+0x8c>)
   801ec:	621a      	str	r2, [r3, #32]
    while ( !(PMC->PMC_SR & PMC_SR_MOSCXTS) )
   801ee:	4b1b      	ldr	r3, [pc, #108]	; (8025c <SystemInit+0x8c>)
   801f0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   801f2:	f013 0f01 	tst.w	r3, #1
   801f6:	d0fa      	beq.n	801ee <SystemInit+0x1e>
    {
    }
  }

  /* Switch to 3-20MHz Xtal oscillator */
  PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
   801f8:	4a1a      	ldr	r2, [pc, #104]	; (80264 <SystemInit+0x94>)
   801fa:	4b18      	ldr	r3, [pc, #96]	; (8025c <SystemInit+0x8c>)
   801fc:	621a      	str	r2, [r3, #32]

  while ( !(PMC->PMC_SR & PMC_SR_MOSCSELS) )
   801fe:	4b17      	ldr	r3, [pc, #92]	; (8025c <SystemInit+0x8c>)
   80200:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80202:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80206:	d0fa      	beq.n	801fe <SystemInit+0x2e>
  {
  }
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
   80208:	4a14      	ldr	r2, [pc, #80]	; (8025c <SystemInit+0x8c>)
   8020a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8020c:	f023 0303 	bic.w	r3, r3, #3
   80210:	f043 0301 	orr.w	r3, r3, #1
   80214:	6313      	str	r3, [r2, #48]	; 0x30
  while (!(PMC->PMC_SR & PMC_SR_MCKRDY))
   80216:	4b11      	ldr	r3, [pc, #68]	; (8025c <SystemInit+0x8c>)
   80218:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8021a:	f013 0f08 	tst.w	r3, #8
   8021e:	d0fa      	beq.n	80216 <SystemInit+0x46>
  {
  }

  /* Initialize PLLA */
  PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
   80220:	4a11      	ldr	r2, [pc, #68]	; (80268 <SystemInit+0x98>)
   80222:	4b0e      	ldr	r3, [pc, #56]	; (8025c <SystemInit+0x8c>)
   80224:	629a      	str	r2, [r3, #40]	; 0x28
  while ( !(PMC->PMC_SR & PMC_SR_LOCKA) )
   80226:	4b0d      	ldr	r3, [pc, #52]	; (8025c <SystemInit+0x8c>)
   80228:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8022a:	f013 0f02 	tst.w	r3, #2
   8022e:	d0fa      	beq.n	80226 <SystemInit+0x56>
  {
  }

  /* Switch to main clock */
  PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
   80230:	2211      	movs	r2, #17
   80232:	4b0a      	ldr	r3, [pc, #40]	; (8025c <SystemInit+0x8c>)
   80234:	631a      	str	r2, [r3, #48]	; 0x30
  while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
   80236:	4b09      	ldr	r3, [pc, #36]	; (8025c <SystemInit+0x8c>)
   80238:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8023a:	f013 0f08 	tst.w	r3, #8
   8023e:	d0fa      	beq.n	80236 <SystemInit+0x66>
  {
  }

  /* Switch to PLLA */
  PMC->PMC_MCKR = SYS_BOARD_MCKR;
   80240:	2212      	movs	r2, #18
   80242:	4b06      	ldr	r3, [pc, #24]	; (8025c <SystemInit+0x8c>)
   80244:	631a      	str	r2, [r3, #48]	; 0x30
  while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
   80246:	4b05      	ldr	r3, [pc, #20]	; (8025c <SystemInit+0x8c>)
   80248:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8024a:	f013 0f08 	tst.w	r3, #8
   8024e:	d0fa      	beq.n	80246 <SystemInit+0x76>
  {
  }

  SystemCoreClock = CHIP_FREQ_CPU_MAX;
   80250:	4a06      	ldr	r2, [pc, #24]	; (8026c <SystemInit+0x9c>)
   80252:	4b07      	ldr	r3, [pc, #28]	; (80270 <SystemInit+0xa0>)
   80254:	601a      	str	r2, [r3, #0]
   80256:	4770      	bx	lr
   80258:	400e0a00 	.word	0x400e0a00
   8025c:	400e0600 	.word	0x400e0600
   80260:	00370809 	.word	0x00370809
   80264:	01370809 	.word	0x01370809
   80268:	200d3f01 	.word	0x200d3f01
   8026c:	0501bd00 	.word	0x0501bd00
   80270:	20000000 	.word	0x20000000

00080274 <can_init>:

#define txMailbox 0
#define rxMailbox 1


void can_init(CanInit init, uint8_t rxInterrupt){
   80274:	b410      	push	{r4}
    // Disable CAN
    CAN0->CAN_MR &= ~CAN_MR_CANEN; 
   80276:	4b22      	ldr	r3, [pc, #136]	; (80300 <can_init+0x8c>)
   80278:	681a      	ldr	r2, [r3, #0]
   8027a:	f022 0201 	bic.w	r2, r2, #1
   8027e:	601a      	str	r2, [r3, #0]
    
    // Clear status register by reading it
    __attribute__((unused)) uint32_t ul_status = CAN0->CAN_SR;     
   80280:	691a      	ldr	r2, [r3, #16]
    
    // Disable interrupts on CANH and CANL pins
    PIOA->PIO_IDR = PIO_PA8A_URXD | PIO_PA9A_UTXD;
   80282:	4a20      	ldr	r2, [pc, #128]	; (80304 <can_init+0x90>)
   80284:	f44f 7440 	mov.w	r4, #768	; 0x300
   80288:	6454      	str	r4, [r2, #68]	; 0x44
    
    // Select CAN0 RX and TX in PIOA
    PIOA->PIO_ABSR &= ~(PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0);
   8028a:	6f14      	ldr	r4, [r2, #112]	; 0x70
   8028c:	f024 0403 	bic.w	r4, r4, #3
   80290:	6714      	str	r4, [r2, #112]	; 0x70
    
    // Disable the Parallel IO (PIO) of the Rx and Tx pins so that the peripheral controller can use them
    PIOA->PIO_PDR = PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0;
   80292:	2403      	movs	r4, #3
   80294:	6054      	str	r4, [r2, #4]
    
    // Enable pull up on CANH and CANL pin
    PIOA->PIO_PUER = (PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0);    
   80296:	6654      	str	r4, [r2, #100]	; 0x64
    
    // Enable Clock for CAN0 in PMC
    // DIV = 1 (can clk = MCK/2), CMD = 1 (write), PID = 2B (CAN0)
    PMC->PMC_PCR = PMC_PCR_EN | (0/*??*/ << PMC_PCR_DIV_Pos) | PMC_PCR_CMD | (ID_CAN0 << PMC_PCR_PID_Pos); 
   80298:	f5a2 6200 	sub.w	r2, r2, #2048	; 0x800
   8029c:	4c1a      	ldr	r4, [pc, #104]	; (80308 <can_init+0x94>)
   8029e:	f8c2 410c 	str.w	r4, [r2, #268]	; 0x10c
    PMC->PMC_PCER1 |= 1 << (ID_CAN0 - 32);
   802a2:	f8d2 4100 	ldr.w	r4, [r2, #256]	; 0x100
   802a6:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   802aa:	f8c2 4100 	str.w	r4, [r2, #256]	; 0x100
    
    //Set baudrate, Phase1, phase2 and propagation delay for can bus. Must match on all nodes!
    CAN0->CAN_BR = init.reg; 
   802ae:	6158      	str	r0, [r3, #20]
    


    // Configure mailboxes
    // transmit
    CAN0->CAN_MB[txMailbox].CAN_MID = CAN_MID_MIDE;
   802b0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   802b4:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
    CAN0->CAN_MB[txMailbox].CAN_MMR = CAN_MMR_MOT_MB_TX;
   802b8:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   802bc:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
    
    // receive
    CAN0->CAN_MB[rxMailbox].CAN_MAM = 0; // Accept all messages
   802c0:	2000      	movs	r0, #0
   802c2:	f8c3 0224 	str.w	r0, [r3, #548]	; 0x224
    CAN0->CAN_MB[rxMailbox].CAN_MID = CAN_MID_MIDE;
   802c6:	f8c3 2228 	str.w	r2, [r3, #552]	; 0x228
    CAN0->CAN_MB[rxMailbox].CAN_MMR = CAN_MMR_MOT_MB_RX;
   802ca:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   802ce:	f8c3 2220 	str.w	r2, [r3, #544]	; 0x220
    CAN0->CAN_MB[rxMailbox].CAN_MCR |= CAN_MCR_MTCR;
   802d2:	f8d3 223c 	ldr.w	r2, [r3, #572]	; 0x23c
   802d6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
   802da:	f8c3 223c 	str.w	r2, [r3, #572]	; 0x23c
    if(rxInterrupt){
   802de:	b141      	cbz	r1, 802f2 <can_init+0x7e>
        // Enable interrupt on receive
        CAN0->CAN_IER |= (1 << rxMailbox); 
   802e0:	461a      	mov	r2, r3
   802e2:	685b      	ldr	r3, [r3, #4]
   802e4:	f043 0302 	orr.w	r3, r3, #2
   802e8:	6053      	str	r3, [r2, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   802ea:	f44f 6200 	mov.w	r2, #2048	; 0x800
   802ee:	4b07      	ldr	r3, [pc, #28]	; (8030c <can_init+0x98>)
   802f0:	605a      	str	r2, [r3, #4]
        // Enable interrupt in NVIC 
        NVIC_EnableIRQ(ID_CAN0);
    }

    // Enable CAN
    CAN0->CAN_MR |= CAN_MR_CANEN;
   802f2:	4a03      	ldr	r2, [pc, #12]	; (80300 <can_init+0x8c>)
   802f4:	6813      	ldr	r3, [r2, #0]
   802f6:	f043 0301 	orr.w	r3, r3, #1
   802fa:	6013      	str	r3, [r2, #0]
}
   802fc:	bc10      	pop	{r4}
   802fe:	4770      	bx	lr
   80300:	400b4000 	.word	0x400b4000
   80304:	400e0e00 	.word	0x400e0e00
   80308:	1000102b 	.word	0x1000102b
   8030c:	e000e100 	.word	0xe000e100

00080310 <time_init>:
static uint64_t now = 0;

__attribute__((constructor)) void time_init(void){
	// Clock calibration is set to '(num cycles for 1ms) / 8'
	// (SysTick is by default set to use 8x clock divisor)
	calib = SysTick->CALIB * 8;
   80310:	4a09      	ldr	r2, [pc, #36]	; (80338 <time_init+0x28>)
   80312:	68d3      	ldr	r3, [r2, #12]
   80314:	00db      	lsls	r3, r3, #3
   80316:	2100      	movs	r1, #0
   80318:	4808      	ldr	r0, [pc, #32]	; (8033c <time_init+0x2c>)
   8031a:	6003      	str	r3, [r0, #0]
   8031c:	6041      	str	r1, [r0, #4]
	// Set reload at calib-1 ticks
	SysTick->LOAD = (calib & SysTick_LOAD_RELOAD_Msk)-1;
   8031e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   80322:	3b01      	subs	r3, #1
   80324:	6053      	str	r3, [r2, #4]
	// Reset counter
	SysTick->VAL = 0;
   80326:	6091      	str	r1, [r2, #8]
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   80328:	2120      	movs	r1, #32
   8032a:	4b05      	ldr	r3, [pc, #20]	; (80340 <time_init+0x30>)
   8032c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
	// Set interrupt priority
	NVIC_SetPriority(SysTick_IRQn, 2);
	SysTick->CTRL =
   80330:	2307      	movs	r3, #7
   80332:	6013      	str	r3, [r2, #0]
   80334:	4770      	bx	lr
   80336:	bf00      	nop
   80338:	e000e010 	.word	0xe000e010
   8033c:	20000cb8 	.word	0x20000cb8
   80340:	e000ed00 	.word	0xe000ed00

00080344 <SysTick_Handler>:
	((1 << SysTick_CTRL_TICKINT_Pos)   & SysTick_CTRL_TICKINT_Msk)      |   // Enable interrupt
	((1 << SysTick_CTRL_ENABLE_Pos)    & SysTick_CTRL_ENABLE_Msk);	        // Enable SysTick
}


void SysTick_Handler(void){
   80344:	b430      	push	{r4, r5}
	now += calib;
   80346:	4906      	ldr	r1, [pc, #24]	; (80360 <SysTick_Handler+0x1c>)
   80348:	e9d1 2300 	ldrd	r2, r3, [r1]
   8034c:	4805      	ldr	r0, [pc, #20]	; (80364 <SysTick_Handler+0x20>)
   8034e:	e9d0 4500 	ldrd	r4, r5, [r0]
   80352:	1912      	adds	r2, r2, r4
   80354:	416b      	adcs	r3, r5
   80356:	e9c1 2300 	strd	r2, r3, [r1]
}
   8035a:	bc30      	pop	{r4, r5}
   8035c:	4770      	bx	lr
   8035e:	bf00      	nop
   80360:	20000868 	.word	0x20000868
   80364:	20000cb8 	.word	0x20000cb8

00080368 <push>:
};
RingBuf ringBuf = {0};


int push(RingBuf* rb, uint8_t val){
	if(rb->length >= (sizeof(rb->buffer)/sizeof(rb->buffer[0]))){
   80368:	f8d0 240c 	ldr.w	r2, [r0, #1036]	; 0x40c
   8036c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
   80370:	d20c      	bcs.n	8038c <push+0x24>
		return 0;
	}
	rb->buffer[rb->insertIdx] = val;
   80372:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
   80376:	54c1      	strb	r1, [r0, r3]
	rb->insertIdx = (rb->insertIdx + 1) % (sizeof(rb->buffer)/sizeof(rb->buffer[0]));
   80378:	3301      	adds	r3, #1
   8037a:	f3c3 0309 	ubfx	r3, r3, #0, #10
   8037e:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
	rb->length++;
   80382:	3201      	adds	r2, #1
   80384:	f8c0 240c 	str.w	r2, [r0, #1036]	; 0x40c
	return 1;
   80388:	2001      	movs	r0, #1
   8038a:	4770      	bx	lr
		return 0;
   8038c:	2000      	movs	r0, #0
}
   8038e:	4770      	bx	lr

00080390 <pop>:

int pop(RingBuf* rb, uint8_t* val){
   80390:	4603      	mov	r3, r0
	if(!rb->length){
   80392:	f8d0 040c 	ldr.w	r0, [r0, #1036]	; 0x40c
   80396:	b180      	cbz	r0, 803ba <pop+0x2a>
		return 0;
	}
	*val = rb->buffer[rb->removeIdx];
   80398:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
   8039c:	5c9a      	ldrb	r2, [r3, r2]
   8039e:	700a      	strb	r2, [r1, #0]
	rb->removeIdx = (rb->removeIdx + 1) % (sizeof(rb->buffer)/sizeof(rb->buffer[0]));
   803a0:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
   803a4:	3201      	adds	r2, #1
   803a6:	f3c2 0209 	ubfx	r2, r2, #0, #10
   803aa:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
	rb->length--;
   803ae:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
   803b2:	3a01      	subs	r2, #1
   803b4:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
	return 1;
   803b8:	2001      	movs	r0, #1
}
   803ba:	4770      	bx	lr

000803bc <uart_init>:

void uart_init(uint32_t cpufreq, uint32_t baudrate){
	PMC->PMC_PCER0 |= (1 << ID_UART);
   803bc:	4a12      	ldr	r2, [pc, #72]	; (80408 <uart_init+0x4c>)
   803be:	6913      	ldr	r3, [r2, #16]
   803c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   803c4:	6113      	str	r3, [r2, #16]
	
	// Set UART pins (A8, A9) to use alternate function (this disables regular IO)
	PIOA->PIO_PDR   |=   PIO_PA8 | PIO_PA9;
   803c6:	4b11      	ldr	r3, [pc, #68]	; (8040c <uart_init+0x50>)
   803c8:	685a      	ldr	r2, [r3, #4]
   803ca:	f442 7240 	orr.w	r2, r2, #768	; 0x300
   803ce:	605a      	str	r2, [r3, #4]
	// Set alternate function A (see tables 9-2, 34-2)
	PIOA->PIO_ABSR  &= ~(PIO_PA8 | PIO_PA9);
   803d0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   803d2:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   803d6:	671a      	str	r2, [r3, #112]	; 0x70
	
	// Configure UART settings
	UART->UART_CR   |= UART_CR_TXEN | UART_CR_RXEN;
   803d8:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
   803dc:	681a      	ldr	r2, [r3, #0]
   803de:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   803e2:	601a      	str	r2, [r3, #0]
	UART->UART_MR   |= UART_MR_PAR_NO;
   803e4:	685a      	ldr	r2, [r3, #4]
   803e6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   803ea:	605a      	str	r2, [r3, #4]
	UART->UART_BRGR = cpufreq / 16 / baudrate;
   803ec:	0900      	lsrs	r0, r0, #4
   803ee:	fbb0 f1f1 	udiv	r1, r0, r1
   803f2:	6219      	str	r1, [r3, #32]
	
	
	// Configure interrupts on receive ready and errors
	UART->UART_IDR = 0xFFFFFFFF;
   803f4:	f04f 32ff 	mov.w	r2, #4294967295
   803f8:	60da      	str	r2, [r3, #12]
	UART->UART_IER = UART_IER_RXRDY | UART_IER_OVRE | UART_IER_FRAME | UART_IER_PARE;
   803fa:	22e1      	movs	r2, #225	; 0xe1
   803fc:	609a      	str	r2, [r3, #8]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   803fe:	f44f 7280 	mov.w	r2, #256	; 0x100
   80402:	4b03      	ldr	r3, [pc, #12]	; (80410 <uart_init+0x54>)
   80404:	601a      	str	r2, [r3, #0]
   80406:	4770      	bx	lr
   80408:	400e0600 	.word	0x400e0600
   8040c:	400e0e00 	.word	0x400e0e00
   80410:	e000e100 	.word	0xe000e100

00080414 <uart_tx>:
	NVIC_EnableIRQ((IRQn_Type) ID_UART);
	
}

void uart_tx(uint8_t val){
	while(!(UART->UART_SR & UART_SR_TXEMPTY)){}
   80414:	4b03      	ldr	r3, [pc, #12]	; (80424 <uart_tx+0x10>)
   80416:	695b      	ldr	r3, [r3, #20]
   80418:	f413 7f00 	tst.w	r3, #512	; 0x200
   8041c:	d0fa      	beq.n	80414 <uart_tx>
	UART->UART_THR = val;
   8041e:	4b01      	ldr	r3, [pc, #4]	; (80424 <uart_tx+0x10>)
   80420:	61d8      	str	r0, [r3, #28]
   80422:	4770      	bx	lr
   80424:	400e0800 	.word	0x400e0800

00080428 <uart_rx>:
}

uint8_t uart_rx(uint8_t* val){
   80428:	b508      	push	{r3, lr}
	return pop(&ringBuf, val);
   8042a:	4601      	mov	r1, r0
   8042c:	4802      	ldr	r0, [pc, #8]	; (80438 <uart_rx+0x10>)
   8042e:	4b03      	ldr	r3, [pc, #12]	; (8043c <uart_rx+0x14>)
   80430:	4798      	blx	r3
}
   80432:	b2c0      	uxtb	r0, r0
   80434:	bd08      	pop	{r3, pc}
   80436:	bf00      	nop
   80438:	20000870 	.word	0x20000870
   8043c:	00080391 	.word	0x00080391

00080440 <UART_Handler>:
	}
	return r;
}


void UART_Handler(){
   80440:	b508      	push	{r3, lr}
	
	uint32_t status = UART->UART_SR;
   80442:	4b0c      	ldr	r3, [pc, #48]	; (80474 <UART_Handler+0x34>)
   80444:	695b      	ldr	r3, [r3, #20]
	
	// Errors: Reset UART
	if(status & (UART_SR_OVRE | UART_SR_FRAME | UART_SR_PARE)){
   80446:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   8044a:	d003      	beq.n	80454 <UART_Handler+0x14>
		UART->UART_CR = UART_CR_RXEN | UART_CR_TXEN | UART_CR_RSTSTA;
   8044c:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80450:	4a08      	ldr	r2, [pc, #32]	; (80474 <UART_Handler+0x34>)
   80452:	6011      	str	r1, [r2, #0]
	}
	
	// Receive ready: push to ring buffer
	if(status & UART_SR_RXRDY){
   80454:	f013 0f01 	tst.w	r3, #1
   80458:	d100      	bne.n	8045c <UART_Handler+0x1c>
   8045a:	bd08      	pop	{r3, pc}
		if(!push(&ringBuf, UART->UART_RHR & 0xff)){
   8045c:	4b05      	ldr	r3, [pc, #20]	; (80474 <UART_Handler+0x34>)
   8045e:	6999      	ldr	r1, [r3, #24]
   80460:	b2c9      	uxtb	r1, r1
   80462:	4805      	ldr	r0, [pc, #20]	; (80478 <UART_Handler+0x38>)
   80464:	4b05      	ldr	r3, [pc, #20]	; (8047c <UART_Handler+0x3c>)
   80466:	4798      	blx	r3
   80468:	2800      	cmp	r0, #0
   8046a:	d1f6      	bne.n	8045a <UART_Handler+0x1a>
			printf("UART receive buffer full\n");
   8046c:	4804      	ldr	r0, [pc, #16]	; (80480 <UART_Handler+0x40>)
   8046e:	4b05      	ldr	r3, [pc, #20]	; (80484 <UART_Handler+0x44>)
   80470:	4798      	blx	r3
		}
	}
	
}
   80472:	e7f2      	b.n	8045a <UART_Handler+0x1a>
   80474:	400e0800 	.word	0x400e0800
   80478:	20000870 	.word	0x20000870
   8047c:	00080369 	.word	0x00080369
   80480:	0008293c 	.word	0x0008293c
   80484:	00081075 	.word	0x00081075

00080488 <_sbrk>:
// See https://interrupt.memfault.com/blog/boostrapping-libc-with-newlib

extern int _end;
#include <sys/stat.h>

void *_sbrk(int incr){
   80488:	4603      	mov	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if(heap == NULL){
   8048a:	4a08      	ldr	r2, [pc, #32]	; (804ac <_sbrk+0x24>)
   8048c:	f8d2 2410 	ldr.w	r2, [r2, #1040]	; 0x410
   80490:	b132      	cbz	r2, 804a0 <_sbrk+0x18>
		heap = (unsigned char*)&_end;
	}
	prev_heap = heap;
   80492:	4a06      	ldr	r2, [pc, #24]	; (804ac <_sbrk+0x24>)
   80494:	f8d2 0410 	ldr.w	r0, [r2, #1040]	; 0x410

	heap += incr;
   80498:	4403      	add	r3, r0
   8049a:	f8c2 3410 	str.w	r3, [r2, #1040]	; 0x410

	return prev_heap;
}
   8049e:	4770      	bx	lr
		heap = (unsigned char*)&_end;
   804a0:	4903      	ldr	r1, [pc, #12]	; (804b0 <_sbrk+0x28>)
   804a2:	4a02      	ldr	r2, [pc, #8]	; (804ac <_sbrk+0x24>)
   804a4:	f8c2 1410 	str.w	r1, [r2, #1040]	; 0x410
   804a8:	e7f3      	b.n	80492 <_sbrk+0xa>
   804aa:	bf00      	nop
   804ac:	20000870 	.word	0x20000870
   804b0:	200012e8 	.word	0x200012e8

000804b4 <_close>:

int _close(int file){
	return -1;
}
   804b4:	f04f 30ff 	mov.w	r0, #4294967295
   804b8:	4770      	bx	lr

000804ba <_fstat>:

int _fstat(int file, struct stat* st){
	st->st_mode = S_IFCHR;
   804ba:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   804be:	604b      	str	r3, [r1, #4]
	return 0;
}
   804c0:	2000      	movs	r0, #0
   804c2:	4770      	bx	lr

000804c4 <_isatty>:

int _isatty(int file){
	return 1;
}
   804c4:	2001      	movs	r0, #1
   804c6:	4770      	bx	lr

000804c8 <_lseek>:

int _lseek(int file, int ptr, int dir){
	return 0;
}
   804c8:	2000      	movs	r0, #0
   804ca:	4770      	bx	lr

000804cc <_write>:

int _getpid(void){
	return -1;
}

int _write(int file, char* ptr, int len){
   804cc:	b570      	push	{r4, r5, r6, lr}
	if(file > 1){
   804ce:	2801      	cmp	r0, #1
   804d0:	dc0b      	bgt.n	804ea <_write+0x1e>
   804d2:	460e      	mov	r6, r1
   804d4:	4615      	mov	r5, r2
   804d6:	2400      	movs	r4, #0
   804d8:	e003      	b.n	804e2 <_write+0x16>
		return -1;
	}

	for(int idx = 0; idx < len; idx++){
		uart_tx((uint8_t)ptr[idx]);
   804da:	5d30      	ldrb	r0, [r6, r4]
   804dc:	4b04      	ldr	r3, [pc, #16]	; (804f0 <_write+0x24>)
   804de:	4798      	blx	r3
	for(int idx = 0; idx < len; idx++){
   804e0:	3401      	adds	r4, #1
   804e2:	42ac      	cmp	r4, r5
   804e4:	dbf9      	blt.n	804da <_write+0xe>
	}
	return len;
}
   804e6:	4628      	mov	r0, r5
   804e8:	bd70      	pop	{r4, r5, r6, pc}
		return -1;
   804ea:	f04f 35ff 	mov.w	r5, #4294967295
   804ee:	e7fa      	b.n	804e6 <_write+0x1a>
   804f0:	00080415 	.word	0x00080415

000804f4 <_read>:

int _read(int file, char* ptr, int len){
   804f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if(file > 1){
   804f6:	2801      	cmp	r0, #1
   804f8:	dc0c      	bgt.n	80514 <_read+0x20>
   804fa:	4616      	mov	r6, r2
   804fc:	460f      	mov	r7, r1
   804fe:	2400      	movs	r4, #0
   80500:	4625      	mov	r5, r4
		return -1;
	}
	
	int nread = 0;
	for(int idx = 0; idx < len; idx++){
   80502:	42b4      	cmp	r4, r6
   80504:	da08      	bge.n	80518 <_read+0x24>
		int b = uart_rx((uint8_t*)&ptr[idx]);
   80506:	1938      	adds	r0, r7, r4
   80508:	4b04      	ldr	r3, [pc, #16]	; (8051c <_read+0x28>)
   8050a:	4798      	blx	r3
		nread += b;
   8050c:	4405      	add	r5, r0
		if(!b){
   8050e:	b118      	cbz	r0, 80518 <_read+0x24>
	for(int idx = 0; idx < len; idx++){
   80510:	3401      	adds	r4, #1
   80512:	e7f6      	b.n	80502 <_read+0xe>
		return -1;
   80514:	f04f 35ff 	mov.w	r5, #4294967295
			return nread;
		}
	}
	return nread;
}
   80518:	4628      	mov	r0, r5
   8051a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8051c:	00080429 	.word	0x00080429

00080520 <_delay_us>:

#ifndef DELAY_H_
#define DELAY_H_

void _delay_us(uint32_t us) //NB max value is 1597 000us
{
   80520:	b510      	push	{r4, lr}
	SysTick->LOAD = 10.5 * us; //MCK = 10.5MHz
   80522:	4b0b      	ldr	r3, [pc, #44]	; (80550 <_delay_us+0x30>)
   80524:	4798      	blx	r3
   80526:	2200      	movs	r2, #0
   80528:	4b0a      	ldr	r3, [pc, #40]	; (80554 <_delay_us+0x34>)
   8052a:	4c0b      	ldr	r4, [pc, #44]	; (80558 <_delay_us+0x38>)
   8052c:	47a0      	blx	r4
   8052e:	4b0b      	ldr	r3, [pc, #44]	; (8055c <_delay_us+0x3c>)
   80530:	4798      	blx	r3
   80532:	4b0b      	ldr	r3, [pc, #44]	; (80560 <_delay_us+0x40>)
   80534:	6058      	str	r0, [r3, #4]
	SysTick->CTRL = SysTick_CTRL_ENABLE_Msk; // Enable SysTick
   80536:	2201      	movs	r2, #1
   80538:	601a      	str	r2, [r3, #0]
	while(!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)); // Wait until Systick timer is finished
   8053a:	4b09      	ldr	r3, [pc, #36]	; (80560 <_delay_us+0x40>)
   8053c:	681b      	ldr	r3, [r3, #0]
   8053e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80542:	d0fa      	beq.n	8053a <_delay_us+0x1a>
	SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk; // Disable SysTick
   80544:	4a06      	ldr	r2, [pc, #24]	; (80560 <_delay_us+0x40>)
   80546:	6813      	ldr	r3, [r2, #0]
   80548:	f023 0301 	bic.w	r3, r3, #1
   8054c:	6013      	str	r3, [r2, #0]
   8054e:	bd10      	pop	{r4, pc}
   80550:	0008099d 	.word	0x0008099d
   80554:	40250000 	.word	0x40250000
   80558:	00080a89 	.word	0x00080a89
   8055c:	00080ead 	.word	0x00080ead
   80560:	e000e010 	.word	0xe000e010

00080564 <_delay_ms>:
}

/* Delays the system for a given number of milli seconds */
void _delay_ms(uint32_t ms)
{
   80564:	b538      	push	{r3, r4, r5, lr}
   80566:	4605      	mov	r5, r0
	for(uint32_t i = 0; i<ms; i++){
   80568:	2400      	movs	r4, #0
   8056a:	e004      	b.n	80576 <_delay_ms+0x12>
		_delay_us(1000);
   8056c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   80570:	4b02      	ldr	r3, [pc, #8]	; (8057c <_delay_ms+0x18>)
   80572:	4798      	blx	r3
	for(uint32_t i = 0; i<ms; i++){
   80574:	3401      	adds	r4, #1
   80576:	42ac      	cmp	r4, r5
   80578:	d3f8      	bcc.n	8056c <_delay_ms+0x8>
	}
}
   8057a:	bd38      	pop	{r3, r4, r5, pc}
   8057c:	00080521 	.word	0x00080521

00080580 <init_servo>:
#ifndef SERVO_H_
#define SERVO_H_

void init_servo(){
	// PIOB->PIO_PER |= PIO_PB13; // enable IO
	PIOB->PIO_OER |= PIO_PB13; // set as output
   80580:	4b23      	ldr	r3, [pc, #140]	; (80610 <init_servo+0x90>)
   80582:	691a      	ldr	r2, [r3, #16]
   80584:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   80588:	611a      	str	r2, [r3, #16]
	PIOB->PIO_PDR |= PIO_PB13;
   8058a:	685a      	ldr	r2, [r3, #4]
   8058c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   80590:	605a      	str	r2, [r3, #4]
	// Assign peripheral function B to pin PB13 with is PWM
	PIOB->PIO_ABSR |= PIO_ABSR_P13;
   80592:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80594:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   80598:	671a      	str	r2, [r3, #112]	; 0x70
	
	PMC->PMC_PCER1 |= (1 << 4);
   8059a:	491e      	ldr	r1, [pc, #120]	; (80614 <init_servo+0x94>)
   8059c:	f8d1 2100 	ldr.w	r2, [r1, #256]	; 0x100
   805a0:	f042 0210 	orr.w	r2, r2, #16
   805a4:	f8c1 2100 	str.w	r2, [r1, #256]	; 0x100
	
	
	//PMC->PMC_SCER = PMC_SCER_PCK0 | PMC_SCER_PCK1 | PMC_SCER_PCK2;
	PWM->PWM_WPCR &= ~PWM_WPSR_WPHWS2;
   805a8:	4a1b      	ldr	r2, [pc, #108]	; (80618 <init_servo+0x98>)
   805aa:	f8d2 10e4 	ldr.w	r1, [r2, #228]	; 0xe4
   805ae:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
   805b2:	f8c2 10e4 	str.w	r1, [r2, #228]	; 0xe4
	PWM->PWM_WPCR &= ~PWM_WPSR_WPSWS2;	
   805b6:	f8d2 10e4 	ldr.w	r1, [r2, #228]	; 0xe4
   805ba:	f021 0104 	bic.w	r1, r1, #4
   805be:	f8c2 10e4 	str.w	r1, [r2, #228]	; 0xe4
	PWM->PWM_CH_NUM[1].PWM_CMR = PWM_CMR_CPRE_MCK_DIV_1024 | PWM_CMR_CPOL | PWM_CMR_CALG;
   805c2:	f240 310a 	movw	r1, #778	; 0x30a
   805c6:	f8c2 1220 	str.w	r1, [r2, #544]	; 0x220
	float wanted_period = 0.02;
	int default_MCK = 84000000;
	int X = 1024;
	int CPRD = (wanted_period * default_MCK) / (2 * X);
	
	PWM->PWM_CH_NUM[1].PWM_CPRD = CPRD; // Side 1048 ;
   805ca:	f44f 714d 	mov.w	r1, #820	; 0x334
   805ce:	f8c2 122c 	str.w	r1, [r2, #556]	; 0x22c
	int min_duty = (0.9/20) * CPRD;
	int max_duty = (2.1/20) * CPRD;
	PWM->PWM_CH_NUM[1].PWM_CDTY = min_duty;
   805d2:	2124      	movs	r1, #36	; 0x24
   805d4:	f8c2 1224 	str.w	r1, [r2, #548]	; 0x224
	PWM->PWM_ENA |= PWM_ENA_CHID1;
   805d8:	6851      	ldr	r1, [r2, #4]
   805da:	f041 0102 	orr.w	r1, r1, #2
   805de:	6051      	str	r1, [r2, #4]
	
	// Set phase/dir pin high
	PIOB->PIO_PER |= PIO_PB12; // enable IO
   805e0:	681a      	ldr	r2, [r3, #0]
   805e2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   805e6:	601a      	str	r2, [r3, #0]
	PIOB->PIO_OER |= PIO_PB12; // set as output
   805e8:	691a      	ldr	r2, [r3, #16]
   805ea:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   805ee:	611a      	str	r2, [r3, #16]
	PIOB->PIO_PUDR |= PIO_PB12; // disable internal pull-up
   805f0:	6e1a      	ldr	r2, [r3, #96]	; 0x60
   805f2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   805f6:	661a      	str	r2, [r3, #96]	; 0x60
	PIOB->PIO_OWER |= PIO_PB12; // enable output write
   805f8:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
   805fc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   80600:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	PIOB->PIO_ODSR |= PIO_PB12; // make pin HIGH
   80604:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   80606:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   8060a:	639a      	str	r2, [r3, #56]	; 0x38
   8060c:	4770      	bx	lr
   8060e:	bf00      	nop
   80610:	400e1000 	.word	0x400e1000
   80614:	400e0600 	.word	0x400e0600
   80618:	40094000 	.word	0x40094000

0008061c <init_adc>:
#define ADC_H_

#include "sam.h"

int init_adc(){
	PMC->PMC_PCR |= (PMC_PCR_EN) | (0b100101);
   8061c:	4a0e      	ldr	r2, [pc, #56]	; (80658 <init_adc+0x3c>)
   8061e:	f8d2 310c 	ldr.w	r3, [r2, #268]	; 0x10c
   80622:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
   80626:	f043 0325 	orr.w	r3, r3, #37	; 0x25
   8062a:	f8c2 310c 	str.w	r3, [r2, #268]	; 0x10c
	PMC->PMC_PCER1 |=  PMC_PCER1_PID37;
   8062e:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80632:	f043 0320 	orr.w	r3, r3, #32
   80636:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
	
	ADC->ADC_MR |= ADC_MR_FREERUN_ON;
   8063a:	4b08      	ldr	r3, [pc, #32]	; (8065c <init_adc+0x40>)
   8063c:	685a      	ldr	r2, [r3, #4]
   8063e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   80642:	605a      	str	r2, [r3, #4]
	ADC->ADC_CHER |= ADC_CHER_CH0;
   80644:	691a      	ldr	r2, [r3, #16]
   80646:	f042 0201 	orr.w	r2, r2, #1
   8064a:	611a      	str	r2, [r3, #16]
	
	ADC->ADC_CR |= ADC_CR_START;
   8064c:	681a      	ldr	r2, [r3, #0]
   8064e:	f042 0202 	orr.w	r2, r2, #2
   80652:	601a      	str	r2, [r3, #0]

}
   80654:	4770      	bx	lr
   80656:	bf00      	nop
   80658:	400e0600 	.word	0x400e0600
   8065c:	400c0000 	.word	0x400c0000

00080660 <init_solenoid>:

#include "sam.h"

int init_solenoid() {
	// Set phase/dir pin high
	PIOB->PIO_PER |= PIO_PB25; // enable IO
   80660:	4b0b      	ldr	r3, [pc, #44]	; (80690 <init_solenoid+0x30>)
   80662:	681a      	ldr	r2, [r3, #0]
   80664:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   80668:	601a      	str	r2, [r3, #0]
	PIOB->PIO_OER |= PIO_PB25; // set as output
   8066a:	691a      	ldr	r2, [r3, #16]
   8066c:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   80670:	611a      	str	r2, [r3, #16]
	PIOB->PIO_PUDR |= PIO_PB25; // disable internal pull-up
   80672:	6e1a      	ldr	r2, [r3, #96]	; 0x60
   80674:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   80678:	661a      	str	r2, [r3, #96]	; 0x60
	PIOB->PIO_OWER |= PIO_PB25; // enable output write
   8067a:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
   8067e:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   80682:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	PIOB->PIO_ODSR |= PIO_PB25; // make pin HIGH
   80686:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   80688:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   8068c:	639a      	str	r2, [r3, #56]	; 0x38
}
   8068e:	4770      	bx	lr
   80690:	400e1000 	.word	0x400e1000

00080694 <test_pin>:

int test_pin(){
   80694:	b508      	push	{r3, lr}
	while (1)
	{
		PIOB->PIO_ODSR |= PIO_PB25; // make pin HIGH
   80696:	4c07      	ldr	r4, [pc, #28]	; (806b4 <test_pin+0x20>)
   80698:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   8069a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   8069e:	63a3      	str	r3, [r4, #56]	; 0x38
		_delay_ms(100);
   806a0:	2064      	movs	r0, #100	; 0x64
   806a2:	4d05      	ldr	r5, [pc, #20]	; (806b8 <test_pin+0x24>)
   806a4:	47a8      	blx	r5
		PIOB->PIO_ODSR &= ~PIO_PB25;
   806a6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   806a8:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
   806ac:	63a3      	str	r3, [r4, #56]	; 0x38
		_delay_ms(100);
   806ae:	2064      	movs	r0, #100	; 0x64
   806b0:	47a8      	blx	r5
   806b2:	e7f0      	b.n	80696 <test_pin+0x2>
   806b4:	400e1000 	.word	0x400e1000
   806b8:	00080565 	.word	0x00080565

000806bc <main>:
#include "include/header/check_score.h"
#include "include/header/solenoid.h"


int main(void)
{
   806bc:	b508      	push	{r3, lr}
	// test_can();

	SystemInit();
   806be:	4b0c      	ldr	r3, [pc, #48]	; (806f0 <main+0x34>)
   806c0:	4798      	blx	r3
	uart_init(84000000, 9600);
   806c2:	f44f 5116 	mov.w	r1, #9600	; 0x2580
   806c6:	480b      	ldr	r0, [pc, #44]	; (806f4 <main+0x38>)
   806c8:	4b0b      	ldr	r3, [pc, #44]	; (806f8 <main+0x3c>)
   806ca:	4798      	blx	r3
	WDT -> WDT_MR = WDT_MR_WDDIS;
   806cc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   806d0:	4b0a      	ldr	r3, [pc, #40]	; (806fc <main+0x40>)
   806d2:	605a      	str	r2, [r3, #4]
	can_init((CanInit){ .brp = 41, .phase1 = 6, .phase2 = 5, .propag = 1, .smp = 0, .sjw = 4 }, 0);
   806d4:	2100      	movs	r1, #0
   806d6:	4b0a      	ldr	r3, [pc, #40]	; (80700 <main+0x44>)
   806d8:	6818      	ldr	r0, [r3, #0]
   806da:	4b0a      	ldr	r3, [pc, #40]	; (80704 <main+0x48>)
   806dc:	4798      	blx	r3
	init_servo();
   806de:	4b0a      	ldr	r3, [pc, #40]	; (80708 <main+0x4c>)
   806e0:	4798      	blx	r3
	init_adc();
   806e2:	4b0a      	ldr	r3, [pc, #40]	; (8070c <main+0x50>)
   806e4:	4798      	blx	r3
	init_solenoid();
   806e6:	4b0a      	ldr	r3, [pc, #40]	; (80710 <main+0x54>)
   806e8:	4798      	blx	r3
	test_pin();
   806ea:	4b0a      	ldr	r3, [pc, #40]	; (80714 <main+0x58>)
   806ec:	4798      	blx	r3
   806ee:	bf00      	nop
   806f0:	000801d1 	.word	0x000801d1
   806f4:	0501bd00 	.word	0x0501bd00
   806f8:	000803bd 	.word	0x000803bd
   806fc:	400e1a50 	.word	0x400e1a50
   80700:	00082958 	.word	0x00082958
   80704:	00080275 	.word	0x00080275
   80708:	00080581 	.word	0x00080581
   8070c:	0008061d 	.word	0x0008061d
   80710:	00080661 	.word	0x00080661
   80714:	00080695 	.word	0x00080695

00080718 <__aeabi_drsub>:
   80718:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   8071c:	e002      	b.n	80724 <__adddf3>
   8071e:	bf00      	nop

00080720 <__aeabi_dsub>:
   80720:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080724 <__adddf3>:
   80724:	b530      	push	{r4, r5, lr}
   80726:	ea4f 0441 	mov.w	r4, r1, lsl #1
   8072a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   8072e:	ea94 0f05 	teq	r4, r5
   80732:	bf08      	it	eq
   80734:	ea90 0f02 	teqeq	r0, r2
   80738:	bf1f      	itttt	ne
   8073a:	ea54 0c00 	orrsne.w	ip, r4, r0
   8073e:	ea55 0c02 	orrsne.w	ip, r5, r2
   80742:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80746:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8074a:	f000 80e2 	beq.w	80912 <__adddf3+0x1ee>
   8074e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80752:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80756:	bfb8      	it	lt
   80758:	426d      	neglt	r5, r5
   8075a:	dd0c      	ble.n	80776 <__adddf3+0x52>
   8075c:	442c      	add	r4, r5
   8075e:	ea80 0202 	eor.w	r2, r0, r2
   80762:	ea81 0303 	eor.w	r3, r1, r3
   80766:	ea82 0000 	eor.w	r0, r2, r0
   8076a:	ea83 0101 	eor.w	r1, r3, r1
   8076e:	ea80 0202 	eor.w	r2, r0, r2
   80772:	ea81 0303 	eor.w	r3, r1, r3
   80776:	2d36      	cmp	r5, #54	; 0x36
   80778:	bf88      	it	hi
   8077a:	bd30      	pophi	{r4, r5, pc}
   8077c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80780:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80784:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80788:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   8078c:	d002      	beq.n	80794 <__adddf3+0x70>
   8078e:	4240      	negs	r0, r0
   80790:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80794:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80798:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8079c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   807a0:	d002      	beq.n	807a8 <__adddf3+0x84>
   807a2:	4252      	negs	r2, r2
   807a4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   807a8:	ea94 0f05 	teq	r4, r5
   807ac:	f000 80a7 	beq.w	808fe <__adddf3+0x1da>
   807b0:	f1a4 0401 	sub.w	r4, r4, #1
   807b4:	f1d5 0e20 	rsbs	lr, r5, #32
   807b8:	db0d      	blt.n	807d6 <__adddf3+0xb2>
   807ba:	fa02 fc0e 	lsl.w	ip, r2, lr
   807be:	fa22 f205 	lsr.w	r2, r2, r5
   807c2:	1880      	adds	r0, r0, r2
   807c4:	f141 0100 	adc.w	r1, r1, #0
   807c8:	fa03 f20e 	lsl.w	r2, r3, lr
   807cc:	1880      	adds	r0, r0, r2
   807ce:	fa43 f305 	asr.w	r3, r3, r5
   807d2:	4159      	adcs	r1, r3
   807d4:	e00e      	b.n	807f4 <__adddf3+0xd0>
   807d6:	f1a5 0520 	sub.w	r5, r5, #32
   807da:	f10e 0e20 	add.w	lr, lr, #32
   807de:	2a01      	cmp	r2, #1
   807e0:	fa03 fc0e 	lsl.w	ip, r3, lr
   807e4:	bf28      	it	cs
   807e6:	f04c 0c02 	orrcs.w	ip, ip, #2
   807ea:	fa43 f305 	asr.w	r3, r3, r5
   807ee:	18c0      	adds	r0, r0, r3
   807f0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   807f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   807f8:	d507      	bpl.n	8080a <__adddf3+0xe6>
   807fa:	f04f 0e00 	mov.w	lr, #0
   807fe:	f1dc 0c00 	rsbs	ip, ip, #0
   80802:	eb7e 0000 	sbcs.w	r0, lr, r0
   80806:	eb6e 0101 	sbc.w	r1, lr, r1
   8080a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   8080e:	d31b      	bcc.n	80848 <__adddf3+0x124>
   80810:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80814:	d30c      	bcc.n	80830 <__adddf3+0x10c>
   80816:	0849      	lsrs	r1, r1, #1
   80818:	ea5f 0030 	movs.w	r0, r0, rrx
   8081c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80820:	f104 0401 	add.w	r4, r4, #1
   80824:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80828:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   8082c:	f080 809a 	bcs.w	80964 <__adddf3+0x240>
   80830:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80834:	bf08      	it	eq
   80836:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8083a:	f150 0000 	adcs.w	r0, r0, #0
   8083e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80842:	ea41 0105 	orr.w	r1, r1, r5
   80846:	bd30      	pop	{r4, r5, pc}
   80848:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   8084c:	4140      	adcs	r0, r0
   8084e:	eb41 0101 	adc.w	r1, r1, r1
   80852:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80856:	f1a4 0401 	sub.w	r4, r4, #1
   8085a:	d1e9      	bne.n	80830 <__adddf3+0x10c>
   8085c:	f091 0f00 	teq	r1, #0
   80860:	bf04      	itt	eq
   80862:	4601      	moveq	r1, r0
   80864:	2000      	moveq	r0, #0
   80866:	fab1 f381 	clz	r3, r1
   8086a:	bf08      	it	eq
   8086c:	3320      	addeq	r3, #32
   8086e:	f1a3 030b 	sub.w	r3, r3, #11
   80872:	f1b3 0220 	subs.w	r2, r3, #32
   80876:	da0c      	bge.n	80892 <__adddf3+0x16e>
   80878:	320c      	adds	r2, #12
   8087a:	dd08      	ble.n	8088e <__adddf3+0x16a>
   8087c:	f102 0c14 	add.w	ip, r2, #20
   80880:	f1c2 020c 	rsb	r2, r2, #12
   80884:	fa01 f00c 	lsl.w	r0, r1, ip
   80888:	fa21 f102 	lsr.w	r1, r1, r2
   8088c:	e00c      	b.n	808a8 <__adddf3+0x184>
   8088e:	f102 0214 	add.w	r2, r2, #20
   80892:	bfd8      	it	le
   80894:	f1c2 0c20 	rsble	ip, r2, #32
   80898:	fa01 f102 	lsl.w	r1, r1, r2
   8089c:	fa20 fc0c 	lsr.w	ip, r0, ip
   808a0:	bfdc      	itt	le
   808a2:	ea41 010c 	orrle.w	r1, r1, ip
   808a6:	4090      	lslle	r0, r2
   808a8:	1ae4      	subs	r4, r4, r3
   808aa:	bfa2      	ittt	ge
   808ac:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   808b0:	4329      	orrge	r1, r5
   808b2:	bd30      	popge	{r4, r5, pc}
   808b4:	ea6f 0404 	mvn.w	r4, r4
   808b8:	3c1f      	subs	r4, #31
   808ba:	da1c      	bge.n	808f6 <__adddf3+0x1d2>
   808bc:	340c      	adds	r4, #12
   808be:	dc0e      	bgt.n	808de <__adddf3+0x1ba>
   808c0:	f104 0414 	add.w	r4, r4, #20
   808c4:	f1c4 0220 	rsb	r2, r4, #32
   808c8:	fa20 f004 	lsr.w	r0, r0, r4
   808cc:	fa01 f302 	lsl.w	r3, r1, r2
   808d0:	ea40 0003 	orr.w	r0, r0, r3
   808d4:	fa21 f304 	lsr.w	r3, r1, r4
   808d8:	ea45 0103 	orr.w	r1, r5, r3
   808dc:	bd30      	pop	{r4, r5, pc}
   808de:	f1c4 040c 	rsb	r4, r4, #12
   808e2:	f1c4 0220 	rsb	r2, r4, #32
   808e6:	fa20 f002 	lsr.w	r0, r0, r2
   808ea:	fa01 f304 	lsl.w	r3, r1, r4
   808ee:	ea40 0003 	orr.w	r0, r0, r3
   808f2:	4629      	mov	r1, r5
   808f4:	bd30      	pop	{r4, r5, pc}
   808f6:	fa21 f004 	lsr.w	r0, r1, r4
   808fa:	4629      	mov	r1, r5
   808fc:	bd30      	pop	{r4, r5, pc}
   808fe:	f094 0f00 	teq	r4, #0
   80902:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   80906:	bf06      	itte	eq
   80908:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   8090c:	3401      	addeq	r4, #1
   8090e:	3d01      	subne	r5, #1
   80910:	e74e      	b.n	807b0 <__adddf3+0x8c>
   80912:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80916:	bf18      	it	ne
   80918:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8091c:	d029      	beq.n	80972 <__adddf3+0x24e>
   8091e:	ea94 0f05 	teq	r4, r5
   80922:	bf08      	it	eq
   80924:	ea90 0f02 	teqeq	r0, r2
   80928:	d005      	beq.n	80936 <__adddf3+0x212>
   8092a:	ea54 0c00 	orrs.w	ip, r4, r0
   8092e:	bf04      	itt	eq
   80930:	4619      	moveq	r1, r3
   80932:	4610      	moveq	r0, r2
   80934:	bd30      	pop	{r4, r5, pc}
   80936:	ea91 0f03 	teq	r1, r3
   8093a:	bf1e      	ittt	ne
   8093c:	2100      	movne	r1, #0
   8093e:	2000      	movne	r0, #0
   80940:	bd30      	popne	{r4, r5, pc}
   80942:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   80946:	d105      	bne.n	80954 <__adddf3+0x230>
   80948:	0040      	lsls	r0, r0, #1
   8094a:	4149      	adcs	r1, r1
   8094c:	bf28      	it	cs
   8094e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   80952:	bd30      	pop	{r4, r5, pc}
   80954:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   80958:	bf3c      	itt	cc
   8095a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   8095e:	bd30      	popcc	{r4, r5, pc}
   80960:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80964:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   80968:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8096c:	f04f 0000 	mov.w	r0, #0
   80970:	bd30      	pop	{r4, r5, pc}
   80972:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80976:	bf1a      	itte	ne
   80978:	4619      	movne	r1, r3
   8097a:	4610      	movne	r0, r2
   8097c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   80980:	bf1c      	itt	ne
   80982:	460b      	movne	r3, r1
   80984:	4602      	movne	r2, r0
   80986:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8098a:	bf06      	itte	eq
   8098c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   80990:	ea91 0f03 	teqeq	r1, r3
   80994:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   80998:	bd30      	pop	{r4, r5, pc}
   8099a:	bf00      	nop

0008099c <__aeabi_ui2d>:
   8099c:	f090 0f00 	teq	r0, #0
   809a0:	bf04      	itt	eq
   809a2:	2100      	moveq	r1, #0
   809a4:	4770      	bxeq	lr
   809a6:	b530      	push	{r4, r5, lr}
   809a8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   809ac:	f104 0432 	add.w	r4, r4, #50	; 0x32
   809b0:	f04f 0500 	mov.w	r5, #0
   809b4:	f04f 0100 	mov.w	r1, #0
   809b8:	e750      	b.n	8085c <__adddf3+0x138>
   809ba:	bf00      	nop

000809bc <__aeabi_i2d>:
   809bc:	f090 0f00 	teq	r0, #0
   809c0:	bf04      	itt	eq
   809c2:	2100      	moveq	r1, #0
   809c4:	4770      	bxeq	lr
   809c6:	b530      	push	{r4, r5, lr}
   809c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   809cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   809d0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   809d4:	bf48      	it	mi
   809d6:	4240      	negmi	r0, r0
   809d8:	f04f 0100 	mov.w	r1, #0
   809dc:	e73e      	b.n	8085c <__adddf3+0x138>
   809de:	bf00      	nop

000809e0 <__aeabi_f2d>:
   809e0:	0042      	lsls	r2, r0, #1
   809e2:	ea4f 01e2 	mov.w	r1, r2, asr #3
   809e6:	ea4f 0131 	mov.w	r1, r1, rrx
   809ea:	ea4f 7002 	mov.w	r0, r2, lsl #28
   809ee:	bf1f      	itttt	ne
   809f0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   809f4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   809f8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   809fc:	4770      	bxne	lr
   809fe:	f092 0f00 	teq	r2, #0
   80a02:	bf14      	ite	ne
   80a04:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   80a08:	4770      	bxeq	lr
   80a0a:	b530      	push	{r4, r5, lr}
   80a0c:	f44f 7460 	mov.w	r4, #896	; 0x380
   80a10:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80a14:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   80a18:	e720      	b.n	8085c <__adddf3+0x138>
   80a1a:	bf00      	nop

00080a1c <__aeabi_ul2d>:
   80a1c:	ea50 0201 	orrs.w	r2, r0, r1
   80a20:	bf08      	it	eq
   80a22:	4770      	bxeq	lr
   80a24:	b530      	push	{r4, r5, lr}
   80a26:	f04f 0500 	mov.w	r5, #0
   80a2a:	e00a      	b.n	80a42 <__aeabi_l2d+0x16>

00080a2c <__aeabi_l2d>:
   80a2c:	ea50 0201 	orrs.w	r2, r0, r1
   80a30:	bf08      	it	eq
   80a32:	4770      	bxeq	lr
   80a34:	b530      	push	{r4, r5, lr}
   80a36:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   80a3a:	d502      	bpl.n	80a42 <__aeabi_l2d+0x16>
   80a3c:	4240      	negs	r0, r0
   80a3e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80a42:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80a46:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80a4a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   80a4e:	f43f aedc 	beq.w	8080a <__adddf3+0xe6>
   80a52:	f04f 0203 	mov.w	r2, #3
   80a56:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   80a5a:	bf18      	it	ne
   80a5c:	3203      	addne	r2, #3
   80a5e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   80a62:	bf18      	it	ne
   80a64:	3203      	addne	r2, #3
   80a66:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   80a6a:	f1c2 0320 	rsb	r3, r2, #32
   80a6e:	fa00 fc03 	lsl.w	ip, r0, r3
   80a72:	fa20 f002 	lsr.w	r0, r0, r2
   80a76:	fa01 fe03 	lsl.w	lr, r1, r3
   80a7a:	ea40 000e 	orr.w	r0, r0, lr
   80a7e:	fa21 f102 	lsr.w	r1, r1, r2
   80a82:	4414      	add	r4, r2
   80a84:	e6c1      	b.n	8080a <__adddf3+0xe6>
   80a86:	bf00      	nop

00080a88 <__aeabi_dmul>:
   80a88:	b570      	push	{r4, r5, r6, lr}
   80a8a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80a8e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   80a92:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   80a96:	bf1d      	ittte	ne
   80a98:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   80a9c:	ea94 0f0c 	teqne	r4, ip
   80aa0:	ea95 0f0c 	teqne	r5, ip
   80aa4:	f000 f8de 	bleq	80c64 <__aeabi_dmul+0x1dc>
   80aa8:	442c      	add	r4, r5
   80aaa:	ea81 0603 	eor.w	r6, r1, r3
   80aae:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   80ab2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   80ab6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   80aba:	bf18      	it	ne
   80abc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   80ac0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   80ac4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   80ac8:	d038      	beq.n	80b3c <__aeabi_dmul+0xb4>
   80aca:	fba0 ce02 	umull	ip, lr, r0, r2
   80ace:	f04f 0500 	mov.w	r5, #0
   80ad2:	fbe1 e502 	umlal	lr, r5, r1, r2
   80ad6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   80ada:	fbe0 e503 	umlal	lr, r5, r0, r3
   80ade:	f04f 0600 	mov.w	r6, #0
   80ae2:	fbe1 5603 	umlal	r5, r6, r1, r3
   80ae6:	f09c 0f00 	teq	ip, #0
   80aea:	bf18      	it	ne
   80aec:	f04e 0e01 	orrne.w	lr, lr, #1
   80af0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   80af4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   80af8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   80afc:	d204      	bcs.n	80b08 <__aeabi_dmul+0x80>
   80afe:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   80b02:	416d      	adcs	r5, r5
   80b04:	eb46 0606 	adc.w	r6, r6, r6
   80b08:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   80b0c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   80b10:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   80b14:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   80b18:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   80b1c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   80b20:	bf88      	it	hi
   80b22:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   80b26:	d81e      	bhi.n	80b66 <__aeabi_dmul+0xde>
   80b28:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   80b2c:	bf08      	it	eq
   80b2e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   80b32:	f150 0000 	adcs.w	r0, r0, #0
   80b36:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80b3a:	bd70      	pop	{r4, r5, r6, pc}
   80b3c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   80b40:	ea46 0101 	orr.w	r1, r6, r1
   80b44:	ea40 0002 	orr.w	r0, r0, r2
   80b48:	ea81 0103 	eor.w	r1, r1, r3
   80b4c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   80b50:	bfc2      	ittt	gt
   80b52:	ebd4 050c 	rsbsgt	r5, r4, ip
   80b56:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   80b5a:	bd70      	popgt	{r4, r5, r6, pc}
   80b5c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   80b60:	f04f 0e00 	mov.w	lr, #0
   80b64:	3c01      	subs	r4, #1
   80b66:	f300 80ab 	bgt.w	80cc0 <__aeabi_dmul+0x238>
   80b6a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   80b6e:	bfde      	ittt	le
   80b70:	2000      	movle	r0, #0
   80b72:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   80b76:	bd70      	pople	{r4, r5, r6, pc}
   80b78:	f1c4 0400 	rsb	r4, r4, #0
   80b7c:	3c20      	subs	r4, #32
   80b7e:	da35      	bge.n	80bec <__aeabi_dmul+0x164>
   80b80:	340c      	adds	r4, #12
   80b82:	dc1b      	bgt.n	80bbc <__aeabi_dmul+0x134>
   80b84:	f104 0414 	add.w	r4, r4, #20
   80b88:	f1c4 0520 	rsb	r5, r4, #32
   80b8c:	fa00 f305 	lsl.w	r3, r0, r5
   80b90:	fa20 f004 	lsr.w	r0, r0, r4
   80b94:	fa01 f205 	lsl.w	r2, r1, r5
   80b98:	ea40 0002 	orr.w	r0, r0, r2
   80b9c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   80ba0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   80ba4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   80ba8:	fa21 f604 	lsr.w	r6, r1, r4
   80bac:	eb42 0106 	adc.w	r1, r2, r6
   80bb0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80bb4:	bf08      	it	eq
   80bb6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80bba:	bd70      	pop	{r4, r5, r6, pc}
   80bbc:	f1c4 040c 	rsb	r4, r4, #12
   80bc0:	f1c4 0520 	rsb	r5, r4, #32
   80bc4:	fa00 f304 	lsl.w	r3, r0, r4
   80bc8:	fa20 f005 	lsr.w	r0, r0, r5
   80bcc:	fa01 f204 	lsl.w	r2, r1, r4
   80bd0:	ea40 0002 	orr.w	r0, r0, r2
   80bd4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80bd8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   80bdc:	f141 0100 	adc.w	r1, r1, #0
   80be0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80be4:	bf08      	it	eq
   80be6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80bea:	bd70      	pop	{r4, r5, r6, pc}
   80bec:	f1c4 0520 	rsb	r5, r4, #32
   80bf0:	fa00 f205 	lsl.w	r2, r0, r5
   80bf4:	ea4e 0e02 	orr.w	lr, lr, r2
   80bf8:	fa20 f304 	lsr.w	r3, r0, r4
   80bfc:	fa01 f205 	lsl.w	r2, r1, r5
   80c00:	ea43 0302 	orr.w	r3, r3, r2
   80c04:	fa21 f004 	lsr.w	r0, r1, r4
   80c08:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80c0c:	fa21 f204 	lsr.w	r2, r1, r4
   80c10:	ea20 0002 	bic.w	r0, r0, r2
   80c14:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   80c18:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80c1c:	bf08      	it	eq
   80c1e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80c22:	bd70      	pop	{r4, r5, r6, pc}
   80c24:	f094 0f00 	teq	r4, #0
   80c28:	d10f      	bne.n	80c4a <__aeabi_dmul+0x1c2>
   80c2a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   80c2e:	0040      	lsls	r0, r0, #1
   80c30:	eb41 0101 	adc.w	r1, r1, r1
   80c34:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80c38:	bf08      	it	eq
   80c3a:	3c01      	subeq	r4, #1
   80c3c:	d0f7      	beq.n	80c2e <__aeabi_dmul+0x1a6>
   80c3e:	ea41 0106 	orr.w	r1, r1, r6
   80c42:	f095 0f00 	teq	r5, #0
   80c46:	bf18      	it	ne
   80c48:	4770      	bxne	lr
   80c4a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   80c4e:	0052      	lsls	r2, r2, #1
   80c50:	eb43 0303 	adc.w	r3, r3, r3
   80c54:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   80c58:	bf08      	it	eq
   80c5a:	3d01      	subeq	r5, #1
   80c5c:	d0f7      	beq.n	80c4e <__aeabi_dmul+0x1c6>
   80c5e:	ea43 0306 	orr.w	r3, r3, r6
   80c62:	4770      	bx	lr
   80c64:	ea94 0f0c 	teq	r4, ip
   80c68:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   80c6c:	bf18      	it	ne
   80c6e:	ea95 0f0c 	teqne	r5, ip
   80c72:	d00c      	beq.n	80c8e <__aeabi_dmul+0x206>
   80c74:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   80c78:	bf18      	it	ne
   80c7a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   80c7e:	d1d1      	bne.n	80c24 <__aeabi_dmul+0x19c>
   80c80:	ea81 0103 	eor.w	r1, r1, r3
   80c84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80c88:	f04f 0000 	mov.w	r0, #0
   80c8c:	bd70      	pop	{r4, r5, r6, pc}
   80c8e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   80c92:	bf06      	itte	eq
   80c94:	4610      	moveq	r0, r2
   80c96:	4619      	moveq	r1, r3
   80c98:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   80c9c:	d019      	beq.n	80cd2 <__aeabi_dmul+0x24a>
   80c9e:	ea94 0f0c 	teq	r4, ip
   80ca2:	d102      	bne.n	80caa <__aeabi_dmul+0x222>
   80ca4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   80ca8:	d113      	bne.n	80cd2 <__aeabi_dmul+0x24a>
   80caa:	ea95 0f0c 	teq	r5, ip
   80cae:	d105      	bne.n	80cbc <__aeabi_dmul+0x234>
   80cb0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   80cb4:	bf1c      	itt	ne
   80cb6:	4610      	movne	r0, r2
   80cb8:	4619      	movne	r1, r3
   80cba:	d10a      	bne.n	80cd2 <__aeabi_dmul+0x24a>
   80cbc:	ea81 0103 	eor.w	r1, r1, r3
   80cc0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80cc4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   80cc8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   80ccc:	f04f 0000 	mov.w	r0, #0
   80cd0:	bd70      	pop	{r4, r5, r6, pc}
   80cd2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   80cd6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   80cda:	bd70      	pop	{r4, r5, r6, pc}

00080cdc <__aeabi_ddiv>:
   80cdc:	b570      	push	{r4, r5, r6, lr}
   80cde:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80ce2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   80ce6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   80cea:	bf1d      	ittte	ne
   80cec:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   80cf0:	ea94 0f0c 	teqne	r4, ip
   80cf4:	ea95 0f0c 	teqne	r5, ip
   80cf8:	f000 f8a7 	bleq	80e4a <__aeabi_ddiv+0x16e>
   80cfc:	eba4 0405 	sub.w	r4, r4, r5
   80d00:	ea81 0e03 	eor.w	lr, r1, r3
   80d04:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   80d08:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80d0c:	f000 8088 	beq.w	80e20 <__aeabi_ddiv+0x144>
   80d10:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80d14:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   80d18:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   80d1c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   80d20:	ea4f 2202 	mov.w	r2, r2, lsl #8
   80d24:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   80d28:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   80d2c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   80d30:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   80d34:	429d      	cmp	r5, r3
   80d36:	bf08      	it	eq
   80d38:	4296      	cmpeq	r6, r2
   80d3a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   80d3e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   80d42:	d202      	bcs.n	80d4a <__aeabi_ddiv+0x6e>
   80d44:	085b      	lsrs	r3, r3, #1
   80d46:	ea4f 0232 	mov.w	r2, r2, rrx
   80d4a:	1ab6      	subs	r6, r6, r2
   80d4c:	eb65 0503 	sbc.w	r5, r5, r3
   80d50:	085b      	lsrs	r3, r3, #1
   80d52:	ea4f 0232 	mov.w	r2, r2, rrx
   80d56:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   80d5a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   80d5e:	ebb6 0e02 	subs.w	lr, r6, r2
   80d62:	eb75 0e03 	sbcs.w	lr, r5, r3
   80d66:	bf22      	ittt	cs
   80d68:	1ab6      	subcs	r6, r6, r2
   80d6a:	4675      	movcs	r5, lr
   80d6c:	ea40 000c 	orrcs.w	r0, r0, ip
   80d70:	085b      	lsrs	r3, r3, #1
   80d72:	ea4f 0232 	mov.w	r2, r2, rrx
   80d76:	ebb6 0e02 	subs.w	lr, r6, r2
   80d7a:	eb75 0e03 	sbcs.w	lr, r5, r3
   80d7e:	bf22      	ittt	cs
   80d80:	1ab6      	subcs	r6, r6, r2
   80d82:	4675      	movcs	r5, lr
   80d84:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   80d88:	085b      	lsrs	r3, r3, #1
   80d8a:	ea4f 0232 	mov.w	r2, r2, rrx
   80d8e:	ebb6 0e02 	subs.w	lr, r6, r2
   80d92:	eb75 0e03 	sbcs.w	lr, r5, r3
   80d96:	bf22      	ittt	cs
   80d98:	1ab6      	subcs	r6, r6, r2
   80d9a:	4675      	movcs	r5, lr
   80d9c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   80da0:	085b      	lsrs	r3, r3, #1
   80da2:	ea4f 0232 	mov.w	r2, r2, rrx
   80da6:	ebb6 0e02 	subs.w	lr, r6, r2
   80daa:	eb75 0e03 	sbcs.w	lr, r5, r3
   80dae:	bf22      	ittt	cs
   80db0:	1ab6      	subcs	r6, r6, r2
   80db2:	4675      	movcs	r5, lr
   80db4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   80db8:	ea55 0e06 	orrs.w	lr, r5, r6
   80dbc:	d018      	beq.n	80df0 <__aeabi_ddiv+0x114>
   80dbe:	ea4f 1505 	mov.w	r5, r5, lsl #4
   80dc2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   80dc6:	ea4f 1606 	mov.w	r6, r6, lsl #4
   80dca:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   80dce:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   80dd2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   80dd6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   80dda:	d1c0      	bne.n	80d5e <__aeabi_ddiv+0x82>
   80ddc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80de0:	d10b      	bne.n	80dfa <__aeabi_ddiv+0x11e>
   80de2:	ea41 0100 	orr.w	r1, r1, r0
   80de6:	f04f 0000 	mov.w	r0, #0
   80dea:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   80dee:	e7b6      	b.n	80d5e <__aeabi_ddiv+0x82>
   80df0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80df4:	bf04      	itt	eq
   80df6:	4301      	orreq	r1, r0
   80df8:	2000      	moveq	r0, #0
   80dfa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   80dfe:	bf88      	it	hi
   80e00:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   80e04:	f63f aeaf 	bhi.w	80b66 <__aeabi_dmul+0xde>
   80e08:	ebb5 0c03 	subs.w	ip, r5, r3
   80e0c:	bf04      	itt	eq
   80e0e:	ebb6 0c02 	subseq.w	ip, r6, r2
   80e12:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80e16:	f150 0000 	adcs.w	r0, r0, #0
   80e1a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80e1e:	bd70      	pop	{r4, r5, r6, pc}
   80e20:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   80e24:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   80e28:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   80e2c:	bfc2      	ittt	gt
   80e2e:	ebd4 050c 	rsbsgt	r5, r4, ip
   80e32:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   80e36:	bd70      	popgt	{r4, r5, r6, pc}
   80e38:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   80e3c:	f04f 0e00 	mov.w	lr, #0
   80e40:	3c01      	subs	r4, #1
   80e42:	e690      	b.n	80b66 <__aeabi_dmul+0xde>
   80e44:	ea45 0e06 	orr.w	lr, r5, r6
   80e48:	e68d      	b.n	80b66 <__aeabi_dmul+0xde>
   80e4a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   80e4e:	ea94 0f0c 	teq	r4, ip
   80e52:	bf08      	it	eq
   80e54:	ea95 0f0c 	teqeq	r5, ip
   80e58:	f43f af3b 	beq.w	80cd2 <__aeabi_dmul+0x24a>
   80e5c:	ea94 0f0c 	teq	r4, ip
   80e60:	d10a      	bne.n	80e78 <__aeabi_ddiv+0x19c>
   80e62:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   80e66:	f47f af34 	bne.w	80cd2 <__aeabi_dmul+0x24a>
   80e6a:	ea95 0f0c 	teq	r5, ip
   80e6e:	f47f af25 	bne.w	80cbc <__aeabi_dmul+0x234>
   80e72:	4610      	mov	r0, r2
   80e74:	4619      	mov	r1, r3
   80e76:	e72c      	b.n	80cd2 <__aeabi_dmul+0x24a>
   80e78:	ea95 0f0c 	teq	r5, ip
   80e7c:	d106      	bne.n	80e8c <__aeabi_ddiv+0x1b0>
   80e7e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   80e82:	f43f aefd 	beq.w	80c80 <__aeabi_dmul+0x1f8>
   80e86:	4610      	mov	r0, r2
   80e88:	4619      	mov	r1, r3
   80e8a:	e722      	b.n	80cd2 <__aeabi_dmul+0x24a>
   80e8c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   80e90:	bf18      	it	ne
   80e92:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   80e96:	f47f aec5 	bne.w	80c24 <__aeabi_dmul+0x19c>
   80e9a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   80e9e:	f47f af0d 	bne.w	80cbc <__aeabi_dmul+0x234>
   80ea2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   80ea6:	f47f aeeb 	bne.w	80c80 <__aeabi_dmul+0x1f8>
   80eaa:	e712      	b.n	80cd2 <__aeabi_dmul+0x24a>

00080eac <__aeabi_d2uiz>:
   80eac:	004a      	lsls	r2, r1, #1
   80eae:	d211      	bcs.n	80ed4 <__aeabi_d2uiz+0x28>
   80eb0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   80eb4:	d211      	bcs.n	80eda <__aeabi_d2uiz+0x2e>
   80eb6:	d50d      	bpl.n	80ed4 <__aeabi_d2uiz+0x28>
   80eb8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   80ebc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   80ec0:	d40e      	bmi.n	80ee0 <__aeabi_d2uiz+0x34>
   80ec2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   80ec6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   80eca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   80ece:	fa23 f002 	lsr.w	r0, r3, r2
   80ed2:	4770      	bx	lr
   80ed4:	f04f 0000 	mov.w	r0, #0
   80ed8:	4770      	bx	lr
   80eda:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   80ede:	d102      	bne.n	80ee6 <__aeabi_d2uiz+0x3a>
   80ee0:	f04f 30ff 	mov.w	r0, #4294967295
   80ee4:	4770      	bx	lr
   80ee6:	f04f 0000 	mov.w	r0, #0
   80eea:	4770      	bx	lr

00080eec <__libc_init_array>:
   80eec:	b570      	push	{r4, r5, r6, lr}
   80eee:	4e0f      	ldr	r6, [pc, #60]	; (80f2c <__libc_init_array+0x40>)
   80ef0:	4d0f      	ldr	r5, [pc, #60]	; (80f30 <__libc_init_array+0x44>)
   80ef2:	1b76      	subs	r6, r6, r5
   80ef4:	10b6      	asrs	r6, r6, #2
   80ef6:	bf18      	it	ne
   80ef8:	2400      	movne	r4, #0
   80efa:	d005      	beq.n	80f08 <__libc_init_array+0x1c>
   80efc:	3401      	adds	r4, #1
   80efe:	f855 3b04 	ldr.w	r3, [r5], #4
   80f02:	4798      	blx	r3
   80f04:	42a6      	cmp	r6, r4
   80f06:	d1f9      	bne.n	80efc <__libc_init_array+0x10>
   80f08:	4e0a      	ldr	r6, [pc, #40]	; (80f34 <__libc_init_array+0x48>)
   80f0a:	4d0b      	ldr	r5, [pc, #44]	; (80f38 <__libc_init_array+0x4c>)
   80f0c:	f001 fd2a 	bl	82964 <_init>
   80f10:	1b76      	subs	r6, r6, r5
   80f12:	10b6      	asrs	r6, r6, #2
   80f14:	bf18      	it	ne
   80f16:	2400      	movne	r4, #0
   80f18:	d006      	beq.n	80f28 <__libc_init_array+0x3c>
   80f1a:	3401      	adds	r4, #1
   80f1c:	f855 3b04 	ldr.w	r3, [r5], #4
   80f20:	4798      	blx	r3
   80f22:	42a6      	cmp	r6, r4
   80f24:	d1f9      	bne.n	80f1a <__libc_init_array+0x2e>
   80f26:	bd70      	pop	{r4, r5, r6, pc}
   80f28:	bd70      	pop	{r4, r5, r6, pc}
   80f2a:	bf00      	nop
   80f2c:	00082970 	.word	0x00082970
   80f30:	00082970 	.word	0x00082970
   80f34:	0008297c 	.word	0x0008297c
   80f38:	00082970 	.word	0x00082970

00080f3c <memset>:
   80f3c:	b470      	push	{r4, r5, r6}
   80f3e:	0786      	lsls	r6, r0, #30
   80f40:	d046      	beq.n	80fd0 <memset+0x94>
   80f42:	1e54      	subs	r4, r2, #1
   80f44:	2a00      	cmp	r2, #0
   80f46:	d041      	beq.n	80fcc <memset+0x90>
   80f48:	b2ca      	uxtb	r2, r1
   80f4a:	4603      	mov	r3, r0
   80f4c:	e002      	b.n	80f54 <memset+0x18>
   80f4e:	f114 34ff 	adds.w	r4, r4, #4294967295
   80f52:	d33b      	bcc.n	80fcc <memset+0x90>
   80f54:	f803 2b01 	strb.w	r2, [r3], #1
   80f58:	079d      	lsls	r5, r3, #30
   80f5a:	d1f8      	bne.n	80f4e <memset+0x12>
   80f5c:	2c03      	cmp	r4, #3
   80f5e:	d92e      	bls.n	80fbe <memset+0x82>
   80f60:	b2cd      	uxtb	r5, r1
   80f62:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   80f66:	2c0f      	cmp	r4, #15
   80f68:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   80f6c:	d919      	bls.n	80fa2 <memset+0x66>
   80f6e:	4626      	mov	r6, r4
   80f70:	f103 0210 	add.w	r2, r3, #16
   80f74:	3e10      	subs	r6, #16
   80f76:	2e0f      	cmp	r6, #15
   80f78:	f842 5c10 	str.w	r5, [r2, #-16]
   80f7c:	f842 5c0c 	str.w	r5, [r2, #-12]
   80f80:	f842 5c08 	str.w	r5, [r2, #-8]
   80f84:	f842 5c04 	str.w	r5, [r2, #-4]
   80f88:	f102 0210 	add.w	r2, r2, #16
   80f8c:	d8f2      	bhi.n	80f74 <memset+0x38>
   80f8e:	f1a4 0210 	sub.w	r2, r4, #16
   80f92:	f022 020f 	bic.w	r2, r2, #15
   80f96:	f004 040f 	and.w	r4, r4, #15
   80f9a:	3210      	adds	r2, #16
   80f9c:	2c03      	cmp	r4, #3
   80f9e:	4413      	add	r3, r2
   80fa0:	d90d      	bls.n	80fbe <memset+0x82>
   80fa2:	461e      	mov	r6, r3
   80fa4:	4622      	mov	r2, r4
   80fa6:	3a04      	subs	r2, #4
   80fa8:	2a03      	cmp	r2, #3
   80faa:	f846 5b04 	str.w	r5, [r6], #4
   80fae:	d8fa      	bhi.n	80fa6 <memset+0x6a>
   80fb0:	1f22      	subs	r2, r4, #4
   80fb2:	f022 0203 	bic.w	r2, r2, #3
   80fb6:	3204      	adds	r2, #4
   80fb8:	4413      	add	r3, r2
   80fba:	f004 0403 	and.w	r4, r4, #3
   80fbe:	b12c      	cbz	r4, 80fcc <memset+0x90>
   80fc0:	b2c9      	uxtb	r1, r1
   80fc2:	441c      	add	r4, r3
   80fc4:	f803 1b01 	strb.w	r1, [r3], #1
   80fc8:	429c      	cmp	r4, r3
   80fca:	d1fb      	bne.n	80fc4 <memset+0x88>
   80fcc:	bc70      	pop	{r4, r5, r6}
   80fce:	4770      	bx	lr
   80fd0:	4614      	mov	r4, r2
   80fd2:	4603      	mov	r3, r0
   80fd4:	e7c2      	b.n	80f5c <memset+0x20>
   80fd6:	bf00      	nop

00080fd8 <_puts_r>:
   80fd8:	b5f0      	push	{r4, r5, r6, r7, lr}
   80fda:	4605      	mov	r5, r0
   80fdc:	b089      	sub	sp, #36	; 0x24
   80fde:	4608      	mov	r0, r1
   80fe0:	460c      	mov	r4, r1
   80fe2:	2701      	movs	r7, #1
   80fe4:	f000 f84e 	bl	81084 <strlen>
   80fe8:	2602      	movs	r6, #2
   80fea:	19c3      	adds	r3, r0, r7
   80fec:	4920      	ldr	r1, [pc, #128]	; (81070 <_puts_r+0x98>)
   80fee:	9303      	str	r3, [sp, #12]
   80ff0:	6bab      	ldr	r3, [r5, #56]	; 0x38
   80ff2:	aa04      	add	r2, sp, #16
   80ff4:	9404      	str	r4, [sp, #16]
   80ff6:	9005      	str	r0, [sp, #20]
   80ff8:	68ac      	ldr	r4, [r5, #8]
   80ffa:	9707      	str	r7, [sp, #28]
   80ffc:	9602      	str	r6, [sp, #8]
   80ffe:	9106      	str	r1, [sp, #24]
   81000:	9201      	str	r2, [sp, #4]
   81002:	b353      	cbz	r3, 8105a <_puts_r+0x82>
   81004:	6e63      	ldr	r3, [r4, #100]	; 0x64
   81006:	f013 0f01 	tst.w	r3, #1
   8100a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8100e:	b29a      	uxth	r2, r3
   81010:	d101      	bne.n	81016 <_puts_r+0x3e>
   81012:	0590      	lsls	r0, r2, #22
   81014:	d525      	bpl.n	81062 <_puts_r+0x8a>
   81016:	0491      	lsls	r1, r2, #18
   81018:	d406      	bmi.n	81028 <_puts_r+0x50>
   8101a:	6e62      	ldr	r2, [r4, #100]	; 0x64
   8101c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   81020:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   81024:	81a3      	strh	r3, [r4, #12]
   81026:	6662      	str	r2, [r4, #100]	; 0x64
   81028:	4628      	mov	r0, r5
   8102a:	aa01      	add	r2, sp, #4
   8102c:	4621      	mov	r1, r4
   8102e:	f000 fb4b 	bl	816c8 <__sfvwrite_r>
   81032:	6e63      	ldr	r3, [r4, #100]	; 0x64
   81034:	2800      	cmp	r0, #0
   81036:	bf0c      	ite	eq
   81038:	250a      	moveq	r5, #10
   8103a:	f04f 35ff 	movne.w	r5, #4294967295
   8103e:	07da      	lsls	r2, r3, #31
   81040:	d402      	bmi.n	81048 <_puts_r+0x70>
   81042:	89a3      	ldrh	r3, [r4, #12]
   81044:	059b      	lsls	r3, r3, #22
   81046:	d502      	bpl.n	8104e <_puts_r+0x76>
   81048:	4628      	mov	r0, r5
   8104a:	b009      	add	sp, #36	; 0x24
   8104c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8104e:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81050:	f000 fce2 	bl	81a18 <__retarget_lock_release_recursive>
   81054:	4628      	mov	r0, r5
   81056:	b009      	add	sp, #36	; 0x24
   81058:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8105a:	4628      	mov	r0, r5
   8105c:	f000 f9a8 	bl	813b0 <__sinit>
   81060:	e7d0      	b.n	81004 <_puts_r+0x2c>
   81062:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81064:	f000 fcd6 	bl	81a14 <__retarget_lock_acquire_recursive>
   81068:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8106c:	b29a      	uxth	r2, r3
   8106e:	e7d2      	b.n	81016 <_puts_r+0x3e>
   81070:	00082960 	.word	0x00082960

00081074 <puts>:
   81074:	4b02      	ldr	r3, [pc, #8]	; (81080 <puts+0xc>)
   81076:	4601      	mov	r1, r0
   81078:	6818      	ldr	r0, [r3, #0]
   8107a:	f7ff bfad 	b.w	80fd8 <_puts_r>
   8107e:	bf00      	nop
   81080:	20000004 	.word	0x20000004

00081084 <strlen>:
   81084:	f020 0103 	bic.w	r1, r0, #3
   81088:	f010 0003 	ands.w	r0, r0, #3
   8108c:	f1c0 0000 	rsb	r0, r0, #0
   81090:	f851 3b04 	ldr.w	r3, [r1], #4
   81094:	f100 0c04 	add.w	ip, r0, #4
   81098:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   8109c:	f06f 0200 	mvn.w	r2, #0
   810a0:	bf1c      	itt	ne
   810a2:	fa22 f20c 	lsrne.w	r2, r2, ip
   810a6:	4313      	orrne	r3, r2
   810a8:	f04f 0c01 	mov.w	ip, #1
   810ac:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   810b0:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   810b4:	eba3 020c 	sub.w	r2, r3, ip
   810b8:	ea22 0203 	bic.w	r2, r2, r3
   810bc:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   810c0:	bf04      	itt	eq
   810c2:	f851 3b04 	ldreq.w	r3, [r1], #4
   810c6:	3004      	addeq	r0, #4
   810c8:	d0f4      	beq.n	810b4 <strlen+0x30>
   810ca:	f1c2 0100 	rsb	r1, r2, #0
   810ce:	ea02 0201 	and.w	r2, r2, r1
   810d2:	fab2 f282 	clz	r2, r2
   810d6:	f1c2 021f 	rsb	r2, r2, #31
   810da:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   810de:	4770      	bx	lr

000810e0 <__swsetup_r>:
   810e0:	b538      	push	{r3, r4, r5, lr}
   810e2:	4b30      	ldr	r3, [pc, #192]	; (811a4 <__swsetup_r+0xc4>)
   810e4:	4605      	mov	r5, r0
   810e6:	6818      	ldr	r0, [r3, #0]
   810e8:	460c      	mov	r4, r1
   810ea:	b110      	cbz	r0, 810f2 <__swsetup_r+0x12>
   810ec:	6b83      	ldr	r3, [r0, #56]	; 0x38
   810ee:	2b00      	cmp	r3, #0
   810f0:	d038      	beq.n	81164 <__swsetup_r+0x84>
   810f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   810f6:	b293      	uxth	r3, r2
   810f8:	0718      	lsls	r0, r3, #28
   810fa:	d50c      	bpl.n	81116 <__swsetup_r+0x36>
   810fc:	6920      	ldr	r0, [r4, #16]
   810fe:	b1a8      	cbz	r0, 8112c <__swsetup_r+0x4c>
   81100:	f013 0201 	ands.w	r2, r3, #1
   81104:	d01e      	beq.n	81144 <__swsetup_r+0x64>
   81106:	2200      	movs	r2, #0
   81108:	6963      	ldr	r3, [r4, #20]
   8110a:	60a2      	str	r2, [r4, #8]
   8110c:	425b      	negs	r3, r3
   8110e:	61a3      	str	r3, [r4, #24]
   81110:	b1f0      	cbz	r0, 81150 <__swsetup_r+0x70>
   81112:	2000      	movs	r0, #0
   81114:	bd38      	pop	{r3, r4, r5, pc}
   81116:	06d9      	lsls	r1, r3, #27
   81118:	d53b      	bpl.n	81192 <__swsetup_r+0xb2>
   8111a:	0758      	lsls	r0, r3, #29
   8111c:	d425      	bmi.n	8116a <__swsetup_r+0x8a>
   8111e:	6920      	ldr	r0, [r4, #16]
   81120:	f042 0308 	orr.w	r3, r2, #8
   81124:	81a3      	strh	r3, [r4, #12]
   81126:	b29b      	uxth	r3, r3
   81128:	2800      	cmp	r0, #0
   8112a:	d1e9      	bne.n	81100 <__swsetup_r+0x20>
   8112c:	f403 7220 	and.w	r2, r3, #640	; 0x280
   81130:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   81134:	d0e4      	beq.n	81100 <__swsetup_r+0x20>
   81136:	4628      	mov	r0, r5
   81138:	4621      	mov	r1, r4
   8113a:	f000 fc9d 	bl	81a78 <__smakebuf_r>
   8113e:	89a3      	ldrh	r3, [r4, #12]
   81140:	6920      	ldr	r0, [r4, #16]
   81142:	e7dd      	b.n	81100 <__swsetup_r+0x20>
   81144:	0799      	lsls	r1, r3, #30
   81146:	bf58      	it	pl
   81148:	6962      	ldrpl	r2, [r4, #20]
   8114a:	60a2      	str	r2, [r4, #8]
   8114c:	2800      	cmp	r0, #0
   8114e:	d1e0      	bne.n	81112 <__swsetup_r+0x32>
   81150:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81154:	061a      	lsls	r2, r3, #24
   81156:	d5dd      	bpl.n	81114 <__swsetup_r+0x34>
   81158:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8115c:	81a3      	strh	r3, [r4, #12]
   8115e:	f04f 30ff 	mov.w	r0, #4294967295
   81162:	bd38      	pop	{r3, r4, r5, pc}
   81164:	f000 f924 	bl	813b0 <__sinit>
   81168:	e7c3      	b.n	810f2 <__swsetup_r+0x12>
   8116a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8116c:	b151      	cbz	r1, 81184 <__swsetup_r+0xa4>
   8116e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81172:	4299      	cmp	r1, r3
   81174:	d004      	beq.n	81180 <__swsetup_r+0xa0>
   81176:	4628      	mov	r0, r5
   81178:	f000 f9c0 	bl	814fc <_free_r>
   8117c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   81180:	2300      	movs	r3, #0
   81182:	6323      	str	r3, [r4, #48]	; 0x30
   81184:	2300      	movs	r3, #0
   81186:	6920      	ldr	r0, [r4, #16]
   81188:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   8118c:	e884 0009 	stmia.w	r4, {r0, r3}
   81190:	e7c6      	b.n	81120 <__swsetup_r+0x40>
   81192:	2309      	movs	r3, #9
   81194:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   81198:	602b      	str	r3, [r5, #0]
   8119a:	f04f 30ff 	mov.w	r0, #4294967295
   8119e:	81a2      	strh	r2, [r4, #12]
   811a0:	bd38      	pop	{r3, r4, r5, pc}
   811a2:	bf00      	nop
   811a4:	20000004 	.word	0x20000004

000811a8 <register_fini>:
   811a8:	4b02      	ldr	r3, [pc, #8]	; (811b4 <register_fini+0xc>)
   811aa:	b113      	cbz	r3, 811b2 <register_fini+0xa>
   811ac:	4802      	ldr	r0, [pc, #8]	; (811b8 <register_fini+0x10>)
   811ae:	f000 b805 	b.w	811bc <atexit>
   811b2:	4770      	bx	lr
   811b4:	00000000 	.word	0x00000000
   811b8:	00081429 	.word	0x00081429

000811bc <atexit>:
   811bc:	2300      	movs	r3, #0
   811be:	4601      	mov	r1, r0
   811c0:	461a      	mov	r2, r3
   811c2:	4618      	mov	r0, r3
   811c4:	f001 ba92 	b.w	826ec <__register_exitproc>

000811c8 <__sflush_r>:
   811c8:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   811cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   811d0:	b29a      	uxth	r2, r3
   811d2:	460d      	mov	r5, r1
   811d4:	0711      	lsls	r1, r2, #28
   811d6:	4680      	mov	r8, r0
   811d8:	d43a      	bmi.n	81250 <__sflush_r+0x88>
   811da:	686a      	ldr	r2, [r5, #4]
   811dc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   811e0:	2a00      	cmp	r2, #0
   811e2:	81ab      	strh	r3, [r5, #12]
   811e4:	dd70      	ble.n	812c8 <__sflush_r+0x100>
   811e6:	6aac      	ldr	r4, [r5, #40]	; 0x28
   811e8:	2c00      	cmp	r4, #0
   811ea:	d04a      	beq.n	81282 <__sflush_r+0xba>
   811ec:	2200      	movs	r2, #0
   811ee:	b29b      	uxth	r3, r3
   811f0:	f8d8 6000 	ldr.w	r6, [r8]
   811f4:	f8c8 2000 	str.w	r2, [r8]
   811f8:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   811fc:	d068      	beq.n	812d0 <__sflush_r+0x108>
   811fe:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   81200:	075f      	lsls	r7, r3, #29
   81202:	d505      	bpl.n	81210 <__sflush_r+0x48>
   81204:	6869      	ldr	r1, [r5, #4]
   81206:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   81208:	1a52      	subs	r2, r2, r1
   8120a:	b10b      	cbz	r3, 81210 <__sflush_r+0x48>
   8120c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   8120e:	1ad2      	subs	r2, r2, r3
   81210:	2300      	movs	r3, #0
   81212:	69e9      	ldr	r1, [r5, #28]
   81214:	4640      	mov	r0, r8
   81216:	47a0      	blx	r4
   81218:	1c44      	adds	r4, r0, #1
   8121a:	d03d      	beq.n	81298 <__sflush_r+0xd0>
   8121c:	2100      	movs	r1, #0
   8121e:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   81222:	692a      	ldr	r2, [r5, #16]
   81224:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   81228:	81ab      	strh	r3, [r5, #12]
   8122a:	04db      	lsls	r3, r3, #19
   8122c:	6069      	str	r1, [r5, #4]
   8122e:	602a      	str	r2, [r5, #0]
   81230:	d448      	bmi.n	812c4 <__sflush_r+0xfc>
   81232:	6b29      	ldr	r1, [r5, #48]	; 0x30
   81234:	f8c8 6000 	str.w	r6, [r8]
   81238:	b319      	cbz	r1, 81282 <__sflush_r+0xba>
   8123a:	f105 0340 	add.w	r3, r5, #64	; 0x40
   8123e:	4299      	cmp	r1, r3
   81240:	d002      	beq.n	81248 <__sflush_r+0x80>
   81242:	4640      	mov	r0, r8
   81244:	f000 f95a 	bl	814fc <_free_r>
   81248:	2000      	movs	r0, #0
   8124a:	6328      	str	r0, [r5, #48]	; 0x30
   8124c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81250:	692e      	ldr	r6, [r5, #16]
   81252:	b1b6      	cbz	r6, 81282 <__sflush_r+0xba>
   81254:	0791      	lsls	r1, r2, #30
   81256:	bf18      	it	ne
   81258:	2300      	movne	r3, #0
   8125a:	682c      	ldr	r4, [r5, #0]
   8125c:	bf08      	it	eq
   8125e:	696b      	ldreq	r3, [r5, #20]
   81260:	602e      	str	r6, [r5, #0]
   81262:	1ba4      	subs	r4, r4, r6
   81264:	60ab      	str	r3, [r5, #8]
   81266:	e00a      	b.n	8127e <__sflush_r+0xb6>
   81268:	4623      	mov	r3, r4
   8126a:	4632      	mov	r2, r6
   8126c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   8126e:	69e9      	ldr	r1, [r5, #28]
   81270:	4640      	mov	r0, r8
   81272:	47b8      	blx	r7
   81274:	2800      	cmp	r0, #0
   81276:	eba4 0400 	sub.w	r4, r4, r0
   8127a:	4406      	add	r6, r0
   8127c:	dd04      	ble.n	81288 <__sflush_r+0xc0>
   8127e:	2c00      	cmp	r4, #0
   81280:	dcf2      	bgt.n	81268 <__sflush_r+0xa0>
   81282:	2000      	movs	r0, #0
   81284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81288:	89ab      	ldrh	r3, [r5, #12]
   8128a:	f04f 30ff 	mov.w	r0, #4294967295
   8128e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81292:	81ab      	strh	r3, [r5, #12]
   81294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81298:	f8d8 4000 	ldr.w	r4, [r8]
   8129c:	2c1d      	cmp	r4, #29
   8129e:	d8f3      	bhi.n	81288 <__sflush_r+0xc0>
   812a0:	4b16      	ldr	r3, [pc, #88]	; (812fc <__sflush_r+0x134>)
   812a2:	40e3      	lsrs	r3, r4
   812a4:	43db      	mvns	r3, r3
   812a6:	f013 0301 	ands.w	r3, r3, #1
   812aa:	d1ed      	bne.n	81288 <__sflush_r+0xc0>
   812ac:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   812b0:	6929      	ldr	r1, [r5, #16]
   812b2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   812b6:	81aa      	strh	r2, [r5, #12]
   812b8:	04d2      	lsls	r2, r2, #19
   812ba:	606b      	str	r3, [r5, #4]
   812bc:	6029      	str	r1, [r5, #0]
   812be:	d5b8      	bpl.n	81232 <__sflush_r+0x6a>
   812c0:	2c00      	cmp	r4, #0
   812c2:	d1b6      	bne.n	81232 <__sflush_r+0x6a>
   812c4:	6528      	str	r0, [r5, #80]	; 0x50
   812c6:	e7b4      	b.n	81232 <__sflush_r+0x6a>
   812c8:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   812ca:	2a00      	cmp	r2, #0
   812cc:	dc8b      	bgt.n	811e6 <__sflush_r+0x1e>
   812ce:	e7d8      	b.n	81282 <__sflush_r+0xba>
   812d0:	2301      	movs	r3, #1
   812d2:	69e9      	ldr	r1, [r5, #28]
   812d4:	4640      	mov	r0, r8
   812d6:	47a0      	blx	r4
   812d8:	1c43      	adds	r3, r0, #1
   812da:	4602      	mov	r2, r0
   812dc:	d002      	beq.n	812e4 <__sflush_r+0x11c>
   812de:	89ab      	ldrh	r3, [r5, #12]
   812e0:	6aac      	ldr	r4, [r5, #40]	; 0x28
   812e2:	e78d      	b.n	81200 <__sflush_r+0x38>
   812e4:	f8d8 3000 	ldr.w	r3, [r8]
   812e8:	2b00      	cmp	r3, #0
   812ea:	d0f8      	beq.n	812de <__sflush_r+0x116>
   812ec:	2b1d      	cmp	r3, #29
   812ee:	d001      	beq.n	812f4 <__sflush_r+0x12c>
   812f0:	2b16      	cmp	r3, #22
   812f2:	d1c9      	bne.n	81288 <__sflush_r+0xc0>
   812f4:	f8c8 6000 	str.w	r6, [r8]
   812f8:	e7c3      	b.n	81282 <__sflush_r+0xba>
   812fa:	bf00      	nop
   812fc:	20400001 	.word	0x20400001

00081300 <_fflush_r>:
   81300:	b538      	push	{r3, r4, r5, lr}
   81302:	460d      	mov	r5, r1
   81304:	4604      	mov	r4, r0
   81306:	b108      	cbz	r0, 8130c <_fflush_r+0xc>
   81308:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8130a:	b1bb      	cbz	r3, 8133c <_fflush_r+0x3c>
   8130c:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   81310:	b188      	cbz	r0, 81336 <_fflush_r+0x36>
   81312:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   81314:	07db      	lsls	r3, r3, #31
   81316:	d401      	bmi.n	8131c <_fflush_r+0x1c>
   81318:	0581      	lsls	r1, r0, #22
   8131a:	d517      	bpl.n	8134c <_fflush_r+0x4c>
   8131c:	4620      	mov	r0, r4
   8131e:	4629      	mov	r1, r5
   81320:	f7ff ff52 	bl	811c8 <__sflush_r>
   81324:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   81326:	4604      	mov	r4, r0
   81328:	07da      	lsls	r2, r3, #31
   8132a:	d402      	bmi.n	81332 <_fflush_r+0x32>
   8132c:	89ab      	ldrh	r3, [r5, #12]
   8132e:	059b      	lsls	r3, r3, #22
   81330:	d507      	bpl.n	81342 <_fflush_r+0x42>
   81332:	4620      	mov	r0, r4
   81334:	bd38      	pop	{r3, r4, r5, pc}
   81336:	4604      	mov	r4, r0
   81338:	4620      	mov	r0, r4
   8133a:	bd38      	pop	{r3, r4, r5, pc}
   8133c:	f000 f838 	bl	813b0 <__sinit>
   81340:	e7e4      	b.n	8130c <_fflush_r+0xc>
   81342:	6da8      	ldr	r0, [r5, #88]	; 0x58
   81344:	f000 fb68 	bl	81a18 <__retarget_lock_release_recursive>
   81348:	4620      	mov	r0, r4
   8134a:	bd38      	pop	{r3, r4, r5, pc}
   8134c:	6da8      	ldr	r0, [r5, #88]	; 0x58
   8134e:	f000 fb61 	bl	81a14 <__retarget_lock_acquire_recursive>
   81352:	e7e3      	b.n	8131c <_fflush_r+0x1c>

00081354 <_cleanup_r>:
   81354:	4901      	ldr	r1, [pc, #4]	; (8135c <_cleanup_r+0x8>)
   81356:	f000 bb31 	b.w	819bc <_fwalk_reent>
   8135a:	bf00      	nop
   8135c:	000827d5 	.word	0x000827d5

00081360 <std.isra.0>:
   81360:	2300      	movs	r3, #0
   81362:	b510      	push	{r4, lr}
   81364:	4604      	mov	r4, r0
   81366:	8181      	strh	r1, [r0, #12]
   81368:	81c2      	strh	r2, [r0, #14]
   8136a:	6003      	str	r3, [r0, #0]
   8136c:	6043      	str	r3, [r0, #4]
   8136e:	6083      	str	r3, [r0, #8]
   81370:	6643      	str	r3, [r0, #100]	; 0x64
   81372:	6103      	str	r3, [r0, #16]
   81374:	6143      	str	r3, [r0, #20]
   81376:	6183      	str	r3, [r0, #24]
   81378:	4619      	mov	r1, r3
   8137a:	2208      	movs	r2, #8
   8137c:	305c      	adds	r0, #92	; 0x5c
   8137e:	f7ff fddd 	bl	80f3c <memset>
   81382:	4807      	ldr	r0, [pc, #28]	; (813a0 <std.isra.0+0x40>)
   81384:	4907      	ldr	r1, [pc, #28]	; (813a4 <std.isra.0+0x44>)
   81386:	4a08      	ldr	r2, [pc, #32]	; (813a8 <std.isra.0+0x48>)
   81388:	4b08      	ldr	r3, [pc, #32]	; (813ac <std.isra.0+0x4c>)
   8138a:	6220      	str	r0, [r4, #32]
   8138c:	61e4      	str	r4, [r4, #28]
   8138e:	6261      	str	r1, [r4, #36]	; 0x24
   81390:	62a2      	str	r2, [r4, #40]	; 0x28
   81392:	62e3      	str	r3, [r4, #44]	; 0x2c
   81394:	f104 0058 	add.w	r0, r4, #88	; 0x58
   81398:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8139c:	f000 bb36 	b.w	81a0c <__retarget_lock_init_recursive>
   813a0:	00082639 	.word	0x00082639
   813a4:	0008265d 	.word	0x0008265d
   813a8:	00082699 	.word	0x00082699
   813ac:	000826b9 	.word	0x000826b9

000813b0 <__sinit>:
   813b0:	b510      	push	{r4, lr}
   813b2:	4604      	mov	r4, r0
   813b4:	4814      	ldr	r0, [pc, #80]	; (81408 <__sinit+0x58>)
   813b6:	f000 fb2d 	bl	81a14 <__retarget_lock_acquire_recursive>
   813ba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   813bc:	b9fa      	cbnz	r2, 813fe <__sinit+0x4e>
   813be:	2003      	movs	r0, #3
   813c0:	4912      	ldr	r1, [pc, #72]	; (8140c <__sinit+0x5c>)
   813c2:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   813c6:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   813ca:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   813ce:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   813d2:	63e1      	str	r1, [r4, #60]	; 0x3c
   813d4:	6860      	ldr	r0, [r4, #4]
   813d6:	2104      	movs	r1, #4
   813d8:	f7ff ffc2 	bl	81360 <std.isra.0>
   813dc:	68a0      	ldr	r0, [r4, #8]
   813de:	2201      	movs	r2, #1
   813e0:	2109      	movs	r1, #9
   813e2:	f7ff ffbd 	bl	81360 <std.isra.0>
   813e6:	68e0      	ldr	r0, [r4, #12]
   813e8:	2202      	movs	r2, #2
   813ea:	2112      	movs	r1, #18
   813ec:	f7ff ffb8 	bl	81360 <std.isra.0>
   813f0:	2301      	movs	r3, #1
   813f2:	4805      	ldr	r0, [pc, #20]	; (81408 <__sinit+0x58>)
   813f4:	63a3      	str	r3, [r4, #56]	; 0x38
   813f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   813fa:	f000 bb0d 	b.w	81a18 <__retarget_lock_release_recursive>
   813fe:	4802      	ldr	r0, [pc, #8]	; (81408 <__sinit+0x58>)
   81400:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81404:	f000 bb08 	b.w	81a18 <__retarget_lock_release_recursive>
   81408:	20000ccc 	.word	0x20000ccc
   8140c:	00081355 	.word	0x00081355

00081410 <__sfp_lock_acquire>:
   81410:	4801      	ldr	r0, [pc, #4]	; (81418 <__sfp_lock_acquire+0x8>)
   81412:	f000 baff 	b.w	81a14 <__retarget_lock_acquire_recursive>
   81416:	bf00      	nop
   81418:	20000ce0 	.word	0x20000ce0

0008141c <__sfp_lock_release>:
   8141c:	4801      	ldr	r0, [pc, #4]	; (81424 <__sfp_lock_release+0x8>)
   8141e:	f000 bafb 	b.w	81a18 <__retarget_lock_release_recursive>
   81422:	bf00      	nop
   81424:	20000ce0 	.word	0x20000ce0

00081428 <__libc_fini_array>:
   81428:	b538      	push	{r3, r4, r5, lr}
   8142a:	4c0a      	ldr	r4, [pc, #40]	; (81454 <__libc_fini_array+0x2c>)
   8142c:	4d0a      	ldr	r5, [pc, #40]	; (81458 <__libc_fini_array+0x30>)
   8142e:	1b64      	subs	r4, r4, r5
   81430:	10a4      	asrs	r4, r4, #2
   81432:	d00a      	beq.n	8144a <__libc_fini_array+0x22>
   81434:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   81438:	3b01      	subs	r3, #1
   8143a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   8143e:	3c01      	subs	r4, #1
   81440:	f855 3904 	ldr.w	r3, [r5], #-4
   81444:	4798      	blx	r3
   81446:	2c00      	cmp	r4, #0
   81448:	d1f9      	bne.n	8143e <__libc_fini_array+0x16>
   8144a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8144e:	f001 ba95 	b.w	8297c <_fini>
   81452:	bf00      	nop
   81454:	0008298c 	.word	0x0008298c
   81458:	00082988 	.word	0x00082988

0008145c <_malloc_trim_r>:
   8145c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8145e:	460c      	mov	r4, r1
   81460:	4f23      	ldr	r7, [pc, #140]	; (814f0 <_malloc_trim_r+0x94>)
   81462:	4606      	mov	r6, r0
   81464:	f000 ff14 	bl	82290 <__malloc_lock>
   81468:	68bb      	ldr	r3, [r7, #8]
   8146a:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   8146e:	685d      	ldr	r5, [r3, #4]
   81470:	310f      	adds	r1, #15
   81472:	f025 0503 	bic.w	r5, r5, #3
   81476:	4429      	add	r1, r5
   81478:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   8147c:	f021 010f 	bic.w	r1, r1, #15
   81480:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   81484:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   81488:	db07      	blt.n	8149a <_malloc_trim_r+0x3e>
   8148a:	2100      	movs	r1, #0
   8148c:	4630      	mov	r0, r6
   8148e:	f001 f8c1 	bl	82614 <_sbrk_r>
   81492:	68bb      	ldr	r3, [r7, #8]
   81494:	442b      	add	r3, r5
   81496:	4298      	cmp	r0, r3
   81498:	d004      	beq.n	814a4 <_malloc_trim_r+0x48>
   8149a:	4630      	mov	r0, r6
   8149c:	f000 fefe 	bl	8229c <__malloc_unlock>
   814a0:	2000      	movs	r0, #0
   814a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   814a4:	4261      	negs	r1, r4
   814a6:	4630      	mov	r0, r6
   814a8:	f001 f8b4 	bl	82614 <_sbrk_r>
   814ac:	3001      	adds	r0, #1
   814ae:	d00d      	beq.n	814cc <_malloc_trim_r+0x70>
   814b0:	4b10      	ldr	r3, [pc, #64]	; (814f4 <_malloc_trim_r+0x98>)
   814b2:	68ba      	ldr	r2, [r7, #8]
   814b4:	6819      	ldr	r1, [r3, #0]
   814b6:	1b2d      	subs	r5, r5, r4
   814b8:	f045 0501 	orr.w	r5, r5, #1
   814bc:	4630      	mov	r0, r6
   814be:	1b09      	subs	r1, r1, r4
   814c0:	6055      	str	r5, [r2, #4]
   814c2:	6019      	str	r1, [r3, #0]
   814c4:	f000 feea 	bl	8229c <__malloc_unlock>
   814c8:	2001      	movs	r0, #1
   814ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   814cc:	2100      	movs	r1, #0
   814ce:	4630      	mov	r0, r6
   814d0:	f001 f8a0 	bl	82614 <_sbrk_r>
   814d4:	68ba      	ldr	r2, [r7, #8]
   814d6:	1a83      	subs	r3, r0, r2
   814d8:	2b0f      	cmp	r3, #15
   814da:	ddde      	ble.n	8149a <_malloc_trim_r+0x3e>
   814dc:	4c06      	ldr	r4, [pc, #24]	; (814f8 <_malloc_trim_r+0x9c>)
   814de:	4905      	ldr	r1, [pc, #20]	; (814f4 <_malloc_trim_r+0x98>)
   814e0:	6824      	ldr	r4, [r4, #0]
   814e2:	f043 0301 	orr.w	r3, r3, #1
   814e6:	1b00      	subs	r0, r0, r4
   814e8:	6053      	str	r3, [r2, #4]
   814ea:	6008      	str	r0, [r1, #0]
   814ec:	e7d5      	b.n	8149a <_malloc_trim_r+0x3e>
   814ee:	bf00      	nop
   814f0:	20000434 	.word	0x20000434
   814f4:	20000c84 	.word	0x20000c84
   814f8:	2000083c 	.word	0x2000083c

000814fc <_free_r>:
   814fc:	2900      	cmp	r1, #0
   814fe:	d044      	beq.n	8158a <_free_r+0x8e>
   81500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81504:	460d      	mov	r5, r1
   81506:	4680      	mov	r8, r0
   81508:	f000 fec2 	bl	82290 <__malloc_lock>
   8150c:	f855 7c04 	ldr.w	r7, [r5, #-4]
   81510:	4969      	ldr	r1, [pc, #420]	; (816b8 <_free_r+0x1bc>)
   81512:	f1a5 0408 	sub.w	r4, r5, #8
   81516:	f027 0301 	bic.w	r3, r7, #1
   8151a:	18e2      	adds	r2, r4, r3
   8151c:	688e      	ldr	r6, [r1, #8]
   8151e:	6850      	ldr	r0, [r2, #4]
   81520:	42b2      	cmp	r2, r6
   81522:	f020 0003 	bic.w	r0, r0, #3
   81526:	d05e      	beq.n	815e6 <_free_r+0xea>
   81528:	07fe      	lsls	r6, r7, #31
   8152a:	6050      	str	r0, [r2, #4]
   8152c:	d40b      	bmi.n	81546 <_free_r+0x4a>
   8152e:	f855 7c08 	ldr.w	r7, [r5, #-8]
   81532:	f101 0e08 	add.w	lr, r1, #8
   81536:	1be4      	subs	r4, r4, r7
   81538:	68a5      	ldr	r5, [r4, #8]
   8153a:	443b      	add	r3, r7
   8153c:	4575      	cmp	r5, lr
   8153e:	d06d      	beq.n	8161c <_free_r+0x120>
   81540:	68e7      	ldr	r7, [r4, #12]
   81542:	60ef      	str	r7, [r5, #12]
   81544:	60bd      	str	r5, [r7, #8]
   81546:	1815      	adds	r5, r2, r0
   81548:	686d      	ldr	r5, [r5, #4]
   8154a:	07ed      	lsls	r5, r5, #31
   8154c:	d53e      	bpl.n	815cc <_free_r+0xd0>
   8154e:	f043 0201 	orr.w	r2, r3, #1
   81552:	6062      	str	r2, [r4, #4]
   81554:	50e3      	str	r3, [r4, r3]
   81556:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8155a:	d217      	bcs.n	8158c <_free_r+0x90>
   8155c:	2201      	movs	r2, #1
   8155e:	08db      	lsrs	r3, r3, #3
   81560:	1098      	asrs	r0, r3, #2
   81562:	684d      	ldr	r5, [r1, #4]
   81564:	4413      	add	r3, r2
   81566:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   8156a:	4082      	lsls	r2, r0
   8156c:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   81570:	432a      	orrs	r2, r5
   81572:	3808      	subs	r0, #8
   81574:	60e0      	str	r0, [r4, #12]
   81576:	60a7      	str	r7, [r4, #8]
   81578:	604a      	str	r2, [r1, #4]
   8157a:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   8157e:	60fc      	str	r4, [r7, #12]
   81580:	4640      	mov	r0, r8
   81582:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   81586:	f000 be89 	b.w	8229c <__malloc_unlock>
   8158a:	4770      	bx	lr
   8158c:	0a5a      	lsrs	r2, r3, #9
   8158e:	2a04      	cmp	r2, #4
   81590:	d852      	bhi.n	81638 <_free_r+0x13c>
   81592:	099a      	lsrs	r2, r3, #6
   81594:	f102 0739 	add.w	r7, r2, #57	; 0x39
   81598:	00ff      	lsls	r7, r7, #3
   8159a:	f102 0538 	add.w	r5, r2, #56	; 0x38
   8159e:	19c8      	adds	r0, r1, r7
   815a0:	59ca      	ldr	r2, [r1, r7]
   815a2:	3808      	subs	r0, #8
   815a4:	4290      	cmp	r0, r2
   815a6:	d04f      	beq.n	81648 <_free_r+0x14c>
   815a8:	6851      	ldr	r1, [r2, #4]
   815aa:	f021 0103 	bic.w	r1, r1, #3
   815ae:	428b      	cmp	r3, r1
   815b0:	d232      	bcs.n	81618 <_free_r+0x11c>
   815b2:	6892      	ldr	r2, [r2, #8]
   815b4:	4290      	cmp	r0, r2
   815b6:	d1f7      	bne.n	815a8 <_free_r+0xac>
   815b8:	68c3      	ldr	r3, [r0, #12]
   815ba:	60a0      	str	r0, [r4, #8]
   815bc:	60e3      	str	r3, [r4, #12]
   815be:	609c      	str	r4, [r3, #8]
   815c0:	60c4      	str	r4, [r0, #12]
   815c2:	4640      	mov	r0, r8
   815c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   815c8:	f000 be68 	b.w	8229c <__malloc_unlock>
   815cc:	6895      	ldr	r5, [r2, #8]
   815ce:	4f3b      	ldr	r7, [pc, #236]	; (816bc <_free_r+0x1c0>)
   815d0:	4403      	add	r3, r0
   815d2:	42bd      	cmp	r5, r7
   815d4:	d040      	beq.n	81658 <_free_r+0x15c>
   815d6:	68d0      	ldr	r0, [r2, #12]
   815d8:	f043 0201 	orr.w	r2, r3, #1
   815dc:	60e8      	str	r0, [r5, #12]
   815de:	6085      	str	r5, [r0, #8]
   815e0:	6062      	str	r2, [r4, #4]
   815e2:	50e3      	str	r3, [r4, r3]
   815e4:	e7b7      	b.n	81556 <_free_r+0x5a>
   815e6:	07ff      	lsls	r7, r7, #31
   815e8:	4403      	add	r3, r0
   815ea:	d407      	bmi.n	815fc <_free_r+0x100>
   815ec:	f855 5c08 	ldr.w	r5, [r5, #-8]
   815f0:	1b64      	subs	r4, r4, r5
   815f2:	68e2      	ldr	r2, [r4, #12]
   815f4:	68a0      	ldr	r0, [r4, #8]
   815f6:	442b      	add	r3, r5
   815f8:	60c2      	str	r2, [r0, #12]
   815fa:	6090      	str	r0, [r2, #8]
   815fc:	4a30      	ldr	r2, [pc, #192]	; (816c0 <_free_r+0x1c4>)
   815fe:	f043 0001 	orr.w	r0, r3, #1
   81602:	6812      	ldr	r2, [r2, #0]
   81604:	6060      	str	r0, [r4, #4]
   81606:	4293      	cmp	r3, r2
   81608:	608c      	str	r4, [r1, #8]
   8160a:	d3b9      	bcc.n	81580 <_free_r+0x84>
   8160c:	4b2d      	ldr	r3, [pc, #180]	; (816c4 <_free_r+0x1c8>)
   8160e:	4640      	mov	r0, r8
   81610:	6819      	ldr	r1, [r3, #0]
   81612:	f7ff ff23 	bl	8145c <_malloc_trim_r>
   81616:	e7b3      	b.n	81580 <_free_r+0x84>
   81618:	4610      	mov	r0, r2
   8161a:	e7cd      	b.n	815b8 <_free_r+0xbc>
   8161c:	1811      	adds	r1, r2, r0
   8161e:	6849      	ldr	r1, [r1, #4]
   81620:	07c9      	lsls	r1, r1, #31
   81622:	d444      	bmi.n	816ae <_free_r+0x1b2>
   81624:	6891      	ldr	r1, [r2, #8]
   81626:	4403      	add	r3, r0
   81628:	68d2      	ldr	r2, [r2, #12]
   8162a:	f043 0001 	orr.w	r0, r3, #1
   8162e:	60ca      	str	r2, [r1, #12]
   81630:	6091      	str	r1, [r2, #8]
   81632:	6060      	str	r0, [r4, #4]
   81634:	50e3      	str	r3, [r4, r3]
   81636:	e7a3      	b.n	81580 <_free_r+0x84>
   81638:	2a14      	cmp	r2, #20
   8163a:	d816      	bhi.n	8166a <_free_r+0x16e>
   8163c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   81640:	00ff      	lsls	r7, r7, #3
   81642:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   81646:	e7aa      	b.n	8159e <_free_r+0xa2>
   81648:	2301      	movs	r3, #1
   8164a:	10aa      	asrs	r2, r5, #2
   8164c:	684d      	ldr	r5, [r1, #4]
   8164e:	4093      	lsls	r3, r2
   81650:	432b      	orrs	r3, r5
   81652:	604b      	str	r3, [r1, #4]
   81654:	4603      	mov	r3, r0
   81656:	e7b0      	b.n	815ba <_free_r+0xbe>
   81658:	f043 0201 	orr.w	r2, r3, #1
   8165c:	614c      	str	r4, [r1, #20]
   8165e:	610c      	str	r4, [r1, #16]
   81660:	60e5      	str	r5, [r4, #12]
   81662:	60a5      	str	r5, [r4, #8]
   81664:	6062      	str	r2, [r4, #4]
   81666:	50e3      	str	r3, [r4, r3]
   81668:	e78a      	b.n	81580 <_free_r+0x84>
   8166a:	2a54      	cmp	r2, #84	; 0x54
   8166c:	d806      	bhi.n	8167c <_free_r+0x180>
   8166e:	0b1a      	lsrs	r2, r3, #12
   81670:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   81674:	00ff      	lsls	r7, r7, #3
   81676:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   8167a:	e790      	b.n	8159e <_free_r+0xa2>
   8167c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   81680:	d806      	bhi.n	81690 <_free_r+0x194>
   81682:	0bda      	lsrs	r2, r3, #15
   81684:	f102 0778 	add.w	r7, r2, #120	; 0x78
   81688:	00ff      	lsls	r7, r7, #3
   8168a:	f102 0577 	add.w	r5, r2, #119	; 0x77
   8168e:	e786      	b.n	8159e <_free_r+0xa2>
   81690:	f240 5054 	movw	r0, #1364	; 0x554
   81694:	4282      	cmp	r2, r0
   81696:	d806      	bhi.n	816a6 <_free_r+0x1aa>
   81698:	0c9a      	lsrs	r2, r3, #18
   8169a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   8169e:	00ff      	lsls	r7, r7, #3
   816a0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   816a4:	e77b      	b.n	8159e <_free_r+0xa2>
   816a6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   816aa:	257e      	movs	r5, #126	; 0x7e
   816ac:	e777      	b.n	8159e <_free_r+0xa2>
   816ae:	f043 0101 	orr.w	r1, r3, #1
   816b2:	6061      	str	r1, [r4, #4]
   816b4:	6013      	str	r3, [r2, #0]
   816b6:	e763      	b.n	81580 <_free_r+0x84>
   816b8:	20000434 	.word	0x20000434
   816bc:	2000043c 	.word	0x2000043c
   816c0:	20000840 	.word	0x20000840
   816c4:	20000cb4 	.word	0x20000cb4

000816c8 <__sfvwrite_r>:
   816c8:	6893      	ldr	r3, [r2, #8]
   816ca:	2b00      	cmp	r3, #0
   816cc:	d071      	beq.n	817b2 <__sfvwrite_r+0xea>
   816ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   816d2:	898b      	ldrh	r3, [r1, #12]
   816d4:	b083      	sub	sp, #12
   816d6:	460c      	mov	r4, r1
   816d8:	0719      	lsls	r1, r3, #28
   816da:	9000      	str	r0, [sp, #0]
   816dc:	4616      	mov	r6, r2
   816de:	d525      	bpl.n	8172c <__sfvwrite_r+0x64>
   816e0:	6922      	ldr	r2, [r4, #16]
   816e2:	b31a      	cbz	r2, 8172c <__sfvwrite_r+0x64>
   816e4:	f013 0002 	ands.w	r0, r3, #2
   816e8:	6835      	ldr	r5, [r6, #0]
   816ea:	d02b      	beq.n	81744 <__sfvwrite_r+0x7c>
   816ec:	f04f 0900 	mov.w	r9, #0
   816f0:	46b0      	mov	r8, r6
   816f2:	464f      	mov	r7, r9
   816f4:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 819b8 <__sfvwrite_r+0x2f0>
   816f8:	2f00      	cmp	r7, #0
   816fa:	d055      	beq.n	817a8 <__sfvwrite_r+0xe0>
   816fc:	4557      	cmp	r7, sl
   816fe:	463b      	mov	r3, r7
   81700:	464a      	mov	r2, r9
   81702:	bf28      	it	cs
   81704:	4653      	movcs	r3, sl
   81706:	69e1      	ldr	r1, [r4, #28]
   81708:	9800      	ldr	r0, [sp, #0]
   8170a:	6a66      	ldr	r6, [r4, #36]	; 0x24
   8170c:	47b0      	blx	r6
   8170e:	2800      	cmp	r0, #0
   81710:	dd56      	ble.n	817c0 <__sfvwrite_r+0xf8>
   81712:	f8d8 3008 	ldr.w	r3, [r8, #8]
   81716:	4481      	add	r9, r0
   81718:	1a1b      	subs	r3, r3, r0
   8171a:	1a3f      	subs	r7, r7, r0
   8171c:	f8c8 3008 	str.w	r3, [r8, #8]
   81720:	2b00      	cmp	r3, #0
   81722:	d1e9      	bne.n	816f8 <__sfvwrite_r+0x30>
   81724:	2000      	movs	r0, #0
   81726:	b003      	add	sp, #12
   81728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8172c:	4621      	mov	r1, r4
   8172e:	9800      	ldr	r0, [sp, #0]
   81730:	f7ff fcd6 	bl	810e0 <__swsetup_r>
   81734:	2800      	cmp	r0, #0
   81736:	f040 8135 	bne.w	819a4 <__sfvwrite_r+0x2dc>
   8173a:	89a3      	ldrh	r3, [r4, #12]
   8173c:	6835      	ldr	r5, [r6, #0]
   8173e:	f013 0002 	ands.w	r0, r3, #2
   81742:	d1d3      	bne.n	816ec <__sfvwrite_r+0x24>
   81744:	f013 0901 	ands.w	r9, r3, #1
   81748:	d144      	bne.n	817d4 <__sfvwrite_r+0x10c>
   8174a:	464f      	mov	r7, r9
   8174c:	9601      	str	r6, [sp, #4]
   8174e:	b337      	cbz	r7, 8179e <__sfvwrite_r+0xd6>
   81750:	059a      	lsls	r2, r3, #22
   81752:	f8d4 8008 	ldr.w	r8, [r4, #8]
   81756:	f140 8085 	bpl.w	81864 <__sfvwrite_r+0x19c>
   8175a:	4547      	cmp	r7, r8
   8175c:	46c3      	mov	fp, r8
   8175e:	f0c0 80ad 	bcc.w	818bc <__sfvwrite_r+0x1f4>
   81762:	f413 6f90 	tst.w	r3, #1152	; 0x480
   81766:	f040 80ae 	bne.w	818c6 <__sfvwrite_r+0x1fe>
   8176a:	46ba      	mov	sl, r7
   8176c:	6820      	ldr	r0, [r4, #0]
   8176e:	465a      	mov	r2, fp
   81770:	4649      	mov	r1, r9
   81772:	f000 fd29 	bl	821c8 <memmove>
   81776:	68a2      	ldr	r2, [r4, #8]
   81778:	6823      	ldr	r3, [r4, #0]
   8177a:	eba2 0208 	sub.w	r2, r2, r8
   8177e:	445b      	add	r3, fp
   81780:	60a2      	str	r2, [r4, #8]
   81782:	6023      	str	r3, [r4, #0]
   81784:	9a01      	ldr	r2, [sp, #4]
   81786:	44d1      	add	r9, sl
   81788:	6893      	ldr	r3, [r2, #8]
   8178a:	eba7 070a 	sub.w	r7, r7, sl
   8178e:	eba3 030a 	sub.w	r3, r3, sl
   81792:	6093      	str	r3, [r2, #8]
   81794:	2b00      	cmp	r3, #0
   81796:	d0c5      	beq.n	81724 <__sfvwrite_r+0x5c>
   81798:	89a3      	ldrh	r3, [r4, #12]
   8179a:	2f00      	cmp	r7, #0
   8179c:	d1d8      	bne.n	81750 <__sfvwrite_r+0x88>
   8179e:	f8d5 9000 	ldr.w	r9, [r5]
   817a2:	686f      	ldr	r7, [r5, #4]
   817a4:	3508      	adds	r5, #8
   817a6:	e7d2      	b.n	8174e <__sfvwrite_r+0x86>
   817a8:	f8d5 9000 	ldr.w	r9, [r5]
   817ac:	686f      	ldr	r7, [r5, #4]
   817ae:	3508      	adds	r5, #8
   817b0:	e7a2      	b.n	816f8 <__sfvwrite_r+0x30>
   817b2:	2000      	movs	r0, #0
   817b4:	4770      	bx	lr
   817b6:	4621      	mov	r1, r4
   817b8:	9800      	ldr	r0, [sp, #0]
   817ba:	f7ff fda1 	bl	81300 <_fflush_r>
   817be:	b378      	cbz	r0, 81820 <__sfvwrite_r+0x158>
   817c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   817c4:	f04f 30ff 	mov.w	r0, #4294967295
   817c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   817cc:	81a3      	strh	r3, [r4, #12]
   817ce:	b003      	add	sp, #12
   817d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   817d4:	4681      	mov	r9, r0
   817d6:	4633      	mov	r3, r6
   817d8:	464e      	mov	r6, r9
   817da:	46a8      	mov	r8, r5
   817dc:	469a      	mov	sl, r3
   817de:	464d      	mov	r5, r9
   817e0:	b356      	cbz	r6, 81838 <__sfvwrite_r+0x170>
   817e2:	2800      	cmp	r0, #0
   817e4:	d032      	beq.n	8184c <__sfvwrite_r+0x184>
   817e6:	45b1      	cmp	r9, r6
   817e8:	46cb      	mov	fp, r9
   817ea:	bf28      	it	cs
   817ec:	46b3      	movcs	fp, r6
   817ee:	6820      	ldr	r0, [r4, #0]
   817f0:	6923      	ldr	r3, [r4, #16]
   817f2:	465f      	mov	r7, fp
   817f4:	4298      	cmp	r0, r3
   817f6:	6962      	ldr	r2, [r4, #20]
   817f8:	d904      	bls.n	81804 <__sfvwrite_r+0x13c>
   817fa:	68a3      	ldr	r3, [r4, #8]
   817fc:	4413      	add	r3, r2
   817fe:	459b      	cmp	fp, r3
   81800:	f300 80a8 	bgt.w	81954 <__sfvwrite_r+0x28c>
   81804:	4593      	cmp	fp, r2
   81806:	db4d      	blt.n	818a4 <__sfvwrite_r+0x1dc>
   81808:	4613      	mov	r3, r2
   8180a:	6a67      	ldr	r7, [r4, #36]	; 0x24
   8180c:	462a      	mov	r2, r5
   8180e:	69e1      	ldr	r1, [r4, #28]
   81810:	9800      	ldr	r0, [sp, #0]
   81812:	47b8      	blx	r7
   81814:	1e07      	subs	r7, r0, #0
   81816:	ddd3      	ble.n	817c0 <__sfvwrite_r+0xf8>
   81818:	ebb9 0907 	subs.w	r9, r9, r7
   8181c:	d0cb      	beq.n	817b6 <__sfvwrite_r+0xee>
   8181e:	2001      	movs	r0, #1
   81820:	f8da 3008 	ldr.w	r3, [sl, #8]
   81824:	443d      	add	r5, r7
   81826:	1bdb      	subs	r3, r3, r7
   81828:	1bf6      	subs	r6, r6, r7
   8182a:	f8ca 3008 	str.w	r3, [sl, #8]
   8182e:	2b00      	cmp	r3, #0
   81830:	f43f af78 	beq.w	81724 <__sfvwrite_r+0x5c>
   81834:	2e00      	cmp	r6, #0
   81836:	d1d4      	bne.n	817e2 <__sfvwrite_r+0x11a>
   81838:	f108 0308 	add.w	r3, r8, #8
   8183c:	f853 6c04 	ldr.w	r6, [r3, #-4]
   81840:	4698      	mov	r8, r3
   81842:	f853 5c08 	ldr.w	r5, [r3, #-8]
   81846:	3308      	adds	r3, #8
   81848:	2e00      	cmp	r6, #0
   8184a:	d0f7      	beq.n	8183c <__sfvwrite_r+0x174>
   8184c:	4632      	mov	r2, r6
   8184e:	210a      	movs	r1, #10
   81850:	4628      	mov	r0, r5
   81852:	f000 fbfd 	bl	82050 <memchr>
   81856:	2800      	cmp	r0, #0
   81858:	f000 80a1 	beq.w	8199e <__sfvwrite_r+0x2d6>
   8185c:	3001      	adds	r0, #1
   8185e:	eba0 0905 	sub.w	r9, r0, r5
   81862:	e7c0      	b.n	817e6 <__sfvwrite_r+0x11e>
   81864:	6820      	ldr	r0, [r4, #0]
   81866:	6923      	ldr	r3, [r4, #16]
   81868:	4298      	cmp	r0, r3
   8186a:	d802      	bhi.n	81872 <__sfvwrite_r+0x1aa>
   8186c:	6963      	ldr	r3, [r4, #20]
   8186e:	429f      	cmp	r7, r3
   81870:	d25d      	bcs.n	8192e <__sfvwrite_r+0x266>
   81872:	45b8      	cmp	r8, r7
   81874:	bf28      	it	cs
   81876:	46b8      	movcs	r8, r7
   81878:	4649      	mov	r1, r9
   8187a:	4642      	mov	r2, r8
   8187c:	f000 fca4 	bl	821c8 <memmove>
   81880:	68a3      	ldr	r3, [r4, #8]
   81882:	6822      	ldr	r2, [r4, #0]
   81884:	eba3 0308 	sub.w	r3, r3, r8
   81888:	4442      	add	r2, r8
   8188a:	60a3      	str	r3, [r4, #8]
   8188c:	6022      	str	r2, [r4, #0]
   8188e:	b10b      	cbz	r3, 81894 <__sfvwrite_r+0x1cc>
   81890:	46c2      	mov	sl, r8
   81892:	e777      	b.n	81784 <__sfvwrite_r+0xbc>
   81894:	4621      	mov	r1, r4
   81896:	9800      	ldr	r0, [sp, #0]
   81898:	f7ff fd32 	bl	81300 <_fflush_r>
   8189c:	2800      	cmp	r0, #0
   8189e:	d18f      	bne.n	817c0 <__sfvwrite_r+0xf8>
   818a0:	46c2      	mov	sl, r8
   818a2:	e76f      	b.n	81784 <__sfvwrite_r+0xbc>
   818a4:	465a      	mov	r2, fp
   818a6:	4629      	mov	r1, r5
   818a8:	f000 fc8e 	bl	821c8 <memmove>
   818ac:	68a2      	ldr	r2, [r4, #8]
   818ae:	6823      	ldr	r3, [r4, #0]
   818b0:	eba2 020b 	sub.w	r2, r2, fp
   818b4:	445b      	add	r3, fp
   818b6:	60a2      	str	r2, [r4, #8]
   818b8:	6023      	str	r3, [r4, #0]
   818ba:	e7ad      	b.n	81818 <__sfvwrite_r+0x150>
   818bc:	46b8      	mov	r8, r7
   818be:	46ba      	mov	sl, r7
   818c0:	46bb      	mov	fp, r7
   818c2:	6820      	ldr	r0, [r4, #0]
   818c4:	e753      	b.n	8176e <__sfvwrite_r+0xa6>
   818c6:	6962      	ldr	r2, [r4, #20]
   818c8:	6820      	ldr	r0, [r4, #0]
   818ca:	6921      	ldr	r1, [r4, #16]
   818cc:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   818d0:	eba0 0a01 	sub.w	sl, r0, r1
   818d4:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   818d8:	f10a 0001 	add.w	r0, sl, #1
   818dc:	ea4f 0868 	mov.w	r8, r8, asr #1
   818e0:	4438      	add	r0, r7
   818e2:	4540      	cmp	r0, r8
   818e4:	4642      	mov	r2, r8
   818e6:	bf84      	itt	hi
   818e8:	4680      	movhi	r8, r0
   818ea:	4642      	movhi	r2, r8
   818ec:	055b      	lsls	r3, r3, #21
   818ee:	d544      	bpl.n	8197a <__sfvwrite_r+0x2b2>
   818f0:	4611      	mov	r1, r2
   818f2:	9800      	ldr	r0, [sp, #0]
   818f4:	f000 f90a 	bl	81b0c <_malloc_r>
   818f8:	4683      	mov	fp, r0
   818fa:	2800      	cmp	r0, #0
   818fc:	d055      	beq.n	819aa <__sfvwrite_r+0x2e2>
   818fe:	4652      	mov	r2, sl
   81900:	6921      	ldr	r1, [r4, #16]
   81902:	f000 fbeb 	bl	820dc <memcpy>
   81906:	89a3      	ldrh	r3, [r4, #12]
   81908:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   8190c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81910:	81a3      	strh	r3, [r4, #12]
   81912:	eb0b 000a 	add.w	r0, fp, sl
   81916:	eba8 030a 	sub.w	r3, r8, sl
   8191a:	f8c4 b010 	str.w	fp, [r4, #16]
   8191e:	f8c4 8014 	str.w	r8, [r4, #20]
   81922:	6020      	str	r0, [r4, #0]
   81924:	60a3      	str	r3, [r4, #8]
   81926:	46b8      	mov	r8, r7
   81928:	46ba      	mov	sl, r7
   8192a:	46bb      	mov	fp, r7
   8192c:	e71f      	b.n	8176e <__sfvwrite_r+0xa6>
   8192e:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   81932:	42ba      	cmp	r2, r7
   81934:	bf28      	it	cs
   81936:	463a      	movcs	r2, r7
   81938:	fb92 f2f3 	sdiv	r2, r2, r3
   8193c:	69e1      	ldr	r1, [r4, #28]
   8193e:	fb03 f302 	mul.w	r3, r3, r2
   81942:	9800      	ldr	r0, [sp, #0]
   81944:	464a      	mov	r2, r9
   81946:	6a66      	ldr	r6, [r4, #36]	; 0x24
   81948:	47b0      	blx	r6
   8194a:	f1b0 0a00 	subs.w	sl, r0, #0
   8194e:	f73f af19 	bgt.w	81784 <__sfvwrite_r+0xbc>
   81952:	e735      	b.n	817c0 <__sfvwrite_r+0xf8>
   81954:	461a      	mov	r2, r3
   81956:	4629      	mov	r1, r5
   81958:	9301      	str	r3, [sp, #4]
   8195a:	f000 fc35 	bl	821c8 <memmove>
   8195e:	6822      	ldr	r2, [r4, #0]
   81960:	9b01      	ldr	r3, [sp, #4]
   81962:	4621      	mov	r1, r4
   81964:	441a      	add	r2, r3
   81966:	6022      	str	r2, [r4, #0]
   81968:	9800      	ldr	r0, [sp, #0]
   8196a:	f7ff fcc9 	bl	81300 <_fflush_r>
   8196e:	9b01      	ldr	r3, [sp, #4]
   81970:	2800      	cmp	r0, #0
   81972:	f47f af25 	bne.w	817c0 <__sfvwrite_r+0xf8>
   81976:	461f      	mov	r7, r3
   81978:	e74e      	b.n	81818 <__sfvwrite_r+0x150>
   8197a:	9800      	ldr	r0, [sp, #0]
   8197c:	f000 fc94 	bl	822a8 <_realloc_r>
   81980:	4683      	mov	fp, r0
   81982:	2800      	cmp	r0, #0
   81984:	d1c5      	bne.n	81912 <__sfvwrite_r+0x24a>
   81986:	9d00      	ldr	r5, [sp, #0]
   81988:	6921      	ldr	r1, [r4, #16]
   8198a:	4628      	mov	r0, r5
   8198c:	f7ff fdb6 	bl	814fc <_free_r>
   81990:	220c      	movs	r2, #12
   81992:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81996:	602a      	str	r2, [r5, #0]
   81998:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   8199c:	e712      	b.n	817c4 <__sfvwrite_r+0xfc>
   8199e:	f106 0901 	add.w	r9, r6, #1
   819a2:	e720      	b.n	817e6 <__sfvwrite_r+0x11e>
   819a4:	f04f 30ff 	mov.w	r0, #4294967295
   819a8:	e6bd      	b.n	81726 <__sfvwrite_r+0x5e>
   819aa:	220c      	movs	r2, #12
   819ac:	9900      	ldr	r1, [sp, #0]
   819ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   819b2:	600a      	str	r2, [r1, #0]
   819b4:	e706      	b.n	817c4 <__sfvwrite_r+0xfc>
   819b6:	bf00      	nop
   819b8:	7ffffc00 	.word	0x7ffffc00

000819bc <_fwalk_reent>:
   819bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   819c0:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   819c4:	d01e      	beq.n	81a04 <_fwalk_reent+0x48>
   819c6:	4688      	mov	r8, r1
   819c8:	4607      	mov	r7, r0
   819ca:	f04f 0900 	mov.w	r9, #0
   819ce:	6875      	ldr	r5, [r6, #4]
   819d0:	68b4      	ldr	r4, [r6, #8]
   819d2:	3d01      	subs	r5, #1
   819d4:	d410      	bmi.n	819f8 <_fwalk_reent+0x3c>
   819d6:	89a3      	ldrh	r3, [r4, #12]
   819d8:	3d01      	subs	r5, #1
   819da:	2b01      	cmp	r3, #1
   819dc:	d908      	bls.n	819f0 <_fwalk_reent+0x34>
   819de:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   819e2:	3301      	adds	r3, #1
   819e4:	d004      	beq.n	819f0 <_fwalk_reent+0x34>
   819e6:	4621      	mov	r1, r4
   819e8:	4638      	mov	r0, r7
   819ea:	47c0      	blx	r8
   819ec:	ea49 0900 	orr.w	r9, r9, r0
   819f0:	1c6b      	adds	r3, r5, #1
   819f2:	f104 0468 	add.w	r4, r4, #104	; 0x68
   819f6:	d1ee      	bne.n	819d6 <_fwalk_reent+0x1a>
   819f8:	6836      	ldr	r6, [r6, #0]
   819fa:	2e00      	cmp	r6, #0
   819fc:	d1e7      	bne.n	819ce <_fwalk_reent+0x12>
   819fe:	4648      	mov	r0, r9
   81a00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81a04:	46b1      	mov	r9, r6
   81a06:	4648      	mov	r0, r9
   81a08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00081a0c <__retarget_lock_init_recursive>:
   81a0c:	4770      	bx	lr
   81a0e:	bf00      	nop

00081a10 <__retarget_lock_close_recursive>:
   81a10:	4770      	bx	lr
   81a12:	bf00      	nop

00081a14 <__retarget_lock_acquire_recursive>:
   81a14:	4770      	bx	lr
   81a16:	bf00      	nop

00081a18 <__retarget_lock_release_recursive>:
   81a18:	4770      	bx	lr
   81a1a:	bf00      	nop

00081a1c <__swhatbuf_r>:
   81a1c:	b570      	push	{r4, r5, r6, lr}
   81a1e:	460c      	mov	r4, r1
   81a20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   81a24:	b090      	sub	sp, #64	; 0x40
   81a26:	2900      	cmp	r1, #0
   81a28:	4615      	mov	r5, r2
   81a2a:	461e      	mov	r6, r3
   81a2c:	db14      	blt.n	81a58 <__swhatbuf_r+0x3c>
   81a2e:	aa01      	add	r2, sp, #4
   81a30:	f000 ff32 	bl	82898 <_fstat_r>
   81a34:	2800      	cmp	r0, #0
   81a36:	db0f      	blt.n	81a58 <__swhatbuf_r+0x3c>
   81a38:	9a02      	ldr	r2, [sp, #8]
   81a3a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81a3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   81a42:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   81a46:	fab2 f282 	clz	r2, r2
   81a4a:	f44f 6000 	mov.w	r0, #2048	; 0x800
   81a4e:	0952      	lsrs	r2, r2, #5
   81a50:	6032      	str	r2, [r6, #0]
   81a52:	602b      	str	r3, [r5, #0]
   81a54:	b010      	add	sp, #64	; 0x40
   81a56:	bd70      	pop	{r4, r5, r6, pc}
   81a58:	2300      	movs	r3, #0
   81a5a:	89a2      	ldrh	r2, [r4, #12]
   81a5c:	6033      	str	r3, [r6, #0]
   81a5e:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   81a62:	d004      	beq.n	81a6e <__swhatbuf_r+0x52>
   81a64:	2240      	movs	r2, #64	; 0x40
   81a66:	4618      	mov	r0, r3
   81a68:	602a      	str	r2, [r5, #0]
   81a6a:	b010      	add	sp, #64	; 0x40
   81a6c:	bd70      	pop	{r4, r5, r6, pc}
   81a6e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81a72:	602b      	str	r3, [r5, #0]
   81a74:	b010      	add	sp, #64	; 0x40
   81a76:	bd70      	pop	{r4, r5, r6, pc}

00081a78 <__smakebuf_r>:
   81a78:	898a      	ldrh	r2, [r1, #12]
   81a7a:	460b      	mov	r3, r1
   81a7c:	0792      	lsls	r2, r2, #30
   81a7e:	d506      	bpl.n	81a8e <__smakebuf_r+0x16>
   81a80:	2101      	movs	r1, #1
   81a82:	f103 0243 	add.w	r2, r3, #67	; 0x43
   81a86:	6159      	str	r1, [r3, #20]
   81a88:	601a      	str	r2, [r3, #0]
   81a8a:	611a      	str	r2, [r3, #16]
   81a8c:	4770      	bx	lr
   81a8e:	b5f0      	push	{r4, r5, r6, r7, lr}
   81a90:	b083      	sub	sp, #12
   81a92:	ab01      	add	r3, sp, #4
   81a94:	466a      	mov	r2, sp
   81a96:	460c      	mov	r4, r1
   81a98:	4606      	mov	r6, r0
   81a9a:	f7ff ffbf 	bl	81a1c <__swhatbuf_r>
   81a9e:	9900      	ldr	r1, [sp, #0]
   81aa0:	4605      	mov	r5, r0
   81aa2:	4630      	mov	r0, r6
   81aa4:	f000 f832 	bl	81b0c <_malloc_r>
   81aa8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81aac:	b1d8      	cbz	r0, 81ae6 <__smakebuf_r+0x6e>
   81aae:	e89d 0006 	ldmia.w	sp, {r1, r2}
   81ab2:	4f15      	ldr	r7, [pc, #84]	; (81b08 <__smakebuf_r+0x90>)
   81ab4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81ab8:	63f7      	str	r7, [r6, #60]	; 0x3c
   81aba:	81a3      	strh	r3, [r4, #12]
   81abc:	6020      	str	r0, [r4, #0]
   81abe:	6120      	str	r0, [r4, #16]
   81ac0:	6161      	str	r1, [r4, #20]
   81ac2:	b91a      	cbnz	r2, 81acc <__smakebuf_r+0x54>
   81ac4:	432b      	orrs	r3, r5
   81ac6:	81a3      	strh	r3, [r4, #12]
   81ac8:	b003      	add	sp, #12
   81aca:	bdf0      	pop	{r4, r5, r6, r7, pc}
   81acc:	4630      	mov	r0, r6
   81ace:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   81ad2:	f000 fef5 	bl	828c0 <_isatty_r>
   81ad6:	b1a0      	cbz	r0, 81b02 <__smakebuf_r+0x8a>
   81ad8:	89a3      	ldrh	r3, [r4, #12]
   81ada:	f023 0303 	bic.w	r3, r3, #3
   81ade:	f043 0301 	orr.w	r3, r3, #1
   81ae2:	b21b      	sxth	r3, r3
   81ae4:	e7ee      	b.n	81ac4 <__smakebuf_r+0x4c>
   81ae6:	059a      	lsls	r2, r3, #22
   81ae8:	d4ee      	bmi.n	81ac8 <__smakebuf_r+0x50>
   81aea:	2101      	movs	r1, #1
   81aec:	f023 0303 	bic.w	r3, r3, #3
   81af0:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81af4:	f043 0302 	orr.w	r3, r3, #2
   81af8:	81a3      	strh	r3, [r4, #12]
   81afa:	6161      	str	r1, [r4, #20]
   81afc:	6022      	str	r2, [r4, #0]
   81afe:	6122      	str	r2, [r4, #16]
   81b00:	e7e2      	b.n	81ac8 <__smakebuf_r+0x50>
   81b02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81b06:	e7dd      	b.n	81ac4 <__smakebuf_r+0x4c>
   81b08:	00081355 	.word	0x00081355

00081b0c <_malloc_r>:
   81b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81b10:	f101 060b 	add.w	r6, r1, #11
   81b14:	2e16      	cmp	r6, #22
   81b16:	b083      	sub	sp, #12
   81b18:	4605      	mov	r5, r0
   81b1a:	f240 809e 	bls.w	81c5a <_malloc_r+0x14e>
   81b1e:	f036 0607 	bics.w	r6, r6, #7
   81b22:	f100 80bd 	bmi.w	81ca0 <_malloc_r+0x194>
   81b26:	42b1      	cmp	r1, r6
   81b28:	f200 80ba 	bhi.w	81ca0 <_malloc_r+0x194>
   81b2c:	f000 fbb0 	bl	82290 <__malloc_lock>
   81b30:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   81b34:	f0c0 8285 	bcc.w	82042 <_malloc_r+0x536>
   81b38:	0a73      	lsrs	r3, r6, #9
   81b3a:	f000 80b8 	beq.w	81cae <_malloc_r+0x1a2>
   81b3e:	2b04      	cmp	r3, #4
   81b40:	f200 816c 	bhi.w	81e1c <_malloc_r+0x310>
   81b44:	09b3      	lsrs	r3, r6, #6
   81b46:	f103 0039 	add.w	r0, r3, #57	; 0x39
   81b4a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   81b4e:	00c1      	lsls	r1, r0, #3
   81b50:	4fb8      	ldr	r7, [pc, #736]	; (81e34 <_malloc_r+0x328>)
   81b52:	4439      	add	r1, r7
   81b54:	684c      	ldr	r4, [r1, #4]
   81b56:	3908      	subs	r1, #8
   81b58:	42a1      	cmp	r1, r4
   81b5a:	d106      	bne.n	81b6a <_malloc_r+0x5e>
   81b5c:	e00c      	b.n	81b78 <_malloc_r+0x6c>
   81b5e:	2a00      	cmp	r2, #0
   81b60:	f280 80ab 	bge.w	81cba <_malloc_r+0x1ae>
   81b64:	68e4      	ldr	r4, [r4, #12]
   81b66:	42a1      	cmp	r1, r4
   81b68:	d006      	beq.n	81b78 <_malloc_r+0x6c>
   81b6a:	6863      	ldr	r3, [r4, #4]
   81b6c:	f023 0303 	bic.w	r3, r3, #3
   81b70:	1b9a      	subs	r2, r3, r6
   81b72:	2a0f      	cmp	r2, #15
   81b74:	ddf3      	ble.n	81b5e <_malloc_r+0x52>
   81b76:	4670      	mov	r0, lr
   81b78:	693c      	ldr	r4, [r7, #16]
   81b7a:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 81e48 <_malloc_r+0x33c>
   81b7e:	4574      	cmp	r4, lr
   81b80:	f000 819e 	beq.w	81ec0 <_malloc_r+0x3b4>
   81b84:	6863      	ldr	r3, [r4, #4]
   81b86:	f023 0303 	bic.w	r3, r3, #3
   81b8a:	1b9a      	subs	r2, r3, r6
   81b8c:	2a0f      	cmp	r2, #15
   81b8e:	f300 8183 	bgt.w	81e98 <_malloc_r+0x38c>
   81b92:	2a00      	cmp	r2, #0
   81b94:	f8c7 e014 	str.w	lr, [r7, #20]
   81b98:	f8c7 e010 	str.w	lr, [r7, #16]
   81b9c:	f280 8091 	bge.w	81cc2 <_malloc_r+0x1b6>
   81ba0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   81ba4:	f080 8154 	bcs.w	81e50 <_malloc_r+0x344>
   81ba8:	2201      	movs	r2, #1
   81baa:	08db      	lsrs	r3, r3, #3
   81bac:	6879      	ldr	r1, [r7, #4]
   81bae:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   81bb2:	4413      	add	r3, r2
   81bb4:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   81bb8:	fa02 f20c 	lsl.w	r2, r2, ip
   81bbc:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   81bc0:	430a      	orrs	r2, r1
   81bc2:	f1ac 0108 	sub.w	r1, ip, #8
   81bc6:	60e1      	str	r1, [r4, #12]
   81bc8:	f8c4 8008 	str.w	r8, [r4, #8]
   81bcc:	607a      	str	r2, [r7, #4]
   81bce:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   81bd2:	f8c8 400c 	str.w	r4, [r8, #12]
   81bd6:	2401      	movs	r4, #1
   81bd8:	1083      	asrs	r3, r0, #2
   81bda:	409c      	lsls	r4, r3
   81bdc:	4294      	cmp	r4, r2
   81bde:	d87d      	bhi.n	81cdc <_malloc_r+0x1d0>
   81be0:	4214      	tst	r4, r2
   81be2:	d106      	bne.n	81bf2 <_malloc_r+0xe6>
   81be4:	f020 0003 	bic.w	r0, r0, #3
   81be8:	0064      	lsls	r4, r4, #1
   81bea:	4214      	tst	r4, r2
   81bec:	f100 0004 	add.w	r0, r0, #4
   81bf0:	d0fa      	beq.n	81be8 <_malloc_r+0xdc>
   81bf2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   81bf6:	46cc      	mov	ip, r9
   81bf8:	4680      	mov	r8, r0
   81bfa:	f8dc 300c 	ldr.w	r3, [ip, #12]
   81bfe:	459c      	cmp	ip, r3
   81c00:	d107      	bne.n	81c12 <_malloc_r+0x106>
   81c02:	e15f      	b.n	81ec4 <_malloc_r+0x3b8>
   81c04:	2a00      	cmp	r2, #0
   81c06:	f280 816d 	bge.w	81ee4 <_malloc_r+0x3d8>
   81c0a:	68db      	ldr	r3, [r3, #12]
   81c0c:	459c      	cmp	ip, r3
   81c0e:	f000 8159 	beq.w	81ec4 <_malloc_r+0x3b8>
   81c12:	6859      	ldr	r1, [r3, #4]
   81c14:	f021 0103 	bic.w	r1, r1, #3
   81c18:	1b8a      	subs	r2, r1, r6
   81c1a:	2a0f      	cmp	r2, #15
   81c1c:	ddf2      	ble.n	81c04 <_malloc_r+0xf8>
   81c1e:	68dc      	ldr	r4, [r3, #12]
   81c20:	f8d3 c008 	ldr.w	ip, [r3, #8]
   81c24:	f046 0801 	orr.w	r8, r6, #1
   81c28:	4628      	mov	r0, r5
   81c2a:	441e      	add	r6, r3
   81c2c:	f042 0501 	orr.w	r5, r2, #1
   81c30:	f8c3 8004 	str.w	r8, [r3, #4]
   81c34:	f8cc 400c 	str.w	r4, [ip, #12]
   81c38:	f8c4 c008 	str.w	ip, [r4, #8]
   81c3c:	617e      	str	r6, [r7, #20]
   81c3e:	613e      	str	r6, [r7, #16]
   81c40:	f8c6 e00c 	str.w	lr, [r6, #12]
   81c44:	f8c6 e008 	str.w	lr, [r6, #8]
   81c48:	6075      	str	r5, [r6, #4]
   81c4a:	505a      	str	r2, [r3, r1]
   81c4c:	9300      	str	r3, [sp, #0]
   81c4e:	f000 fb25 	bl	8229c <__malloc_unlock>
   81c52:	9b00      	ldr	r3, [sp, #0]
   81c54:	f103 0408 	add.w	r4, r3, #8
   81c58:	e01e      	b.n	81c98 <_malloc_r+0x18c>
   81c5a:	2910      	cmp	r1, #16
   81c5c:	d820      	bhi.n	81ca0 <_malloc_r+0x194>
   81c5e:	f000 fb17 	bl	82290 <__malloc_lock>
   81c62:	2610      	movs	r6, #16
   81c64:	2318      	movs	r3, #24
   81c66:	2002      	movs	r0, #2
   81c68:	4f72      	ldr	r7, [pc, #456]	; (81e34 <_malloc_r+0x328>)
   81c6a:	443b      	add	r3, r7
   81c6c:	685c      	ldr	r4, [r3, #4]
   81c6e:	f1a3 0208 	sub.w	r2, r3, #8
   81c72:	4294      	cmp	r4, r2
   81c74:	f000 812f 	beq.w	81ed6 <_malloc_r+0x3ca>
   81c78:	6863      	ldr	r3, [r4, #4]
   81c7a:	68e1      	ldr	r1, [r4, #12]
   81c7c:	f023 0303 	bic.w	r3, r3, #3
   81c80:	4423      	add	r3, r4
   81c82:	685a      	ldr	r2, [r3, #4]
   81c84:	68a6      	ldr	r6, [r4, #8]
   81c86:	f042 0201 	orr.w	r2, r2, #1
   81c8a:	60f1      	str	r1, [r6, #12]
   81c8c:	4628      	mov	r0, r5
   81c8e:	608e      	str	r6, [r1, #8]
   81c90:	605a      	str	r2, [r3, #4]
   81c92:	f000 fb03 	bl	8229c <__malloc_unlock>
   81c96:	3408      	adds	r4, #8
   81c98:	4620      	mov	r0, r4
   81c9a:	b003      	add	sp, #12
   81c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81ca0:	2400      	movs	r4, #0
   81ca2:	230c      	movs	r3, #12
   81ca4:	4620      	mov	r0, r4
   81ca6:	602b      	str	r3, [r5, #0]
   81ca8:	b003      	add	sp, #12
   81caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81cae:	2040      	movs	r0, #64	; 0x40
   81cb0:	f44f 7100 	mov.w	r1, #512	; 0x200
   81cb4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   81cb8:	e74a      	b.n	81b50 <_malloc_r+0x44>
   81cba:	4423      	add	r3, r4
   81cbc:	685a      	ldr	r2, [r3, #4]
   81cbe:	68e1      	ldr	r1, [r4, #12]
   81cc0:	e7e0      	b.n	81c84 <_malloc_r+0x178>
   81cc2:	4423      	add	r3, r4
   81cc4:	685a      	ldr	r2, [r3, #4]
   81cc6:	4628      	mov	r0, r5
   81cc8:	f042 0201 	orr.w	r2, r2, #1
   81ccc:	605a      	str	r2, [r3, #4]
   81cce:	3408      	adds	r4, #8
   81cd0:	f000 fae4 	bl	8229c <__malloc_unlock>
   81cd4:	4620      	mov	r0, r4
   81cd6:	b003      	add	sp, #12
   81cd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81cdc:	68bc      	ldr	r4, [r7, #8]
   81cde:	6863      	ldr	r3, [r4, #4]
   81ce0:	f023 0803 	bic.w	r8, r3, #3
   81ce4:	45b0      	cmp	r8, r6
   81ce6:	d304      	bcc.n	81cf2 <_malloc_r+0x1e6>
   81ce8:	eba8 0306 	sub.w	r3, r8, r6
   81cec:	2b0f      	cmp	r3, #15
   81cee:	f300 8085 	bgt.w	81dfc <_malloc_r+0x2f0>
   81cf2:	f8df 9158 	ldr.w	r9, [pc, #344]	; 81e4c <_malloc_r+0x340>
   81cf6:	4b50      	ldr	r3, [pc, #320]	; (81e38 <_malloc_r+0x32c>)
   81cf8:	f8d9 2000 	ldr.w	r2, [r9]
   81cfc:	681b      	ldr	r3, [r3, #0]
   81cfe:	3201      	adds	r2, #1
   81d00:	4433      	add	r3, r6
   81d02:	eb04 0a08 	add.w	sl, r4, r8
   81d06:	f000 8154 	beq.w	81fb2 <_malloc_r+0x4a6>
   81d0a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   81d0e:	330f      	adds	r3, #15
   81d10:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   81d14:	f02b 0b0f 	bic.w	fp, fp, #15
   81d18:	4659      	mov	r1, fp
   81d1a:	4628      	mov	r0, r5
   81d1c:	f000 fc7a 	bl	82614 <_sbrk_r>
   81d20:	1c41      	adds	r1, r0, #1
   81d22:	4602      	mov	r2, r0
   81d24:	f000 80fb 	beq.w	81f1e <_malloc_r+0x412>
   81d28:	4582      	cmp	sl, r0
   81d2a:	f200 80f6 	bhi.w	81f1a <_malloc_r+0x40e>
   81d2e:	4b43      	ldr	r3, [pc, #268]	; (81e3c <_malloc_r+0x330>)
   81d30:	6819      	ldr	r1, [r3, #0]
   81d32:	4459      	add	r1, fp
   81d34:	6019      	str	r1, [r3, #0]
   81d36:	f000 814c 	beq.w	81fd2 <_malloc_r+0x4c6>
   81d3a:	f8d9 0000 	ldr.w	r0, [r9]
   81d3e:	3001      	adds	r0, #1
   81d40:	bf1b      	ittet	ne
   81d42:	eba2 0a0a 	subne.w	sl, r2, sl
   81d46:	4451      	addne	r1, sl
   81d48:	f8c9 2000 	streq.w	r2, [r9]
   81d4c:	6019      	strne	r1, [r3, #0]
   81d4e:	f012 0107 	ands.w	r1, r2, #7
   81d52:	f000 8114 	beq.w	81f7e <_malloc_r+0x472>
   81d56:	f1c1 0008 	rsb	r0, r1, #8
   81d5a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   81d5e:	4402      	add	r2, r0
   81d60:	3108      	adds	r1, #8
   81d62:	eb02 090b 	add.w	r9, r2, fp
   81d66:	f3c9 090b 	ubfx	r9, r9, #0, #12
   81d6a:	eba1 0909 	sub.w	r9, r1, r9
   81d6e:	4649      	mov	r1, r9
   81d70:	4628      	mov	r0, r5
   81d72:	9301      	str	r3, [sp, #4]
   81d74:	9200      	str	r2, [sp, #0]
   81d76:	f000 fc4d 	bl	82614 <_sbrk_r>
   81d7a:	1c43      	adds	r3, r0, #1
   81d7c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   81d80:	f000 8142 	beq.w	82008 <_malloc_r+0x4fc>
   81d84:	1a80      	subs	r0, r0, r2
   81d86:	4448      	add	r0, r9
   81d88:	f040 0001 	orr.w	r0, r0, #1
   81d8c:	6819      	ldr	r1, [r3, #0]
   81d8e:	42bc      	cmp	r4, r7
   81d90:	4449      	add	r1, r9
   81d92:	60ba      	str	r2, [r7, #8]
   81d94:	6019      	str	r1, [r3, #0]
   81d96:	6050      	str	r0, [r2, #4]
   81d98:	d017      	beq.n	81dca <_malloc_r+0x2be>
   81d9a:	f1b8 0f0f 	cmp.w	r8, #15
   81d9e:	f240 80fa 	bls.w	81f96 <_malloc_r+0x48a>
   81da2:	f04f 0c05 	mov.w	ip, #5
   81da6:	6862      	ldr	r2, [r4, #4]
   81da8:	f1a8 000c 	sub.w	r0, r8, #12
   81dac:	f020 0007 	bic.w	r0, r0, #7
   81db0:	f002 0201 	and.w	r2, r2, #1
   81db4:	eb04 0e00 	add.w	lr, r4, r0
   81db8:	4302      	orrs	r2, r0
   81dba:	280f      	cmp	r0, #15
   81dbc:	6062      	str	r2, [r4, #4]
   81dbe:	f8ce c004 	str.w	ip, [lr, #4]
   81dc2:	f8ce c008 	str.w	ip, [lr, #8]
   81dc6:	f200 8116 	bhi.w	81ff6 <_malloc_r+0x4ea>
   81dca:	4b1d      	ldr	r3, [pc, #116]	; (81e40 <_malloc_r+0x334>)
   81dcc:	68bc      	ldr	r4, [r7, #8]
   81dce:	681a      	ldr	r2, [r3, #0]
   81dd0:	4291      	cmp	r1, r2
   81dd2:	bf88      	it	hi
   81dd4:	6019      	strhi	r1, [r3, #0]
   81dd6:	4b1b      	ldr	r3, [pc, #108]	; (81e44 <_malloc_r+0x338>)
   81dd8:	681a      	ldr	r2, [r3, #0]
   81dda:	4291      	cmp	r1, r2
   81ddc:	6862      	ldr	r2, [r4, #4]
   81dde:	bf88      	it	hi
   81de0:	6019      	strhi	r1, [r3, #0]
   81de2:	f022 0203 	bic.w	r2, r2, #3
   81de6:	4296      	cmp	r6, r2
   81de8:	eba2 0306 	sub.w	r3, r2, r6
   81dec:	d801      	bhi.n	81df2 <_malloc_r+0x2e6>
   81dee:	2b0f      	cmp	r3, #15
   81df0:	dc04      	bgt.n	81dfc <_malloc_r+0x2f0>
   81df2:	4628      	mov	r0, r5
   81df4:	f000 fa52 	bl	8229c <__malloc_unlock>
   81df8:	2400      	movs	r4, #0
   81dfa:	e74d      	b.n	81c98 <_malloc_r+0x18c>
   81dfc:	f046 0201 	orr.w	r2, r6, #1
   81e00:	f043 0301 	orr.w	r3, r3, #1
   81e04:	4426      	add	r6, r4
   81e06:	6062      	str	r2, [r4, #4]
   81e08:	4628      	mov	r0, r5
   81e0a:	60be      	str	r6, [r7, #8]
   81e0c:	3408      	adds	r4, #8
   81e0e:	6073      	str	r3, [r6, #4]
   81e10:	f000 fa44 	bl	8229c <__malloc_unlock>
   81e14:	4620      	mov	r0, r4
   81e16:	b003      	add	sp, #12
   81e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81e1c:	2b14      	cmp	r3, #20
   81e1e:	d970      	bls.n	81f02 <_malloc_r+0x3f6>
   81e20:	2b54      	cmp	r3, #84	; 0x54
   81e22:	f200 80a2 	bhi.w	81f6a <_malloc_r+0x45e>
   81e26:	0b33      	lsrs	r3, r6, #12
   81e28:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   81e2c:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   81e30:	00c1      	lsls	r1, r0, #3
   81e32:	e68d      	b.n	81b50 <_malloc_r+0x44>
   81e34:	20000434 	.word	0x20000434
   81e38:	20000cb4 	.word	0x20000cb4
   81e3c:	20000c84 	.word	0x20000c84
   81e40:	20000cac 	.word	0x20000cac
   81e44:	20000cb0 	.word	0x20000cb0
   81e48:	2000043c 	.word	0x2000043c
   81e4c:	2000083c 	.word	0x2000083c
   81e50:	0a5a      	lsrs	r2, r3, #9
   81e52:	2a04      	cmp	r2, #4
   81e54:	d95b      	bls.n	81f0e <_malloc_r+0x402>
   81e56:	2a14      	cmp	r2, #20
   81e58:	f200 80ae 	bhi.w	81fb8 <_malloc_r+0x4ac>
   81e5c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   81e60:	00c9      	lsls	r1, r1, #3
   81e62:	325b      	adds	r2, #91	; 0x5b
   81e64:	eb07 0c01 	add.w	ip, r7, r1
   81e68:	5879      	ldr	r1, [r7, r1]
   81e6a:	f1ac 0c08 	sub.w	ip, ip, #8
   81e6e:	458c      	cmp	ip, r1
   81e70:	f000 8088 	beq.w	81f84 <_malloc_r+0x478>
   81e74:	684a      	ldr	r2, [r1, #4]
   81e76:	f022 0203 	bic.w	r2, r2, #3
   81e7a:	4293      	cmp	r3, r2
   81e7c:	d273      	bcs.n	81f66 <_malloc_r+0x45a>
   81e7e:	6889      	ldr	r1, [r1, #8]
   81e80:	458c      	cmp	ip, r1
   81e82:	d1f7      	bne.n	81e74 <_malloc_r+0x368>
   81e84:	f8dc 300c 	ldr.w	r3, [ip, #12]
   81e88:	687a      	ldr	r2, [r7, #4]
   81e8a:	60e3      	str	r3, [r4, #12]
   81e8c:	f8c4 c008 	str.w	ip, [r4, #8]
   81e90:	609c      	str	r4, [r3, #8]
   81e92:	f8cc 400c 	str.w	r4, [ip, #12]
   81e96:	e69e      	b.n	81bd6 <_malloc_r+0xca>
   81e98:	f046 0c01 	orr.w	ip, r6, #1
   81e9c:	f042 0101 	orr.w	r1, r2, #1
   81ea0:	4426      	add	r6, r4
   81ea2:	f8c4 c004 	str.w	ip, [r4, #4]
   81ea6:	4628      	mov	r0, r5
   81ea8:	617e      	str	r6, [r7, #20]
   81eaa:	613e      	str	r6, [r7, #16]
   81eac:	f8c6 e00c 	str.w	lr, [r6, #12]
   81eb0:	f8c6 e008 	str.w	lr, [r6, #8]
   81eb4:	6071      	str	r1, [r6, #4]
   81eb6:	50e2      	str	r2, [r4, r3]
   81eb8:	f000 f9f0 	bl	8229c <__malloc_unlock>
   81ebc:	3408      	adds	r4, #8
   81ebe:	e6eb      	b.n	81c98 <_malloc_r+0x18c>
   81ec0:	687a      	ldr	r2, [r7, #4]
   81ec2:	e688      	b.n	81bd6 <_malloc_r+0xca>
   81ec4:	f108 0801 	add.w	r8, r8, #1
   81ec8:	f018 0f03 	tst.w	r8, #3
   81ecc:	f10c 0c08 	add.w	ip, ip, #8
   81ed0:	f47f ae93 	bne.w	81bfa <_malloc_r+0xee>
   81ed4:	e02d      	b.n	81f32 <_malloc_r+0x426>
   81ed6:	68dc      	ldr	r4, [r3, #12]
   81ed8:	42a3      	cmp	r3, r4
   81eda:	bf08      	it	eq
   81edc:	3002      	addeq	r0, #2
   81ede:	f43f ae4b 	beq.w	81b78 <_malloc_r+0x6c>
   81ee2:	e6c9      	b.n	81c78 <_malloc_r+0x16c>
   81ee4:	461c      	mov	r4, r3
   81ee6:	4419      	add	r1, r3
   81ee8:	684a      	ldr	r2, [r1, #4]
   81eea:	68db      	ldr	r3, [r3, #12]
   81eec:	f854 6f08 	ldr.w	r6, [r4, #8]!
   81ef0:	f042 0201 	orr.w	r2, r2, #1
   81ef4:	604a      	str	r2, [r1, #4]
   81ef6:	4628      	mov	r0, r5
   81ef8:	60f3      	str	r3, [r6, #12]
   81efa:	609e      	str	r6, [r3, #8]
   81efc:	f000 f9ce 	bl	8229c <__malloc_unlock>
   81f00:	e6ca      	b.n	81c98 <_malloc_r+0x18c>
   81f02:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   81f06:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   81f0a:	00c1      	lsls	r1, r0, #3
   81f0c:	e620      	b.n	81b50 <_malloc_r+0x44>
   81f0e:	099a      	lsrs	r2, r3, #6
   81f10:	f102 0139 	add.w	r1, r2, #57	; 0x39
   81f14:	00c9      	lsls	r1, r1, #3
   81f16:	3238      	adds	r2, #56	; 0x38
   81f18:	e7a4      	b.n	81e64 <_malloc_r+0x358>
   81f1a:	42bc      	cmp	r4, r7
   81f1c:	d054      	beq.n	81fc8 <_malloc_r+0x4bc>
   81f1e:	68bc      	ldr	r4, [r7, #8]
   81f20:	6862      	ldr	r2, [r4, #4]
   81f22:	f022 0203 	bic.w	r2, r2, #3
   81f26:	e75e      	b.n	81de6 <_malloc_r+0x2da>
   81f28:	f859 3908 	ldr.w	r3, [r9], #-8
   81f2c:	4599      	cmp	r9, r3
   81f2e:	f040 8086 	bne.w	8203e <_malloc_r+0x532>
   81f32:	f010 0f03 	tst.w	r0, #3
   81f36:	f100 30ff 	add.w	r0, r0, #4294967295
   81f3a:	d1f5      	bne.n	81f28 <_malloc_r+0x41c>
   81f3c:	687b      	ldr	r3, [r7, #4]
   81f3e:	ea23 0304 	bic.w	r3, r3, r4
   81f42:	607b      	str	r3, [r7, #4]
   81f44:	0064      	lsls	r4, r4, #1
   81f46:	429c      	cmp	r4, r3
   81f48:	f63f aec8 	bhi.w	81cdc <_malloc_r+0x1d0>
   81f4c:	2c00      	cmp	r4, #0
   81f4e:	f43f aec5 	beq.w	81cdc <_malloc_r+0x1d0>
   81f52:	421c      	tst	r4, r3
   81f54:	4640      	mov	r0, r8
   81f56:	f47f ae4c 	bne.w	81bf2 <_malloc_r+0xe6>
   81f5a:	0064      	lsls	r4, r4, #1
   81f5c:	421c      	tst	r4, r3
   81f5e:	f100 0004 	add.w	r0, r0, #4
   81f62:	d0fa      	beq.n	81f5a <_malloc_r+0x44e>
   81f64:	e645      	b.n	81bf2 <_malloc_r+0xe6>
   81f66:	468c      	mov	ip, r1
   81f68:	e78c      	b.n	81e84 <_malloc_r+0x378>
   81f6a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   81f6e:	d815      	bhi.n	81f9c <_malloc_r+0x490>
   81f70:	0bf3      	lsrs	r3, r6, #15
   81f72:	f103 0078 	add.w	r0, r3, #120	; 0x78
   81f76:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   81f7a:	00c1      	lsls	r1, r0, #3
   81f7c:	e5e8      	b.n	81b50 <_malloc_r+0x44>
   81f7e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81f82:	e6ee      	b.n	81d62 <_malloc_r+0x256>
   81f84:	2101      	movs	r1, #1
   81f86:	687b      	ldr	r3, [r7, #4]
   81f88:	1092      	asrs	r2, r2, #2
   81f8a:	fa01 f202 	lsl.w	r2, r1, r2
   81f8e:	431a      	orrs	r2, r3
   81f90:	607a      	str	r2, [r7, #4]
   81f92:	4663      	mov	r3, ip
   81f94:	e779      	b.n	81e8a <_malloc_r+0x37e>
   81f96:	2301      	movs	r3, #1
   81f98:	6053      	str	r3, [r2, #4]
   81f9a:	e72a      	b.n	81df2 <_malloc_r+0x2e6>
   81f9c:	f240 5254 	movw	r2, #1364	; 0x554
   81fa0:	4293      	cmp	r3, r2
   81fa2:	d822      	bhi.n	81fea <_malloc_r+0x4de>
   81fa4:	0cb3      	lsrs	r3, r6, #18
   81fa6:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   81faa:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   81fae:	00c1      	lsls	r1, r0, #3
   81fb0:	e5ce      	b.n	81b50 <_malloc_r+0x44>
   81fb2:	f103 0b10 	add.w	fp, r3, #16
   81fb6:	e6af      	b.n	81d18 <_malloc_r+0x20c>
   81fb8:	2a54      	cmp	r2, #84	; 0x54
   81fba:	d829      	bhi.n	82010 <_malloc_r+0x504>
   81fbc:	0b1a      	lsrs	r2, r3, #12
   81fbe:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   81fc2:	00c9      	lsls	r1, r1, #3
   81fc4:	326e      	adds	r2, #110	; 0x6e
   81fc6:	e74d      	b.n	81e64 <_malloc_r+0x358>
   81fc8:	4b20      	ldr	r3, [pc, #128]	; (8204c <_malloc_r+0x540>)
   81fca:	6819      	ldr	r1, [r3, #0]
   81fcc:	4459      	add	r1, fp
   81fce:	6019      	str	r1, [r3, #0]
   81fd0:	e6b3      	b.n	81d3a <_malloc_r+0x22e>
   81fd2:	f3ca 000b 	ubfx	r0, sl, #0, #12
   81fd6:	2800      	cmp	r0, #0
   81fd8:	f47f aeaf 	bne.w	81d3a <_malloc_r+0x22e>
   81fdc:	eb08 030b 	add.w	r3, r8, fp
   81fe0:	68ba      	ldr	r2, [r7, #8]
   81fe2:	f043 0301 	orr.w	r3, r3, #1
   81fe6:	6053      	str	r3, [r2, #4]
   81fe8:	e6ef      	b.n	81dca <_malloc_r+0x2be>
   81fea:	207f      	movs	r0, #127	; 0x7f
   81fec:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   81ff0:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   81ff4:	e5ac      	b.n	81b50 <_malloc_r+0x44>
   81ff6:	f104 0108 	add.w	r1, r4, #8
   81ffa:	4628      	mov	r0, r5
   81ffc:	9300      	str	r3, [sp, #0]
   81ffe:	f7ff fa7d 	bl	814fc <_free_r>
   82002:	9b00      	ldr	r3, [sp, #0]
   82004:	6819      	ldr	r1, [r3, #0]
   82006:	e6e0      	b.n	81dca <_malloc_r+0x2be>
   82008:	2001      	movs	r0, #1
   8200a:	f04f 0900 	mov.w	r9, #0
   8200e:	e6bd      	b.n	81d8c <_malloc_r+0x280>
   82010:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82014:	d805      	bhi.n	82022 <_malloc_r+0x516>
   82016:	0bda      	lsrs	r2, r3, #15
   82018:	f102 0178 	add.w	r1, r2, #120	; 0x78
   8201c:	00c9      	lsls	r1, r1, #3
   8201e:	3277      	adds	r2, #119	; 0x77
   82020:	e720      	b.n	81e64 <_malloc_r+0x358>
   82022:	f240 5154 	movw	r1, #1364	; 0x554
   82026:	428a      	cmp	r2, r1
   82028:	d805      	bhi.n	82036 <_malloc_r+0x52a>
   8202a:	0c9a      	lsrs	r2, r3, #18
   8202c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   82030:	00c9      	lsls	r1, r1, #3
   82032:	327c      	adds	r2, #124	; 0x7c
   82034:	e716      	b.n	81e64 <_malloc_r+0x358>
   82036:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8203a:	227e      	movs	r2, #126	; 0x7e
   8203c:	e712      	b.n	81e64 <_malloc_r+0x358>
   8203e:	687b      	ldr	r3, [r7, #4]
   82040:	e780      	b.n	81f44 <_malloc_r+0x438>
   82042:	08f0      	lsrs	r0, r6, #3
   82044:	f106 0308 	add.w	r3, r6, #8
   82048:	e60e      	b.n	81c68 <_malloc_r+0x15c>
   8204a:	bf00      	nop
   8204c:	20000c84 	.word	0x20000c84

00082050 <memchr>:
   82050:	0783      	lsls	r3, r0, #30
   82052:	b470      	push	{r4, r5, r6}
   82054:	b2cd      	uxtb	r5, r1
   82056:	d03d      	beq.n	820d4 <memchr+0x84>
   82058:	1e54      	subs	r4, r2, #1
   8205a:	b30a      	cbz	r2, 820a0 <memchr+0x50>
   8205c:	7803      	ldrb	r3, [r0, #0]
   8205e:	42ab      	cmp	r3, r5
   82060:	d01f      	beq.n	820a2 <memchr+0x52>
   82062:	1c43      	adds	r3, r0, #1
   82064:	e005      	b.n	82072 <memchr+0x22>
   82066:	f114 34ff 	adds.w	r4, r4, #4294967295
   8206a:	d319      	bcc.n	820a0 <memchr+0x50>
   8206c:	7802      	ldrb	r2, [r0, #0]
   8206e:	42aa      	cmp	r2, r5
   82070:	d017      	beq.n	820a2 <memchr+0x52>
   82072:	f013 0f03 	tst.w	r3, #3
   82076:	4618      	mov	r0, r3
   82078:	f103 0301 	add.w	r3, r3, #1
   8207c:	d1f3      	bne.n	82066 <memchr+0x16>
   8207e:	2c03      	cmp	r4, #3
   82080:	d811      	bhi.n	820a6 <memchr+0x56>
   82082:	b34c      	cbz	r4, 820d8 <memchr+0x88>
   82084:	7803      	ldrb	r3, [r0, #0]
   82086:	42ab      	cmp	r3, r5
   82088:	d00b      	beq.n	820a2 <memchr+0x52>
   8208a:	4404      	add	r4, r0
   8208c:	1c43      	adds	r3, r0, #1
   8208e:	e002      	b.n	82096 <memchr+0x46>
   82090:	7802      	ldrb	r2, [r0, #0]
   82092:	42aa      	cmp	r2, r5
   82094:	d005      	beq.n	820a2 <memchr+0x52>
   82096:	429c      	cmp	r4, r3
   82098:	4618      	mov	r0, r3
   8209a:	f103 0301 	add.w	r3, r3, #1
   8209e:	d1f7      	bne.n	82090 <memchr+0x40>
   820a0:	2000      	movs	r0, #0
   820a2:	bc70      	pop	{r4, r5, r6}
   820a4:	4770      	bx	lr
   820a6:	0209      	lsls	r1, r1, #8
   820a8:	b289      	uxth	r1, r1
   820aa:	4329      	orrs	r1, r5
   820ac:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   820b0:	6803      	ldr	r3, [r0, #0]
   820b2:	4606      	mov	r6, r0
   820b4:	404b      	eors	r3, r1
   820b6:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   820ba:	ea22 0303 	bic.w	r3, r2, r3
   820be:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   820c2:	f100 0004 	add.w	r0, r0, #4
   820c6:	d103      	bne.n	820d0 <memchr+0x80>
   820c8:	3c04      	subs	r4, #4
   820ca:	2c03      	cmp	r4, #3
   820cc:	d8f0      	bhi.n	820b0 <memchr+0x60>
   820ce:	e7d8      	b.n	82082 <memchr+0x32>
   820d0:	4630      	mov	r0, r6
   820d2:	e7d7      	b.n	82084 <memchr+0x34>
   820d4:	4614      	mov	r4, r2
   820d6:	e7d2      	b.n	8207e <memchr+0x2e>
   820d8:	4620      	mov	r0, r4
   820da:	e7e2      	b.n	820a2 <memchr+0x52>

000820dc <memcpy>:
   820dc:	4684      	mov	ip, r0
   820de:	ea41 0300 	orr.w	r3, r1, r0
   820e2:	f013 0303 	ands.w	r3, r3, #3
   820e6:	d149      	bne.n	8217c <memcpy+0xa0>
   820e8:	3a40      	subs	r2, #64	; 0x40
   820ea:	d323      	bcc.n	82134 <memcpy+0x58>
   820ec:	680b      	ldr	r3, [r1, #0]
   820ee:	6003      	str	r3, [r0, #0]
   820f0:	684b      	ldr	r3, [r1, #4]
   820f2:	6043      	str	r3, [r0, #4]
   820f4:	688b      	ldr	r3, [r1, #8]
   820f6:	6083      	str	r3, [r0, #8]
   820f8:	68cb      	ldr	r3, [r1, #12]
   820fa:	60c3      	str	r3, [r0, #12]
   820fc:	690b      	ldr	r3, [r1, #16]
   820fe:	6103      	str	r3, [r0, #16]
   82100:	694b      	ldr	r3, [r1, #20]
   82102:	6143      	str	r3, [r0, #20]
   82104:	698b      	ldr	r3, [r1, #24]
   82106:	6183      	str	r3, [r0, #24]
   82108:	69cb      	ldr	r3, [r1, #28]
   8210a:	61c3      	str	r3, [r0, #28]
   8210c:	6a0b      	ldr	r3, [r1, #32]
   8210e:	6203      	str	r3, [r0, #32]
   82110:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   82112:	6243      	str	r3, [r0, #36]	; 0x24
   82114:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   82116:	6283      	str	r3, [r0, #40]	; 0x28
   82118:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8211a:	62c3      	str	r3, [r0, #44]	; 0x2c
   8211c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8211e:	6303      	str	r3, [r0, #48]	; 0x30
   82120:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   82122:	6343      	str	r3, [r0, #52]	; 0x34
   82124:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   82126:	6383      	str	r3, [r0, #56]	; 0x38
   82128:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8212a:	63c3      	str	r3, [r0, #60]	; 0x3c
   8212c:	3040      	adds	r0, #64	; 0x40
   8212e:	3140      	adds	r1, #64	; 0x40
   82130:	3a40      	subs	r2, #64	; 0x40
   82132:	d2db      	bcs.n	820ec <memcpy+0x10>
   82134:	3230      	adds	r2, #48	; 0x30
   82136:	d30b      	bcc.n	82150 <memcpy+0x74>
   82138:	680b      	ldr	r3, [r1, #0]
   8213a:	6003      	str	r3, [r0, #0]
   8213c:	684b      	ldr	r3, [r1, #4]
   8213e:	6043      	str	r3, [r0, #4]
   82140:	688b      	ldr	r3, [r1, #8]
   82142:	6083      	str	r3, [r0, #8]
   82144:	68cb      	ldr	r3, [r1, #12]
   82146:	60c3      	str	r3, [r0, #12]
   82148:	3010      	adds	r0, #16
   8214a:	3110      	adds	r1, #16
   8214c:	3a10      	subs	r2, #16
   8214e:	d2f3      	bcs.n	82138 <memcpy+0x5c>
   82150:	320c      	adds	r2, #12
   82152:	d305      	bcc.n	82160 <memcpy+0x84>
   82154:	f851 3b04 	ldr.w	r3, [r1], #4
   82158:	f840 3b04 	str.w	r3, [r0], #4
   8215c:	3a04      	subs	r2, #4
   8215e:	d2f9      	bcs.n	82154 <memcpy+0x78>
   82160:	3204      	adds	r2, #4
   82162:	d008      	beq.n	82176 <memcpy+0x9a>
   82164:	07d2      	lsls	r2, r2, #31
   82166:	bf1c      	itt	ne
   82168:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8216c:	f800 3b01 	strbne.w	r3, [r0], #1
   82170:	d301      	bcc.n	82176 <memcpy+0x9a>
   82172:	880b      	ldrh	r3, [r1, #0]
   82174:	8003      	strh	r3, [r0, #0]
   82176:	4660      	mov	r0, ip
   82178:	4770      	bx	lr
   8217a:	bf00      	nop
   8217c:	2a08      	cmp	r2, #8
   8217e:	d313      	bcc.n	821a8 <memcpy+0xcc>
   82180:	078b      	lsls	r3, r1, #30
   82182:	d0b1      	beq.n	820e8 <memcpy+0xc>
   82184:	f010 0303 	ands.w	r3, r0, #3
   82188:	d0ae      	beq.n	820e8 <memcpy+0xc>
   8218a:	f1c3 0304 	rsb	r3, r3, #4
   8218e:	1ad2      	subs	r2, r2, r3
   82190:	07db      	lsls	r3, r3, #31
   82192:	bf1c      	itt	ne
   82194:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82198:	f800 3b01 	strbne.w	r3, [r0], #1
   8219c:	d3a4      	bcc.n	820e8 <memcpy+0xc>
   8219e:	f831 3b02 	ldrh.w	r3, [r1], #2
   821a2:	f820 3b02 	strh.w	r3, [r0], #2
   821a6:	e79f      	b.n	820e8 <memcpy+0xc>
   821a8:	3a04      	subs	r2, #4
   821aa:	d3d9      	bcc.n	82160 <memcpy+0x84>
   821ac:	3a01      	subs	r2, #1
   821ae:	f811 3b01 	ldrb.w	r3, [r1], #1
   821b2:	f800 3b01 	strb.w	r3, [r0], #1
   821b6:	d2f9      	bcs.n	821ac <memcpy+0xd0>
   821b8:	780b      	ldrb	r3, [r1, #0]
   821ba:	7003      	strb	r3, [r0, #0]
   821bc:	784b      	ldrb	r3, [r1, #1]
   821be:	7043      	strb	r3, [r0, #1]
   821c0:	788b      	ldrb	r3, [r1, #2]
   821c2:	7083      	strb	r3, [r0, #2]
   821c4:	4660      	mov	r0, ip
   821c6:	4770      	bx	lr

000821c8 <memmove>:
   821c8:	4288      	cmp	r0, r1
   821ca:	b5f0      	push	{r4, r5, r6, r7, lr}
   821cc:	d90d      	bls.n	821ea <memmove+0x22>
   821ce:	188b      	adds	r3, r1, r2
   821d0:	4298      	cmp	r0, r3
   821d2:	d20a      	bcs.n	821ea <memmove+0x22>
   821d4:	1884      	adds	r4, r0, r2
   821d6:	2a00      	cmp	r2, #0
   821d8:	d051      	beq.n	8227e <memmove+0xb6>
   821da:	4622      	mov	r2, r4
   821dc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   821e0:	4299      	cmp	r1, r3
   821e2:	f802 4d01 	strb.w	r4, [r2, #-1]!
   821e6:	d1f9      	bne.n	821dc <memmove+0x14>
   821e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   821ea:	2a0f      	cmp	r2, #15
   821ec:	d948      	bls.n	82280 <memmove+0xb8>
   821ee:	ea41 0300 	orr.w	r3, r1, r0
   821f2:	079b      	lsls	r3, r3, #30
   821f4:	d146      	bne.n	82284 <memmove+0xbc>
   821f6:	4615      	mov	r5, r2
   821f8:	f100 0410 	add.w	r4, r0, #16
   821fc:	f101 0310 	add.w	r3, r1, #16
   82200:	f853 6c10 	ldr.w	r6, [r3, #-16]
   82204:	3d10      	subs	r5, #16
   82206:	f844 6c10 	str.w	r6, [r4, #-16]
   8220a:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   8220e:	2d0f      	cmp	r5, #15
   82210:	f844 6c0c 	str.w	r6, [r4, #-12]
   82214:	f853 6c08 	ldr.w	r6, [r3, #-8]
   82218:	f104 0410 	add.w	r4, r4, #16
   8221c:	f844 6c18 	str.w	r6, [r4, #-24]
   82220:	f853 6c04 	ldr.w	r6, [r3, #-4]
   82224:	f103 0310 	add.w	r3, r3, #16
   82228:	f844 6c14 	str.w	r6, [r4, #-20]
   8222c:	d8e8      	bhi.n	82200 <memmove+0x38>
   8222e:	f1a2 0310 	sub.w	r3, r2, #16
   82232:	f023 030f 	bic.w	r3, r3, #15
   82236:	f002 0e0f 	and.w	lr, r2, #15
   8223a:	3310      	adds	r3, #16
   8223c:	f1be 0f03 	cmp.w	lr, #3
   82240:	4419      	add	r1, r3
   82242:	4403      	add	r3, r0
   82244:	d921      	bls.n	8228a <memmove+0xc2>
   82246:	460e      	mov	r6, r1
   82248:	4674      	mov	r4, lr
   8224a:	1f1d      	subs	r5, r3, #4
   8224c:	f856 7b04 	ldr.w	r7, [r6], #4
   82250:	3c04      	subs	r4, #4
   82252:	2c03      	cmp	r4, #3
   82254:	f845 7f04 	str.w	r7, [r5, #4]!
   82258:	d8f8      	bhi.n	8224c <memmove+0x84>
   8225a:	f1ae 0404 	sub.w	r4, lr, #4
   8225e:	f024 0403 	bic.w	r4, r4, #3
   82262:	3404      	adds	r4, #4
   82264:	4421      	add	r1, r4
   82266:	4423      	add	r3, r4
   82268:	f002 0203 	and.w	r2, r2, #3
   8226c:	b162      	cbz	r2, 82288 <memmove+0xc0>
   8226e:	3b01      	subs	r3, #1
   82270:	440a      	add	r2, r1
   82272:	f811 4b01 	ldrb.w	r4, [r1], #1
   82276:	428a      	cmp	r2, r1
   82278:	f803 4f01 	strb.w	r4, [r3, #1]!
   8227c:	d1f9      	bne.n	82272 <memmove+0xaa>
   8227e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82280:	4603      	mov	r3, r0
   82282:	e7f3      	b.n	8226c <memmove+0xa4>
   82284:	4603      	mov	r3, r0
   82286:	e7f2      	b.n	8226e <memmove+0xa6>
   82288:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8228a:	4672      	mov	r2, lr
   8228c:	e7ee      	b.n	8226c <memmove+0xa4>
   8228e:	bf00      	nop

00082290 <__malloc_lock>:
   82290:	4801      	ldr	r0, [pc, #4]	; (82298 <__malloc_lock+0x8>)
   82292:	f7ff bbbf 	b.w	81a14 <__retarget_lock_acquire_recursive>
   82296:	bf00      	nop
   82298:	20000cd0 	.word	0x20000cd0

0008229c <__malloc_unlock>:
   8229c:	4801      	ldr	r0, [pc, #4]	; (822a4 <__malloc_unlock+0x8>)
   8229e:	f7ff bbbb 	b.w	81a18 <__retarget_lock_release_recursive>
   822a2:	bf00      	nop
   822a4:	20000cd0 	.word	0x20000cd0

000822a8 <_realloc_r>:
   822a8:	2900      	cmp	r1, #0
   822aa:	f000 8094 	beq.w	823d6 <_realloc_r+0x12e>
   822ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   822b2:	460c      	mov	r4, r1
   822b4:	4615      	mov	r5, r2
   822b6:	b083      	sub	sp, #12
   822b8:	4680      	mov	r8, r0
   822ba:	f105 060b 	add.w	r6, r5, #11
   822be:	f7ff ffe7 	bl	82290 <__malloc_lock>
   822c2:	f854 ec04 	ldr.w	lr, [r4, #-4]
   822c6:	2e16      	cmp	r6, #22
   822c8:	f02e 0703 	bic.w	r7, lr, #3
   822cc:	f1a4 0908 	sub.w	r9, r4, #8
   822d0:	d83c      	bhi.n	8234c <_realloc_r+0xa4>
   822d2:	2210      	movs	r2, #16
   822d4:	4616      	mov	r6, r2
   822d6:	42b5      	cmp	r5, r6
   822d8:	d83d      	bhi.n	82356 <_realloc_r+0xae>
   822da:	4297      	cmp	r7, r2
   822dc:	da43      	bge.n	82366 <_realloc_r+0xbe>
   822de:	4bc6      	ldr	r3, [pc, #792]	; (825f8 <_realloc_r+0x350>)
   822e0:	eb09 0007 	add.w	r0, r9, r7
   822e4:	6899      	ldr	r1, [r3, #8]
   822e6:	4288      	cmp	r0, r1
   822e8:	f000 80c3 	beq.w	82472 <_realloc_r+0x1ca>
   822ec:	6843      	ldr	r3, [r0, #4]
   822ee:	f023 0101 	bic.w	r1, r3, #1
   822f2:	4401      	add	r1, r0
   822f4:	6849      	ldr	r1, [r1, #4]
   822f6:	07c9      	lsls	r1, r1, #31
   822f8:	d54d      	bpl.n	82396 <_realloc_r+0xee>
   822fa:	f01e 0f01 	tst.w	lr, #1
   822fe:	f000 809b 	beq.w	82438 <_realloc_r+0x190>
   82302:	4629      	mov	r1, r5
   82304:	4640      	mov	r0, r8
   82306:	f7ff fc01 	bl	81b0c <_malloc_r>
   8230a:	4605      	mov	r5, r0
   8230c:	2800      	cmp	r0, #0
   8230e:	d03b      	beq.n	82388 <_realloc_r+0xe0>
   82310:	f854 3c04 	ldr.w	r3, [r4, #-4]
   82314:	f1a0 0208 	sub.w	r2, r0, #8
   82318:	f023 0301 	bic.w	r3, r3, #1
   8231c:	444b      	add	r3, r9
   8231e:	429a      	cmp	r2, r3
   82320:	f000 812b 	beq.w	8257a <_realloc_r+0x2d2>
   82324:	1f3a      	subs	r2, r7, #4
   82326:	2a24      	cmp	r2, #36	; 0x24
   82328:	f200 8118 	bhi.w	8255c <_realloc_r+0x2b4>
   8232c:	2a13      	cmp	r2, #19
   8232e:	f200 80eb 	bhi.w	82508 <_realloc_r+0x260>
   82332:	4603      	mov	r3, r0
   82334:	4622      	mov	r2, r4
   82336:	6811      	ldr	r1, [r2, #0]
   82338:	6019      	str	r1, [r3, #0]
   8233a:	6851      	ldr	r1, [r2, #4]
   8233c:	6059      	str	r1, [r3, #4]
   8233e:	6892      	ldr	r2, [r2, #8]
   82340:	609a      	str	r2, [r3, #8]
   82342:	4621      	mov	r1, r4
   82344:	4640      	mov	r0, r8
   82346:	f7ff f8d9 	bl	814fc <_free_r>
   8234a:	e01d      	b.n	82388 <_realloc_r+0xe0>
   8234c:	f026 0607 	bic.w	r6, r6, #7
   82350:	2e00      	cmp	r6, #0
   82352:	4632      	mov	r2, r6
   82354:	dabf      	bge.n	822d6 <_realloc_r+0x2e>
   82356:	2500      	movs	r5, #0
   82358:	230c      	movs	r3, #12
   8235a:	4628      	mov	r0, r5
   8235c:	f8c8 3000 	str.w	r3, [r8]
   82360:	b003      	add	sp, #12
   82362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82366:	4625      	mov	r5, r4
   82368:	1bbb      	subs	r3, r7, r6
   8236a:	2b0f      	cmp	r3, #15
   8236c:	f8d9 2004 	ldr.w	r2, [r9, #4]
   82370:	d81d      	bhi.n	823ae <_realloc_r+0x106>
   82372:	f002 0201 	and.w	r2, r2, #1
   82376:	433a      	orrs	r2, r7
   82378:	eb09 0107 	add.w	r1, r9, r7
   8237c:	f8c9 2004 	str.w	r2, [r9, #4]
   82380:	684b      	ldr	r3, [r1, #4]
   82382:	f043 0301 	orr.w	r3, r3, #1
   82386:	604b      	str	r3, [r1, #4]
   82388:	4640      	mov	r0, r8
   8238a:	f7ff ff87 	bl	8229c <__malloc_unlock>
   8238e:	4628      	mov	r0, r5
   82390:	b003      	add	sp, #12
   82392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82396:	f023 0303 	bic.w	r3, r3, #3
   8239a:	18f9      	adds	r1, r7, r3
   8239c:	4291      	cmp	r1, r2
   8239e:	db1d      	blt.n	823dc <_realloc_r+0x134>
   823a0:	68c3      	ldr	r3, [r0, #12]
   823a2:	6882      	ldr	r2, [r0, #8]
   823a4:	4625      	mov	r5, r4
   823a6:	60d3      	str	r3, [r2, #12]
   823a8:	460f      	mov	r7, r1
   823aa:	609a      	str	r2, [r3, #8]
   823ac:	e7dc      	b.n	82368 <_realloc_r+0xc0>
   823ae:	f002 0201 	and.w	r2, r2, #1
   823b2:	eb09 0106 	add.w	r1, r9, r6
   823b6:	f043 0301 	orr.w	r3, r3, #1
   823ba:	4332      	orrs	r2, r6
   823bc:	f8c9 2004 	str.w	r2, [r9, #4]
   823c0:	444f      	add	r7, r9
   823c2:	604b      	str	r3, [r1, #4]
   823c4:	687b      	ldr	r3, [r7, #4]
   823c6:	3108      	adds	r1, #8
   823c8:	f043 0301 	orr.w	r3, r3, #1
   823cc:	607b      	str	r3, [r7, #4]
   823ce:	4640      	mov	r0, r8
   823d0:	f7ff f894 	bl	814fc <_free_r>
   823d4:	e7d8      	b.n	82388 <_realloc_r+0xe0>
   823d6:	4611      	mov	r1, r2
   823d8:	f7ff bb98 	b.w	81b0c <_malloc_r>
   823dc:	f01e 0f01 	tst.w	lr, #1
   823e0:	d18f      	bne.n	82302 <_realloc_r+0x5a>
   823e2:	f854 1c08 	ldr.w	r1, [r4, #-8]
   823e6:	eba9 0a01 	sub.w	sl, r9, r1
   823ea:	f8da 1004 	ldr.w	r1, [sl, #4]
   823ee:	f021 0103 	bic.w	r1, r1, #3
   823f2:	440b      	add	r3, r1
   823f4:	443b      	add	r3, r7
   823f6:	4293      	cmp	r3, r2
   823f8:	db26      	blt.n	82448 <_realloc_r+0x1a0>
   823fa:	4655      	mov	r5, sl
   823fc:	68c1      	ldr	r1, [r0, #12]
   823fe:	6880      	ldr	r0, [r0, #8]
   82400:	1f3a      	subs	r2, r7, #4
   82402:	60c1      	str	r1, [r0, #12]
   82404:	6088      	str	r0, [r1, #8]
   82406:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8240a:	f8da 100c 	ldr.w	r1, [sl, #12]
   8240e:	2a24      	cmp	r2, #36	; 0x24
   82410:	60c1      	str	r1, [r0, #12]
   82412:	6088      	str	r0, [r1, #8]
   82414:	d826      	bhi.n	82464 <_realloc_r+0x1bc>
   82416:	2a13      	cmp	r2, #19
   82418:	f240 8081 	bls.w	8251e <_realloc_r+0x276>
   8241c:	6821      	ldr	r1, [r4, #0]
   8241e:	2a1b      	cmp	r2, #27
   82420:	f8ca 1008 	str.w	r1, [sl, #8]
   82424:	6861      	ldr	r1, [r4, #4]
   82426:	f8ca 100c 	str.w	r1, [sl, #12]
   8242a:	f200 80ad 	bhi.w	82588 <_realloc_r+0x2e0>
   8242e:	f104 0008 	add.w	r0, r4, #8
   82432:	f10a 0210 	add.w	r2, sl, #16
   82436:	e074      	b.n	82522 <_realloc_r+0x27a>
   82438:	f854 3c08 	ldr.w	r3, [r4, #-8]
   8243c:	eba9 0a03 	sub.w	sl, r9, r3
   82440:	f8da 1004 	ldr.w	r1, [sl, #4]
   82444:	f021 0103 	bic.w	r1, r1, #3
   82448:	187b      	adds	r3, r7, r1
   8244a:	4293      	cmp	r3, r2
   8244c:	f6ff af59 	blt.w	82302 <_realloc_r+0x5a>
   82450:	4655      	mov	r5, sl
   82452:	f8da 100c 	ldr.w	r1, [sl, #12]
   82456:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8245a:	1f3a      	subs	r2, r7, #4
   8245c:	2a24      	cmp	r2, #36	; 0x24
   8245e:	60c1      	str	r1, [r0, #12]
   82460:	6088      	str	r0, [r1, #8]
   82462:	d9d8      	bls.n	82416 <_realloc_r+0x16e>
   82464:	4621      	mov	r1, r4
   82466:	4628      	mov	r0, r5
   82468:	461f      	mov	r7, r3
   8246a:	46d1      	mov	r9, sl
   8246c:	f7ff feac 	bl	821c8 <memmove>
   82470:	e77a      	b.n	82368 <_realloc_r+0xc0>
   82472:	6841      	ldr	r1, [r0, #4]
   82474:	f106 0010 	add.w	r0, r6, #16
   82478:	f021 0b03 	bic.w	fp, r1, #3
   8247c:	44bb      	add	fp, r7
   8247e:	4583      	cmp	fp, r0
   82480:	da58      	bge.n	82534 <_realloc_r+0x28c>
   82482:	f01e 0f01 	tst.w	lr, #1
   82486:	f47f af3c 	bne.w	82302 <_realloc_r+0x5a>
   8248a:	f854 1c08 	ldr.w	r1, [r4, #-8]
   8248e:	eba9 0a01 	sub.w	sl, r9, r1
   82492:	f8da 1004 	ldr.w	r1, [sl, #4]
   82496:	f021 0103 	bic.w	r1, r1, #3
   8249a:	448b      	add	fp, r1
   8249c:	4558      	cmp	r0, fp
   8249e:	dcd3      	bgt.n	82448 <_realloc_r+0x1a0>
   824a0:	4655      	mov	r5, sl
   824a2:	f8da 100c 	ldr.w	r1, [sl, #12]
   824a6:	f855 0f08 	ldr.w	r0, [r5, #8]!
   824aa:	1f3a      	subs	r2, r7, #4
   824ac:	2a24      	cmp	r2, #36	; 0x24
   824ae:	60c1      	str	r1, [r0, #12]
   824b0:	6088      	str	r0, [r1, #8]
   824b2:	f200 808d 	bhi.w	825d0 <_realloc_r+0x328>
   824b6:	2a13      	cmp	r2, #19
   824b8:	f240 8087 	bls.w	825ca <_realloc_r+0x322>
   824bc:	6821      	ldr	r1, [r4, #0]
   824be:	2a1b      	cmp	r2, #27
   824c0:	f8ca 1008 	str.w	r1, [sl, #8]
   824c4:	6861      	ldr	r1, [r4, #4]
   824c6:	f8ca 100c 	str.w	r1, [sl, #12]
   824ca:	f200 8088 	bhi.w	825de <_realloc_r+0x336>
   824ce:	f104 0108 	add.w	r1, r4, #8
   824d2:	f10a 0210 	add.w	r2, sl, #16
   824d6:	6808      	ldr	r0, [r1, #0]
   824d8:	6010      	str	r0, [r2, #0]
   824da:	6848      	ldr	r0, [r1, #4]
   824dc:	6050      	str	r0, [r2, #4]
   824de:	6889      	ldr	r1, [r1, #8]
   824e0:	6091      	str	r1, [r2, #8]
   824e2:	ebab 0206 	sub.w	r2, fp, r6
   824e6:	eb0a 0106 	add.w	r1, sl, r6
   824ea:	f042 0201 	orr.w	r2, r2, #1
   824ee:	6099      	str	r1, [r3, #8]
   824f0:	604a      	str	r2, [r1, #4]
   824f2:	f8da 3004 	ldr.w	r3, [sl, #4]
   824f6:	4640      	mov	r0, r8
   824f8:	f003 0301 	and.w	r3, r3, #1
   824fc:	431e      	orrs	r6, r3
   824fe:	f8ca 6004 	str.w	r6, [sl, #4]
   82502:	f7ff fecb 	bl	8229c <__malloc_unlock>
   82506:	e742      	b.n	8238e <_realloc_r+0xe6>
   82508:	6823      	ldr	r3, [r4, #0]
   8250a:	2a1b      	cmp	r2, #27
   8250c:	6003      	str	r3, [r0, #0]
   8250e:	6863      	ldr	r3, [r4, #4]
   82510:	6043      	str	r3, [r0, #4]
   82512:	d827      	bhi.n	82564 <_realloc_r+0x2bc>
   82514:	f100 0308 	add.w	r3, r0, #8
   82518:	f104 0208 	add.w	r2, r4, #8
   8251c:	e70b      	b.n	82336 <_realloc_r+0x8e>
   8251e:	4620      	mov	r0, r4
   82520:	462a      	mov	r2, r5
   82522:	6801      	ldr	r1, [r0, #0]
   82524:	461f      	mov	r7, r3
   82526:	6011      	str	r1, [r2, #0]
   82528:	6841      	ldr	r1, [r0, #4]
   8252a:	46d1      	mov	r9, sl
   8252c:	6051      	str	r1, [r2, #4]
   8252e:	6883      	ldr	r3, [r0, #8]
   82530:	6093      	str	r3, [r2, #8]
   82532:	e719      	b.n	82368 <_realloc_r+0xc0>
   82534:	ebab 0b06 	sub.w	fp, fp, r6
   82538:	eb09 0106 	add.w	r1, r9, r6
   8253c:	f04b 0201 	orr.w	r2, fp, #1
   82540:	6099      	str	r1, [r3, #8]
   82542:	604a      	str	r2, [r1, #4]
   82544:	f854 3c04 	ldr.w	r3, [r4, #-4]
   82548:	4640      	mov	r0, r8
   8254a:	f003 0301 	and.w	r3, r3, #1
   8254e:	431e      	orrs	r6, r3
   82550:	f844 6c04 	str.w	r6, [r4, #-4]
   82554:	f7ff fea2 	bl	8229c <__malloc_unlock>
   82558:	4625      	mov	r5, r4
   8255a:	e718      	b.n	8238e <_realloc_r+0xe6>
   8255c:	4621      	mov	r1, r4
   8255e:	f7ff fe33 	bl	821c8 <memmove>
   82562:	e6ee      	b.n	82342 <_realloc_r+0x9a>
   82564:	68a3      	ldr	r3, [r4, #8]
   82566:	2a24      	cmp	r2, #36	; 0x24
   82568:	6083      	str	r3, [r0, #8]
   8256a:	68e3      	ldr	r3, [r4, #12]
   8256c:	60c3      	str	r3, [r0, #12]
   8256e:	d018      	beq.n	825a2 <_realloc_r+0x2fa>
   82570:	f100 0310 	add.w	r3, r0, #16
   82574:	f104 0210 	add.w	r2, r4, #16
   82578:	e6dd      	b.n	82336 <_realloc_r+0x8e>
   8257a:	f850 3c04 	ldr.w	r3, [r0, #-4]
   8257e:	4625      	mov	r5, r4
   82580:	f023 0303 	bic.w	r3, r3, #3
   82584:	441f      	add	r7, r3
   82586:	e6ef      	b.n	82368 <_realloc_r+0xc0>
   82588:	68a1      	ldr	r1, [r4, #8]
   8258a:	2a24      	cmp	r2, #36	; 0x24
   8258c:	f8ca 1010 	str.w	r1, [sl, #16]
   82590:	68e1      	ldr	r1, [r4, #12]
   82592:	f8ca 1014 	str.w	r1, [sl, #20]
   82596:	d00d      	beq.n	825b4 <_realloc_r+0x30c>
   82598:	f104 0010 	add.w	r0, r4, #16
   8259c:	f10a 0218 	add.w	r2, sl, #24
   825a0:	e7bf      	b.n	82522 <_realloc_r+0x27a>
   825a2:	6922      	ldr	r2, [r4, #16]
   825a4:	f100 0318 	add.w	r3, r0, #24
   825a8:	6102      	str	r2, [r0, #16]
   825aa:	6961      	ldr	r1, [r4, #20]
   825ac:	f104 0218 	add.w	r2, r4, #24
   825b0:	6141      	str	r1, [r0, #20]
   825b2:	e6c0      	b.n	82336 <_realloc_r+0x8e>
   825b4:	6922      	ldr	r2, [r4, #16]
   825b6:	f104 0018 	add.w	r0, r4, #24
   825ba:	f8ca 2018 	str.w	r2, [sl, #24]
   825be:	6961      	ldr	r1, [r4, #20]
   825c0:	f10a 0220 	add.w	r2, sl, #32
   825c4:	f8ca 101c 	str.w	r1, [sl, #28]
   825c8:	e7ab      	b.n	82522 <_realloc_r+0x27a>
   825ca:	4621      	mov	r1, r4
   825cc:	462a      	mov	r2, r5
   825ce:	e782      	b.n	824d6 <_realloc_r+0x22e>
   825d0:	4621      	mov	r1, r4
   825d2:	4628      	mov	r0, r5
   825d4:	9301      	str	r3, [sp, #4]
   825d6:	f7ff fdf7 	bl	821c8 <memmove>
   825da:	9b01      	ldr	r3, [sp, #4]
   825dc:	e781      	b.n	824e2 <_realloc_r+0x23a>
   825de:	68a1      	ldr	r1, [r4, #8]
   825e0:	2a24      	cmp	r2, #36	; 0x24
   825e2:	f8ca 1010 	str.w	r1, [sl, #16]
   825e6:	68e1      	ldr	r1, [r4, #12]
   825e8:	f8ca 1014 	str.w	r1, [sl, #20]
   825ec:	d006      	beq.n	825fc <_realloc_r+0x354>
   825ee:	f104 0110 	add.w	r1, r4, #16
   825f2:	f10a 0218 	add.w	r2, sl, #24
   825f6:	e76e      	b.n	824d6 <_realloc_r+0x22e>
   825f8:	20000434 	.word	0x20000434
   825fc:	6922      	ldr	r2, [r4, #16]
   825fe:	f104 0118 	add.w	r1, r4, #24
   82602:	f8ca 2018 	str.w	r2, [sl, #24]
   82606:	6960      	ldr	r0, [r4, #20]
   82608:	f10a 0220 	add.w	r2, sl, #32
   8260c:	f8ca 001c 	str.w	r0, [sl, #28]
   82610:	e761      	b.n	824d6 <_realloc_r+0x22e>
   82612:	bf00      	nop

00082614 <_sbrk_r>:
   82614:	b538      	push	{r3, r4, r5, lr}
   82616:	2300      	movs	r3, #0
   82618:	4c06      	ldr	r4, [pc, #24]	; (82634 <_sbrk_r+0x20>)
   8261a:	4605      	mov	r5, r0
   8261c:	4608      	mov	r0, r1
   8261e:	6023      	str	r3, [r4, #0]
   82620:	f7fd ff32 	bl	80488 <_sbrk>
   82624:	1c43      	adds	r3, r0, #1
   82626:	d000      	beq.n	8262a <_sbrk_r+0x16>
   82628:	bd38      	pop	{r3, r4, r5, pc}
   8262a:	6823      	ldr	r3, [r4, #0]
   8262c:	2b00      	cmp	r3, #0
   8262e:	d0fb      	beq.n	82628 <_sbrk_r+0x14>
   82630:	602b      	str	r3, [r5, #0]
   82632:	bd38      	pop	{r3, r4, r5, pc}
   82634:	20000ce4 	.word	0x20000ce4

00082638 <__sread>:
   82638:	b510      	push	{r4, lr}
   8263a:	460c      	mov	r4, r1
   8263c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   82640:	f000 f966 	bl	82910 <_read_r>
   82644:	2800      	cmp	r0, #0
   82646:	db03      	blt.n	82650 <__sread+0x18>
   82648:	6d23      	ldr	r3, [r4, #80]	; 0x50
   8264a:	4403      	add	r3, r0
   8264c:	6523      	str	r3, [r4, #80]	; 0x50
   8264e:	bd10      	pop	{r4, pc}
   82650:	89a3      	ldrh	r3, [r4, #12]
   82652:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   82656:	81a3      	strh	r3, [r4, #12]
   82658:	bd10      	pop	{r4, pc}
   8265a:	bf00      	nop

0008265c <__swrite>:
   8265c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82660:	460c      	mov	r4, r1
   82662:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   82666:	461f      	mov	r7, r3
   82668:	05cb      	lsls	r3, r1, #23
   8266a:	4616      	mov	r6, r2
   8266c:	4605      	mov	r5, r0
   8266e:	d507      	bpl.n	82680 <__swrite+0x24>
   82670:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   82674:	2302      	movs	r3, #2
   82676:	2200      	movs	r2, #0
   82678:	f000 f934 	bl	828e4 <_lseek_r>
   8267c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   82680:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   82684:	81a1      	strh	r1, [r4, #12]
   82686:	463b      	mov	r3, r7
   82688:	4632      	mov	r2, r6
   8268a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   8268e:	4628      	mov	r0, r5
   82690:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82694:	f000 b814 	b.w	826c0 <_write_r>

00082698 <__sseek>:
   82698:	b510      	push	{r4, lr}
   8269a:	460c      	mov	r4, r1
   8269c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   826a0:	f000 f920 	bl	828e4 <_lseek_r>
   826a4:	89a3      	ldrh	r3, [r4, #12]
   826a6:	1c42      	adds	r2, r0, #1
   826a8:	bf0e      	itee	eq
   826aa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   826ae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   826b2:	6520      	strne	r0, [r4, #80]	; 0x50
   826b4:	81a3      	strh	r3, [r4, #12]
   826b6:	bd10      	pop	{r4, pc}

000826b8 <__sclose>:
   826b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   826bc:	f000 b878 	b.w	827b0 <_close_r>

000826c0 <_write_r>:
   826c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   826c2:	460e      	mov	r6, r1
   826c4:	2500      	movs	r5, #0
   826c6:	4c08      	ldr	r4, [pc, #32]	; (826e8 <_write_r+0x28>)
   826c8:	4611      	mov	r1, r2
   826ca:	4607      	mov	r7, r0
   826cc:	461a      	mov	r2, r3
   826ce:	4630      	mov	r0, r6
   826d0:	6025      	str	r5, [r4, #0]
   826d2:	f7fd fefb 	bl	804cc <_write>
   826d6:	1c43      	adds	r3, r0, #1
   826d8:	d000      	beq.n	826dc <_write_r+0x1c>
   826da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   826dc:	6823      	ldr	r3, [r4, #0]
   826de:	2b00      	cmp	r3, #0
   826e0:	d0fb      	beq.n	826da <_write_r+0x1a>
   826e2:	603b      	str	r3, [r7, #0]
   826e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   826e6:	bf00      	nop
   826e8:	20000ce4 	.word	0x20000ce4

000826ec <__register_exitproc>:
   826ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   826f0:	4d2c      	ldr	r5, [pc, #176]	; (827a4 <__register_exitproc+0xb8>)
   826f2:	4606      	mov	r6, r0
   826f4:	6828      	ldr	r0, [r5, #0]
   826f6:	4698      	mov	r8, r3
   826f8:	460f      	mov	r7, r1
   826fa:	4691      	mov	r9, r2
   826fc:	f7ff f98a 	bl	81a14 <__retarget_lock_acquire_recursive>
   82700:	4b29      	ldr	r3, [pc, #164]	; (827a8 <__register_exitproc+0xbc>)
   82702:	681c      	ldr	r4, [r3, #0]
   82704:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   82708:	2b00      	cmp	r3, #0
   8270a:	d03e      	beq.n	8278a <__register_exitproc+0x9e>
   8270c:	685a      	ldr	r2, [r3, #4]
   8270e:	2a1f      	cmp	r2, #31
   82710:	dc1c      	bgt.n	8274c <__register_exitproc+0x60>
   82712:	f102 0e01 	add.w	lr, r2, #1
   82716:	b176      	cbz	r6, 82736 <__register_exitproc+0x4a>
   82718:	2101      	movs	r1, #1
   8271a:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   8271e:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   82722:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   82726:	4091      	lsls	r1, r2
   82728:	4308      	orrs	r0, r1
   8272a:	2e02      	cmp	r6, #2
   8272c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   82730:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   82734:	d023      	beq.n	8277e <__register_exitproc+0x92>
   82736:	3202      	adds	r2, #2
   82738:	f8c3 e004 	str.w	lr, [r3, #4]
   8273c:	6828      	ldr	r0, [r5, #0]
   8273e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   82742:	f7ff f969 	bl	81a18 <__retarget_lock_release_recursive>
   82746:	2000      	movs	r0, #0
   82748:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8274c:	4b17      	ldr	r3, [pc, #92]	; (827ac <__register_exitproc+0xc0>)
   8274e:	b30b      	cbz	r3, 82794 <__register_exitproc+0xa8>
   82750:	f44f 70c8 	mov.w	r0, #400	; 0x190
   82754:	f3af 8000 	nop.w
   82758:	4603      	mov	r3, r0
   8275a:	b1d8      	cbz	r0, 82794 <__register_exitproc+0xa8>
   8275c:	2000      	movs	r0, #0
   8275e:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   82762:	f04f 0e01 	mov.w	lr, #1
   82766:	6058      	str	r0, [r3, #4]
   82768:	6019      	str	r1, [r3, #0]
   8276a:	4602      	mov	r2, r0
   8276c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   82770:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   82774:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   82778:	2e00      	cmp	r6, #0
   8277a:	d0dc      	beq.n	82736 <__register_exitproc+0x4a>
   8277c:	e7cc      	b.n	82718 <__register_exitproc+0x2c>
   8277e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   82782:	4301      	orrs	r1, r0
   82784:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   82788:	e7d5      	b.n	82736 <__register_exitproc+0x4a>
   8278a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   8278e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   82792:	e7bb      	b.n	8270c <__register_exitproc+0x20>
   82794:	6828      	ldr	r0, [r5, #0]
   82796:	f7ff f93f 	bl	81a18 <__retarget_lock_release_recursive>
   8279a:	f04f 30ff 	mov.w	r0, #4294967295
   8279e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   827a2:	bf00      	nop
   827a4:	20000430 	.word	0x20000430
   827a8:	0008295c 	.word	0x0008295c
   827ac:	00000000 	.word	0x00000000

000827b0 <_close_r>:
   827b0:	b538      	push	{r3, r4, r5, lr}
   827b2:	2300      	movs	r3, #0
   827b4:	4c06      	ldr	r4, [pc, #24]	; (827d0 <_close_r+0x20>)
   827b6:	4605      	mov	r5, r0
   827b8:	4608      	mov	r0, r1
   827ba:	6023      	str	r3, [r4, #0]
   827bc:	f7fd fe7a 	bl	804b4 <_close>
   827c0:	1c43      	adds	r3, r0, #1
   827c2:	d000      	beq.n	827c6 <_close_r+0x16>
   827c4:	bd38      	pop	{r3, r4, r5, pc}
   827c6:	6823      	ldr	r3, [r4, #0]
   827c8:	2b00      	cmp	r3, #0
   827ca:	d0fb      	beq.n	827c4 <_close_r+0x14>
   827cc:	602b      	str	r3, [r5, #0]
   827ce:	bd38      	pop	{r3, r4, r5, pc}
   827d0:	20000ce4 	.word	0x20000ce4

000827d4 <_fclose_r>:
   827d4:	b570      	push	{r4, r5, r6, lr}
   827d6:	b159      	cbz	r1, 827f0 <_fclose_r+0x1c>
   827d8:	4605      	mov	r5, r0
   827da:	460c      	mov	r4, r1
   827dc:	b110      	cbz	r0, 827e4 <_fclose_r+0x10>
   827de:	6b83      	ldr	r3, [r0, #56]	; 0x38
   827e0:	2b00      	cmp	r3, #0
   827e2:	d03c      	beq.n	8285e <_fclose_r+0x8a>
   827e4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   827e6:	07d8      	lsls	r0, r3, #31
   827e8:	d505      	bpl.n	827f6 <_fclose_r+0x22>
   827ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   827ee:	b92b      	cbnz	r3, 827fc <_fclose_r+0x28>
   827f0:	2600      	movs	r6, #0
   827f2:	4630      	mov	r0, r6
   827f4:	bd70      	pop	{r4, r5, r6, pc}
   827f6:	89a3      	ldrh	r3, [r4, #12]
   827f8:	0599      	lsls	r1, r3, #22
   827fa:	d53c      	bpl.n	82876 <_fclose_r+0xa2>
   827fc:	4621      	mov	r1, r4
   827fe:	4628      	mov	r0, r5
   82800:	f7fe fce2 	bl	811c8 <__sflush_r>
   82804:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   82806:	4606      	mov	r6, r0
   82808:	b133      	cbz	r3, 82818 <_fclose_r+0x44>
   8280a:	69e1      	ldr	r1, [r4, #28]
   8280c:	4628      	mov	r0, r5
   8280e:	4798      	blx	r3
   82810:	2800      	cmp	r0, #0
   82812:	bfb8      	it	lt
   82814:	f04f 36ff 	movlt.w	r6, #4294967295
   82818:	89a3      	ldrh	r3, [r4, #12]
   8281a:	061a      	lsls	r2, r3, #24
   8281c:	d422      	bmi.n	82864 <_fclose_r+0x90>
   8281e:	6b21      	ldr	r1, [r4, #48]	; 0x30
   82820:	b141      	cbz	r1, 82834 <_fclose_r+0x60>
   82822:	f104 0340 	add.w	r3, r4, #64	; 0x40
   82826:	4299      	cmp	r1, r3
   82828:	d002      	beq.n	82830 <_fclose_r+0x5c>
   8282a:	4628      	mov	r0, r5
   8282c:	f7fe fe66 	bl	814fc <_free_r>
   82830:	2300      	movs	r3, #0
   82832:	6323      	str	r3, [r4, #48]	; 0x30
   82834:	6c61      	ldr	r1, [r4, #68]	; 0x44
   82836:	b121      	cbz	r1, 82842 <_fclose_r+0x6e>
   82838:	4628      	mov	r0, r5
   8283a:	f7fe fe5f 	bl	814fc <_free_r>
   8283e:	2300      	movs	r3, #0
   82840:	6463      	str	r3, [r4, #68]	; 0x44
   82842:	f7fe fde5 	bl	81410 <__sfp_lock_acquire>
   82846:	2200      	movs	r2, #0
   82848:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8284a:	81a2      	strh	r2, [r4, #12]
   8284c:	07db      	lsls	r3, r3, #31
   8284e:	d50e      	bpl.n	8286e <_fclose_r+0x9a>
   82850:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82852:	f7ff f8dd 	bl	81a10 <__retarget_lock_close_recursive>
   82856:	f7fe fde1 	bl	8141c <__sfp_lock_release>
   8285a:	4630      	mov	r0, r6
   8285c:	bd70      	pop	{r4, r5, r6, pc}
   8285e:	f7fe fda7 	bl	813b0 <__sinit>
   82862:	e7bf      	b.n	827e4 <_fclose_r+0x10>
   82864:	6921      	ldr	r1, [r4, #16]
   82866:	4628      	mov	r0, r5
   82868:	f7fe fe48 	bl	814fc <_free_r>
   8286c:	e7d7      	b.n	8281e <_fclose_r+0x4a>
   8286e:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82870:	f7ff f8d2 	bl	81a18 <__retarget_lock_release_recursive>
   82874:	e7ec      	b.n	82850 <_fclose_r+0x7c>
   82876:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82878:	f7ff f8cc 	bl	81a14 <__retarget_lock_acquire_recursive>
   8287c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82880:	2b00      	cmp	r3, #0
   82882:	d1bb      	bne.n	827fc <_fclose_r+0x28>
   82884:	6e66      	ldr	r6, [r4, #100]	; 0x64
   82886:	f016 0601 	ands.w	r6, r6, #1
   8288a:	d1b1      	bne.n	827f0 <_fclose_r+0x1c>
   8288c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8288e:	f7ff f8c3 	bl	81a18 <__retarget_lock_release_recursive>
   82892:	4630      	mov	r0, r6
   82894:	bd70      	pop	{r4, r5, r6, pc}
   82896:	bf00      	nop

00082898 <_fstat_r>:
   82898:	b570      	push	{r4, r5, r6, lr}
   8289a:	460d      	mov	r5, r1
   8289c:	2300      	movs	r3, #0
   8289e:	4c07      	ldr	r4, [pc, #28]	; (828bc <_fstat_r+0x24>)
   828a0:	4606      	mov	r6, r0
   828a2:	4611      	mov	r1, r2
   828a4:	4628      	mov	r0, r5
   828a6:	6023      	str	r3, [r4, #0]
   828a8:	f7fd fe07 	bl	804ba <_fstat>
   828ac:	1c43      	adds	r3, r0, #1
   828ae:	d000      	beq.n	828b2 <_fstat_r+0x1a>
   828b0:	bd70      	pop	{r4, r5, r6, pc}
   828b2:	6823      	ldr	r3, [r4, #0]
   828b4:	2b00      	cmp	r3, #0
   828b6:	d0fb      	beq.n	828b0 <_fstat_r+0x18>
   828b8:	6033      	str	r3, [r6, #0]
   828ba:	bd70      	pop	{r4, r5, r6, pc}
   828bc:	20000ce4 	.word	0x20000ce4

000828c0 <_isatty_r>:
   828c0:	b538      	push	{r3, r4, r5, lr}
   828c2:	2300      	movs	r3, #0
   828c4:	4c06      	ldr	r4, [pc, #24]	; (828e0 <_isatty_r+0x20>)
   828c6:	4605      	mov	r5, r0
   828c8:	4608      	mov	r0, r1
   828ca:	6023      	str	r3, [r4, #0]
   828cc:	f7fd fdfa 	bl	804c4 <_isatty>
   828d0:	1c43      	adds	r3, r0, #1
   828d2:	d000      	beq.n	828d6 <_isatty_r+0x16>
   828d4:	bd38      	pop	{r3, r4, r5, pc}
   828d6:	6823      	ldr	r3, [r4, #0]
   828d8:	2b00      	cmp	r3, #0
   828da:	d0fb      	beq.n	828d4 <_isatty_r+0x14>
   828dc:	602b      	str	r3, [r5, #0]
   828de:	bd38      	pop	{r3, r4, r5, pc}
   828e0:	20000ce4 	.word	0x20000ce4

000828e4 <_lseek_r>:
   828e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   828e6:	460e      	mov	r6, r1
   828e8:	2500      	movs	r5, #0
   828ea:	4c08      	ldr	r4, [pc, #32]	; (8290c <_lseek_r+0x28>)
   828ec:	4611      	mov	r1, r2
   828ee:	4607      	mov	r7, r0
   828f0:	461a      	mov	r2, r3
   828f2:	4630      	mov	r0, r6
   828f4:	6025      	str	r5, [r4, #0]
   828f6:	f7fd fde7 	bl	804c8 <_lseek>
   828fa:	1c43      	adds	r3, r0, #1
   828fc:	d000      	beq.n	82900 <_lseek_r+0x1c>
   828fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82900:	6823      	ldr	r3, [r4, #0]
   82902:	2b00      	cmp	r3, #0
   82904:	d0fb      	beq.n	828fe <_lseek_r+0x1a>
   82906:	603b      	str	r3, [r7, #0]
   82908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8290a:	bf00      	nop
   8290c:	20000ce4 	.word	0x20000ce4

00082910 <_read_r>:
   82910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82912:	460e      	mov	r6, r1
   82914:	2500      	movs	r5, #0
   82916:	4c08      	ldr	r4, [pc, #32]	; (82938 <_read_r+0x28>)
   82918:	4611      	mov	r1, r2
   8291a:	4607      	mov	r7, r0
   8291c:	461a      	mov	r2, r3
   8291e:	4630      	mov	r0, r6
   82920:	6025      	str	r5, [r4, #0]
   82922:	f7fd fde7 	bl	804f4 <_read>
   82926:	1c43      	adds	r3, r0, #1
   82928:	d000      	beq.n	8292c <_read_r+0x1c>
   8292a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8292c:	6823      	ldr	r3, [r4, #0]
   8292e:	2b00      	cmp	r3, #0
   82930:	d0fb      	beq.n	8292a <_read_r+0x1a>
   82932:	603b      	str	r3, [r7, #0]
   82934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82936:	bf00      	nop
   82938:	20000ce4 	.word	0x20000ce4
   8293c:	54524155 	.word	0x54524155
   82940:	63657220 	.word	0x63657220
   82944:	65766965 	.word	0x65766965
   82948:	66756220 	.word	0x66756220
   8294c:	20726566 	.word	0x20726566
   82950:	6c6c7566 	.word	0x6c6c7566
   82954:	00000000 	.word	0x00000000
   82958:	00294615 	.word	0x00294615

0008295c <_global_impure_ptr>:
   8295c:	20000008 0000000a                       ... ....

00082964 <_init>:
   82964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82966:	bf00      	nop
   82968:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8296a:	bc08      	pop	{r3}
   8296c:	469e      	mov	lr, r3
   8296e:	4770      	bx	lr

00082970 <__init_array_start>:
   82970:	000811a9 	.word	0x000811a9

00082974 <__frame_dummy_init_array_entry>:
   82974:	00080119 00080311                       ........

0008297c <_fini>:
   8297c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8297e:	bf00      	nop
   82980:	bcf8      	pop	{r3, r4, r5, r6, r7}
   82982:	bc08      	pop	{r3}
   82984:	469e      	mov	lr, r3
   82986:	4770      	bx	lr

00082988 <__fini_array_start>:
   82988:	000800f5 	.word	0x000800f5
